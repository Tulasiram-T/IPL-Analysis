<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0818.1050                               -->
<workbook original-version='18.1' source-build='2025.2.2 (20252.25.0818.1050)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='IPLAnalysisDashboard_17574069074210' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='deliveries.csv+ (Multiple Connections)' inline='true' name='federated.1wmub2114k042t11gq8sv123nmgl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deliveries' name='textscan.05yrzmh0vobq9j1b3bqkm1rz6e44'>
            <connection class='textscan' directory='D:/New folder/Labmentix/IPL' filename='deliveries.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='matches (1)' name='textscan.0xf6c4t05med3u1a2gr6o0itd1ol'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='D:/New folder/Labmentix/IPL/matches (1).csv' dataRefreshTime='' directory='D:/New folder/Labmentix/IPL' filename='C:/Users/tulas/AppData/Local/Temp/TableauTemp/0umtb0p0741sk91fkjv450rl1c09/matches (1).csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.05yrzmh0vobq9j1b3bqkm1rz6e44' name='deliveries.csv' table='[D:\New folder\Labmentix\IPL\deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='string' name='batting_team' ordinal='2' />
              <column datatype='string' name='bowling_team' ordinal='3' />
              <column datatype='integer' name='over' ordinal='4' />
              <column datatype='integer' name='ball' ordinal='5' />
              <column datatype='string' name='batsman' ordinal='6' />
              <column datatype='string' name='non_striker' ordinal='7' />
              <column datatype='string' name='bowler' ordinal='8' />
              <column datatype='integer' name='is_super_over' ordinal='9' />
              <column datatype='integer' name='wide_runs' ordinal='10' />
              <column datatype='integer' name='bye_runs' ordinal='11' />
              <column datatype='integer' name='legbye_runs' ordinal='12' />
              <column datatype='integer' name='noball_runs' ordinal='13' />
              <column datatype='integer' name='penalty_runs' ordinal='14' />
              <column datatype='integer' name='batsman_runs' ordinal='15' />
              <column datatype='integer' name='extra_runs' ordinal='16' />
              <column datatype='integer' name='total_runs' ordinal='17' />
              <column datatype='string' name='player_dismissed' ordinal='18' />
              <column datatype='string' name='dismissal_kind' ordinal='19' />
              <column datatype='string' name='fielder' ordinal='20' />
            </columns>
          </relation>
          <relation connection='textscan.0xf6c4t05med3u1a2gr6o0itd1ol' name='matches (1).csv' table='[matches (1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='season' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='string' name='team1' ordinal='4' />
              <column datatype='string' name='team2' ordinal='5' />
              <column datatype='string' name='toss_winner' ordinal='6' />
              <column datatype='string' name='toss_decision' ordinal='7' />
              <column datatype='string' name='result' ordinal='8' />
              <column datatype='integer' name='dl_applied' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='win_by_runs' ordinal='11' />
              <column datatype='integer' name='win_by_wickets' ordinal='12' />
              <column datatype='string' name='player_of_match' ordinal='13' />
              <column datatype='string' name='venue' ordinal='14' />
              <column datatype='string' name='umpire1' ordinal='15' />
              <column datatype='string' name='umpire2' ordinal='16' />
              <column datatype='string' name='umpire3' ordinal='17' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>24</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches (1).csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Wickets' datatype='integer' name='[Calculation_1242430598432407554]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF NOT ISNULL([player_dismissed]) &#13;&#10;AND [dismissal_kind] &lt;&gt; &apos;run out&apos; &#13;&#10;THEN 1 ELSE 0 END' />
      </column>
      <column caption='Valid Deliveries' datatype='integer' name='[Calculation_1242430598457540613]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [wide_runs] = 0 AND [noball_runs] = 0 THEN 1 ELSE 0 END' />
      </column>
      <column caption='Economy Rate' datatype='real' name='[Calculation_1242430598457692166]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_runs]) / (SUM([Calculation_1242430598457540613]) / 6)' />
      </column>
      <column caption='Catches' datatype='integer' name='[Calculation_1242430598460616711]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [dismissal_kind] = &apos;caught&apos; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Run Outs' datatype='integer' name='[Calculation_1242430598460715016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [dismissal_kind] = &apos;run out&apos; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Toss Win &amp; Match Win' datatype='integer' name='[Calculation_1242430598465454089]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [toss_winner] = [winner] THEN 1 ELSE 0 END' />
      </column>
      <column caption='Sixes' datatype='integer' name='[Calculation_1242430598469890058]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [batsman_runs] = 6 THEN 1 ELSE 0 END' />
      </column>
      <column caption='Fours' datatype='integer' name='[Calculation_1242430598470086667]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [batsman_runs] = 4 THEN 1 ELSE 0 END' />
      </column>
      <column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]' role='measure' type='quantitative' />
      <column caption='matches (1).csv' datatype='table' name='[__tableau_internal_object_id__].[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Super Over' datatype='integer' name='[is_super_over]' role='measure' type='quantitative' />
      <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Penalty Runs' datatype='integer' name='[penalty_runs]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/tulas/AppData/Local/Temp/TableauTemp/#TableauTemp_0umhn3p0dxjwgo1ao67qq16u5c8x.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/08/2025 01:50:34 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F' table='[Extract].[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]' type='table' />
            <relation name='matches (1).csv_5DB07054E50E44F4AE4352E33164544B' table='[Extract].[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]' type='table' />
          </relation>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>match_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[match_id]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>match_id</remote-alias>
              <ordinal>0</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2766</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>inning</remote-name>
              <remote-type>20</remote-type>
              <local-name>[inning]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>inning</remote-alias>
              <ordinal>1</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batting_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batting_team]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>batting_team</remote-alias>
              <ordinal>2</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowling_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowling_team]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>bowling_team</remote-alias>
              <ordinal>3</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>over</remote-name>
              <remote-type>20</remote-type>
              <local-name>[over]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>over</remote-alias>
              <ordinal>4</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ball</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ball]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>ball</remote-alias>
              <ordinal>5</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batsman</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batsman]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>batsman</remote-alias>
              <ordinal>6</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1094</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>non_striker</remote-name>
              <remote-type>129</remote-type>
              <local-name>[non_striker]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>non_striker</remote-alias>
              <ordinal>7</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>841</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowler</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowler]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>bowler</remote-alias>
              <ordinal>8</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>876</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_super_over</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_super_over]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>is_super_over</remote-alias>
              <ordinal>9</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wide_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[wide_runs]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>wide_runs</remote-alias>
              <ordinal>10</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bye_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bye_runs]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>bye_runs</remote-alias>
              <ordinal>11</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>legbye_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[legbye_runs]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>legbye_runs</remote-alias>
              <ordinal>12</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>noball_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[noball_runs]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>noball_runs</remote-alias>
              <ordinal>13</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>penalty_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[penalty_runs]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>penalty_runs</remote-alias>
              <ordinal>14</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batsman_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[batsman_runs]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>batsman_runs</remote-alias>
              <ordinal>15</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extra_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[extra_runs]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>extra_runs</remote-alias>
              <ordinal>16</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_runs]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>total_runs</remote-alias>
              <ordinal>17</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>player_dismissed</remote-name>
              <remote-type>129</remote-type>
              <local-name>[player_dismissed]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>player_dismissed</remote-alias>
              <ordinal>18</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1845</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dismissal_kind</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dismissal_kind]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>dismissal_kind</remote-alias>
              <ordinal>19</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fielder</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fielder]</local-name>
              <parent-name>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</parent-name>
              <remote-alias>fielder</remote-alias>
              <ordinal>20</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1402</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>21</ordinal>
              <family>matches (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>636</approx-count>
              <contains-null>true</contains-null>
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>22</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>23</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>24</ordinal>
              <family>matches (1).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>450</approx-count>
              <contains-null>true</contains-null>
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team1]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>team1</remote-alias>
              <ordinal>25</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team2]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>team2</remote-alias>
              <ordinal>26</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toss_winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[toss_winner]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>toss_winner</remote-alias>
              <ordinal>27</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toss_decision</remote-name>
              <remote-type>129</remote-type>
              <local-name>[toss_decision]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>toss_decision</remote-alias>
              <ordinal>28</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>result</remote-name>
              <remote-type>129</remote-type>
              <local-name>[result]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>result</remote-alias>
              <ordinal>29</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dl_applied</remote-name>
              <remote-type>20</remote-type>
              <local-name>[dl_applied]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>dl_applied</remote-alias>
              <ordinal>30</ordinal>
              <family>matches (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[winner]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>winner</remote-alias>
              <ordinal>31</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_by_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[win_by_runs]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>win_by_runs</remote-alias>
              <ordinal>32</ordinal>
              <family>matches (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_by_wickets</remote-name>
              <remote-type>20</remote-type>
              <local-name>[win_by_wickets]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>win_by_wickets</remote-alias>
              <ordinal>33</ordinal>
              <family>matches (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>player_of_match</remote-name>
              <remote-type>129</remote-type>
              <local-name>[player_of_match]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>player_of_match</remote-alias>
              <ordinal>34</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>202</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>venue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[venue]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>venue</remote-alias>
              <ordinal>35</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire1]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>umpire1</remote-alias>
              <ordinal>36</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire2]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>umpire2</remote-alias>
              <ordinal>37</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire3]</local-name>
              <parent-name>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</parent-name>
              <remote-alias>umpire3</remote-alias>
              <ordinal>38</ordinal>
              <family>matches (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='deliveries.csv' id='deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F'>
            <properties context=''>
              <relation connection='textscan.05yrzmh0vobq9j1b3bqkm1rz6e44' name='deliveries.csv' table='[D:\New folder\Labmentix\IPL\deliveries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='integer' name='inning' ordinal='1' />
                  <column datatype='string' name='batting_team' ordinal='2' />
                  <column datatype='string' name='bowling_team' ordinal='3' />
                  <column datatype='integer' name='over' ordinal='4' />
                  <column datatype='integer' name='ball' ordinal='5' />
                  <column datatype='string' name='batsman' ordinal='6' />
                  <column datatype='string' name='non_striker' ordinal='7' />
                  <column datatype='string' name='bowler' ordinal='8' />
                  <column datatype='integer' name='is_super_over' ordinal='9' />
                  <column datatype='integer' name='wide_runs' ordinal='10' />
                  <column datatype='integer' name='bye_runs' ordinal='11' />
                  <column datatype='integer' name='legbye_runs' ordinal='12' />
                  <column datatype='integer' name='noball_runs' ordinal='13' />
                  <column datatype='integer' name='penalty_runs' ordinal='14' />
                  <column datatype='integer' name='batsman_runs' ordinal='15' />
                  <column datatype='integer' name='extra_runs' ordinal='16' />
                  <column datatype='integer' name='total_runs' ordinal='17' />
                  <column datatype='string' name='player_dismissed' ordinal='18' />
                  <column datatype='string' name='dismissal_kind' ordinal='19' />
                  <column datatype='string' name='fielder' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F' table='[Extract].[deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F]' type='table' />
            </properties>
          </object>
          <object caption='matches (1).csv' id='matches (1).csv_5DB07054E50E44F4AE4352E33164544B'>
            <properties context=''>
              <relation connection='textscan.0xf6c4t05med3u1a2gr6o0itd1ol' name='matches (1).csv' table='[matches (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='matches (1).csv_5DB07054E50E44F4AE4352E33164544B' table='[Extract].[matches (1).csv_5DB07054E50E44F4AE4352E33164544B]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[match_id]' />
              <expression op='[id]' />
            </expression>
            <first-end-point object-id='deliveries.csv_71E90D2ED21E49F59D4DD22E1E89D85F' />
            <second-end-point object-id='matches (1).csv_5DB07054E50E44F4AE4352E33164544B' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1wmub2114k042t11gq8sv123nmgl'>
      <datasources>
        <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
      </datasources>
      <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
        <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
        <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]'>
        <groupfilter function='level-members' level='[none:season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_6F1CFAD5B6A248C2B54E3F7F4E44C592]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Venue Dashboard' type='sheet' worksheet='Matches by City' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Venue Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_BD95CB16E19E4891994302A73AC9358C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Venue Dashboard' type='sheet' worksheet='Lucky Stadium for Top Team' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Venue Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Highest &amp; Lowest Scorers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top 10 Highest Run Scorers in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Ashish Reddy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Chandila&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Chopra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Choudhary&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Flintoff&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Kumble&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Mishra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Mithun&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Mukund&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Nehra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Symonds&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Uniyal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Zampa&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AA Bilakhia&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AA Chavan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AA Jhunjhunwala&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AA Noffke&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB Agarkar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB Barath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB de Villiers&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB Dinda&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB McDonald&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Abdur Razzak&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AC Blizzard&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AC Gilchrist&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AC Thomas&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AC Voges&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AD Mascarenhas&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AD Mathews&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AD Nath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AD Russell&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AF Milne&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AG Murtaza&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AG Paunikar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AJ Finch&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AJ Tye&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AL Menaria&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AM Nayar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AM Rahane&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AN Ahmed&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AN Ghosh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Anirudh Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Ankit Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Ankit Soni&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Anureet Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AP Dole&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AP Majumdar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AP Tare&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AR Bawne&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AR Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AS Rajpoot&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AS Raut&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AS Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AT Rayudu&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AUK Pathan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Azhar Mahmood&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Akhil&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Chipli&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Kumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Laughlin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Lee&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Sumanth&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BA Bhatt&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BA Stokes&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Basil Thampi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BAW Mendis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BB McCullum&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BB Samantray&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BB Sran&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BCJ Cutting&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BE Hendricks&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Bipul Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BJ Haddin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BJ Hodge&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BJ Rohrer&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BMAJ Mendis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BR Dunk&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;C de Grandhomme&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;C Madan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;C Munro&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;C Nanda&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CA Ingram&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CA Lynn&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CA Pujara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CH Gayle&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CH Morris&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CJ Anderson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CJ Ferguson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CJ Jordan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CJ McKay&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CK Kapugedera&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CK Langeveldt&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CL White&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CM Gautam&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CR Brathwaite&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CR Woakes&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CRD Fernando&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;D du Preez&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;D Kalyankrishna&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;D Salunkhe&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;D Wiese&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DA Miller&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DA Warner&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DAJ Bracewell&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DB Das&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DB Ravi Teja&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DE Bollinger&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DH Yagnik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Bravo&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Harris&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Hooda&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Hussey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Jacobs&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Muthuswami&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Thornely&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJG Sammy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DL Chahar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DL Vettori&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DM Bravo&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DNT Zoysa&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DP Nannes&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DP Vijaykumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DPMD Jayawardene&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DR Martyn&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DR Smith&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DS Kulkarni&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DS Lehmann&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DT Christian&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DT Patil&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DW Steyn&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;EJG Morgan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;ER Dwivedi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;F Behardien&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;F du Plessis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;FH Edwards&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;FY Fazal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;G Gambhir&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GB Hogg&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GC Smith&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GD McGrath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GH Vihari&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GJ Bailey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GJ Maxwell&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GR Napier&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Gurkeerat Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;H Das&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Harbhajan Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Harmeet Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Harpreet Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;HH Gibbs&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;HH Pandya&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;HM Amla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;HV Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;I Malhotra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;I Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;IC Pandey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;IK Pathan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Imran Tahir&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Iqbal Abdulla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;IR Jaggi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Ishan Kishan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Arunkumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Botha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Suchith&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Syed Mohammad&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Theron&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JA Morkel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Jaskaran Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JC Buttler&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JD Ryder&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JD Unadkat&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JDP Oram&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JDS Neesham&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JE Taylor&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JEC Franklin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JH Kallis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JJ Bumrah&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JJ Roy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JJ van der Wath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JM Kemp&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JO Holder&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Joginder Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JP Duminy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JP Faulkner&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JR Hopes&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;K Goel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;K Rabada&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;K Upadhyay&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KA Pollard&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KAJ Roach&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Kamran Akmal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Kamran Khan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Karanveer Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KB Arun Karthik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KC Cariappa&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KC Sangakkara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KD Karthik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KH Pandya&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KJ Abbott&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KK Cooper&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KK Nair&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KL Rahul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KM Jadhav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KMDN Kulasekara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KP Appanna&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KP Pietersen&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KS Williamson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Kuldeep Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KV Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KW Richardson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;L Ablish&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;L Balaji&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;L Ronchi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LA Carseldine&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LA Pomersbach&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LH Ferguson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LJ Wright&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LMP Simmons&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LPC Silva&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LR Shukla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LRPL Taylor&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Ashwin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M de Lange&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Kaif&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Kartik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Klinger&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Manhas&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Morkel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Muralitharan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Ntini&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Rawat&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Vijay&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Vohra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MA Agarwal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MA Khote&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MA Starc&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mandeep Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mashrafe Mortaza&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MC Henriques&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MC Juneja&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MD Mishra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MDKJ Perera&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MEK Hussey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MF Maharoof&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MG Johnson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Misbah-ul-Haq&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MJ Clarke&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MJ Guptill&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MJ Lumb&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MJ McClenaghan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MK Pandey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MK Tiwary&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;ML Hayden&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MM Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MM Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MN Samuels&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MN van Wyk&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammad Ashraful&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammad Asif&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammad Hafeez&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammad Nabi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammed Shami&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MP Stoinis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MR Marsh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MS Bisla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MS Dhoni&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MS Gony&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MS Wade&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MV Boucher&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;N Rana&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;N Saini&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;ND Doshi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Niraj Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NJ Maddinson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NJ Rimmington&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NL McCullum&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NLTC Perera&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NM Coulter-Nile&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NS Naik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NV Ojha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;OA Shah&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Awana&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Dogra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Kumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Negi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Parameswaran&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Sahu&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PA Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PA Reddy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Pankaj Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Parvez Rasool&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PC Valthaty&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PD Collingwood&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PJ Cummins&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PJ Sangwan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PM Sarvesh Kumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PP Chawla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PP Ojha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PR Shah&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PSP Handscomb&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PV Tambe&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Q de Kock&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Ashwin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Bhatia&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Bishnoi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Dhawan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Dravid&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R McLaren&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Ninan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Rampaul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Sathish&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Shukla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Tewatia&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Vinay Kumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RA Jadeja&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RA Tripathi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Rashid Khan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RD Chahar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RE Levi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RE van der Merwe&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RG More&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RG Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RJ Harris&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RJ Peterson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RJ Quiney&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RN ten Doeschate&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RP Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Bhatkal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Pant&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Powar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Raje&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Rossouw&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Sarwan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RS Bopara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RS Gavaskar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RS Sodhi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RT Ponting&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RV Gomez&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RV Uthappa&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Anirudha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Aravind&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Badree&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Badrinath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Chanderpaul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Dhawan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Gopal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Kaul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Kaushik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Ladda&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Nadeem&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Narwal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Rana&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Randiv&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Sohal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Sreesanth&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Sriram&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Tyagi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Vidyut&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SA Abbott&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SA Asnodkar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SA Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sachin Baby&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Salman Butt&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sandeep Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Bangar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Jakati&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Joshi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Styris&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Wagh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SC Ganguly&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SD Chitnis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SE Bond&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SE Marsh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shahid Afridi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shakib Al Hasan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shivam Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shoaib Ahmed&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shoaib Akhtar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shoaib Malik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SJ Srivastava&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SK Raina&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SK Trivedi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SK Warne&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SL Malinga&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SM Harwood&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SM Katich&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SM Pollock&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SMSM Senanayake&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SN Khan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SN Thakur&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sohail Tanvir&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SP Fleming&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SP Goswami&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SP Jackson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SP Narine&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SPD Smith&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SR Tendulkar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SR Watson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SS Iyer&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SS Shaikh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SS Tiwary&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;ST Jayasuriya&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;STR Binny&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sunny Gupta&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sunny Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SV Samson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SW Billings&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SW Tait&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Swapnil Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;T Henderson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;T Kohli&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;T Taibu&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;T Thushara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TA Boult&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TD Paine&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TG Southee&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TL Suman&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TM Dilshan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TM Head&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TM Srivastava&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TR Birt&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TS Mills&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;U Kaul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;UA Birla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;UBT Chand&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Umar Gul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;UT Khawaja&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;UT Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Kohli&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Pratap Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Sehwag&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Shankar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VH Zol&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Vishnu Vinod&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VR Aaron&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VRV Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VS Malik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VS Yeligati&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VVS Laxman&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VY Mahesh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;W Jaffer&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;WA Mota&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Washington Sundar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;WD Parnell&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;WP Saha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;WPUJC Vaas&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;X Thalaivan Sargunam&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Y Gnaneswara Rao&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Y Nagar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Y Venugopal Rao&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;YA Abdulla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Yashpal Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;YK Pathan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Younis Khan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;YS Chahal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Yuvraj Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;YV Takawale&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Z Khan&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:batsman_runs:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#67cc42' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:batsman_runs:qk]</cols>
      </table>
      <simple-id uuid='{7962AFF0-B637-4242-86A8-781D71D37C68}' />
    </worksheet>
    <worksheet name='Highest &amp; Lowest Scorers (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Bottom 10 Run Scorers in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Ashish Reddy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Chandila&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Chopra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Choudhary&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Flintoff&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Kumble&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Mishra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Mithun&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Mukund&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Nehra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Symonds&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Uniyal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;A Zampa&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AA Bilakhia&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AA Chavan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AA Jhunjhunwala&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AA Noffke&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB Agarkar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB Barath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB de Villiers&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB Dinda&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AB McDonald&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Abdur Razzak&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AC Blizzard&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AC Gilchrist&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AC Thomas&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AC Voges&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AD Mascarenhas&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AD Mathews&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AD Nath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AD Russell&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AF Milne&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AG Murtaza&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AG Paunikar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AJ Finch&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AJ Tye&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AL Menaria&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AM Nayar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AM Rahane&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AN Ahmed&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AN Ghosh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Anirudh Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Ankit Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Ankit Soni&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Anureet Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AP Dole&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AP Majumdar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AP Tare&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AR Bawne&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AR Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AS Rajpoot&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AS Raut&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AS Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AT Rayudu&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;AUK Pathan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Azhar Mahmood&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Akhil&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Chipli&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Kumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Laughlin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Lee&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;B Sumanth&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BA Bhatt&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BA Stokes&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Basil Thampi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BAW Mendis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BB McCullum&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BB Samantray&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BB Sran&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BCJ Cutting&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BE Hendricks&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Bipul Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BJ Haddin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BJ Hodge&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BJ Rohrer&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BMAJ Mendis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;BR Dunk&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;C de Grandhomme&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;C Madan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;C Munro&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;C Nanda&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CA Ingram&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CA Lynn&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CA Pujara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CH Gayle&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CH Morris&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CJ Anderson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CJ Ferguson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CJ Jordan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CJ McKay&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CK Kapugedera&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CK Langeveldt&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CL White&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CM Gautam&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CR Brathwaite&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CR Woakes&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;CRD Fernando&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;D du Preez&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;D Kalyankrishna&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;D Salunkhe&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;D Wiese&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DA Miller&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DA Warner&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DAJ Bracewell&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DB Das&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DB Ravi Teja&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DE Bollinger&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DH Yagnik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Bravo&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Harris&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Hooda&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Hussey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Jacobs&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Muthuswami&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJ Thornely&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DJG Sammy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DL Chahar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DL Vettori&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DM Bravo&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DNT Zoysa&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DP Nannes&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DP Vijaykumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DPMD Jayawardene&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DR Martyn&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DR Smith&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DS Kulkarni&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DS Lehmann&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DT Christian&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DT Patil&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;DW Steyn&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;EJG Morgan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;ER Dwivedi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;F Behardien&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;F du Plessis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;FH Edwards&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;FY Fazal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;G Gambhir&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GB Hogg&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GC Smith&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GD McGrath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GH Vihari&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GJ Bailey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GJ Maxwell&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;GR Napier&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Gurkeerat Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;H Das&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Harbhajan Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Harmeet Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Harpreet Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;HH Gibbs&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;HH Pandya&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;HM Amla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;HV Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;I Malhotra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;I Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;IC Pandey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;IK Pathan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Imran Tahir&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Iqbal Abdulla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;IR Jaggi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Ishan Kishan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Arunkumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Botha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Suchith&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Syed Mohammad&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Theron&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;J Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JA Morkel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Jaskaran Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JC Buttler&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JD Ryder&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JD Unadkat&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JDP Oram&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JDS Neesham&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JE Taylor&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JEC Franklin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JH Kallis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JJ Bumrah&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JJ Roy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JJ van der Wath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JM Kemp&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JO Holder&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Joginder Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JP Duminy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JP Faulkner&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;JR Hopes&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;K Goel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;K Rabada&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;K Upadhyay&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KA Pollard&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KAJ Roach&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Kamran Akmal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Kamran Khan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Karanveer Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KB Arun Karthik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KC Cariappa&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KC Sangakkara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KD Karthik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KH Pandya&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KJ Abbott&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KK Cooper&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KK Nair&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KL Rahul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KM Jadhav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KMDN Kulasekara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KP Appanna&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KP Pietersen&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KS Williamson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Kuldeep Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KV Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;KW Richardson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;L Ablish&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;L Balaji&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;L Ronchi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LA Carseldine&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LA Pomersbach&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LH Ferguson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LJ Wright&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LMP Simmons&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LPC Silva&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LR Shukla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;LRPL Taylor&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Ashwin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M de Lange&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Kaif&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Kartik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Klinger&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Manhas&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Morkel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Muralitharan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Ntini&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Rawat&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Vijay&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;M Vohra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MA Agarwal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MA Khote&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MA Starc&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mandeep Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mashrafe Mortaza&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MC Henriques&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MC Juneja&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MD Mishra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MDKJ Perera&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MEK Hussey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MF Maharoof&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MG Johnson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Misbah-ul-Haq&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MJ Clarke&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MJ Guptill&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MJ Lumb&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MJ McClenaghan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MK Pandey&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MK Tiwary&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;ML Hayden&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MM Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MM Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MN Samuels&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MN van Wyk&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammad Ashraful&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammad Asif&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammad Hafeez&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammad Nabi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Mohammed Shami&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MP Stoinis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MR Marsh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MS Bisla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MS Dhoni&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MS Gony&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MS Wade&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;MV Boucher&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;N Rana&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;N Saini&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;ND Doshi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Niraj Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NJ Maddinson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NJ Rimmington&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NL McCullum&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NLTC Perera&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NM Coulter-Nile&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NS Naik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;NV Ojha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;OA Shah&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Awana&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Dogra&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Kumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Negi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Parameswaran&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;P Sahu&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PA Patel&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PA Reddy&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Pankaj Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Parvez Rasool&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PC Valthaty&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PD Collingwood&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PJ Cummins&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PJ Sangwan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PM Sarvesh Kumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PP Chawla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PP Ojha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PR Shah&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PSP Handscomb&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;PV Tambe&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Q de Kock&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Ashwin&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Bhatia&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Bishnoi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Dhawan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Dravid&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R McLaren&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Ninan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Rampaul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Sathish&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Shukla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Tewatia&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;R Vinay Kumar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RA Jadeja&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RA Tripathi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Rashid Khan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RD Chahar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RE Levi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RE van der Merwe&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RG More&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RG Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RJ Harris&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RJ Peterson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RJ Quiney&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RN ten Doeschate&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RP Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Bhatkal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Pant&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Powar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Raje&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Rossouw&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RR Sarwan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RS Bopara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RS Gavaskar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RS Sodhi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RT Ponting&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RV Gomez&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;RV Uthappa&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Anirudha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Aravind&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Badree&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Badrinath&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Chanderpaul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Dhawan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Gopal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Kaul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Kaushik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Ladda&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Nadeem&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Narwal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Rana&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Randiv&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Sohal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Sreesanth&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Sriram&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Tyagi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;S Vidyut&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SA Abbott&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SA Asnodkar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SA Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sachin Baby&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Salman Butt&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sandeep Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Bangar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Jakati&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Joshi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Styris&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SB Wagh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SC Ganguly&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SD Chitnis&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SE Bond&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SE Marsh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shahid Afridi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shakib Al Hasan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shivam Sharma&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shoaib Ahmed&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shoaib Akhtar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Shoaib Malik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SJ Srivastava&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SK Raina&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SK Trivedi&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SK Warne&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SL Malinga&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SM Harwood&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SM Katich&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SM Pollock&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SMSM Senanayake&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SN Khan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SN Thakur&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sohail Tanvir&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SP Fleming&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SP Goswami&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SP Jackson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SP Narine&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SPD Smith&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SR Tendulkar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SR Watson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SS Iyer&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SS Shaikh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SS Tiwary&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;ST Jayasuriya&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;STR Binny&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sunny Gupta&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Sunny Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SV Samson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SW Billings&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;SW Tait&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Swapnil Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;T Henderson&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;T Kohli&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;T Taibu&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;T Thushara&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TA Boult&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TD Paine&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TG Southee&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TL Suman&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TM Dilshan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TM Head&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TM Srivastava&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TR Birt&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;TS Mills&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;U Kaul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;UA Birla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;UBT Chand&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Umar Gul&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;UT Khawaja&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;UT Yadav&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Kohli&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Pratap Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Sehwag&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Shankar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VH Zol&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Vishnu Vinod&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VR Aaron&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VRV Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VS Malik&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VS Yeligati&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VVS Laxman&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;VY Mahesh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;W Jaffer&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;WA Mota&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Washington Sundar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;WD Parnell&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;WP Saha&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;WPUJC Vaas&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;X Thalaivan Sargunam&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Y Gnaneswara Rao&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Y Nagar&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Y Venugopal Rao&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;YA Abdulla&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Yashpal Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;YK Pathan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Younis Khan&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;YS Chahal&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Yuvraj Singh&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;YV Takawale&quot;' />
                  <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Z Khan&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]' direction='ASC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:batsman_runs:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:batsman_runs:qk]</cols>
      </table>
      <simple-id uuid='{9D19B83B-B520-4A04-8241-AD4C205B1598}' />
    </worksheet>
    <worksheet name='KPI - Matches'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Total Matches</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='250' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='subtotal' scope='rows' value='0' />
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' scope='rows' value='0' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='wrap' value='off' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9ebe0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='28'>&lt;</run>
                <run bold='true' fontsize='28'>[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]</run>
                <run bold='true' fontsize='28'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B9520EF5-530E-4445-80CE-EF48E79410BE}' />
    </worksheet>
    <worksheet name='Lucky Stadium for Top Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:venue:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='member' level='[none:winner:nk]' member='&quot;Mumbai Indians&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' scope='cols' value='Number of Matches Won' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#91a8de' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:venue:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{6670919D-E292-4B3E-9CAF-E09060902769}' />
    </worksheet>
    <worksheet name='Match Wins After Toss Win'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Number of Matches Won After Winning Toss</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Toss Win &amp; Match Win' datatype='integer' name='[Calculation_1242430598465454089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [toss_winner] = [winner] THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598465454089]' derivation='Sum' name='[sum:Calculation_1242430598465454089:qk]' pivot='key' type='quantitative' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598465454089:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#88b2d3' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598465454089:qk]</cols>
      </table>
      <simple-id uuid='{730C0544-D5DA-406E-800A-485D3E512BF9}' />
    </worksheet>
    <worksheet name='Matches by City'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Number of Matches Hosted by Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:city:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:city:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:city:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' scope='cols' value='Number of Matches Hosted' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#66cbc6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:city:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{C96E5F95-1481-4BBB-9CC8-C30EC19F86A6}' />
    </worksheet>
    <worksheet name='Most Fours (Players)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top 10 Players with Most Fours in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Sixes' datatype='integer' name='[Calculation_1242430598469890058]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs] = 6 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Fours' datatype='integer' name='[Calculation_1242430598470086667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs] = 4 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598470086667]' derivation='Sum' name='[sum:Calculation_1242430598470086667:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598469890058])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598470086667:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#06bdff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598470086667:qk]</cols>
      </table>
      <simple-id uuid='{E811BC28-D899-4D58-BA95-2E13E427C52A}' />
    </worksheet>
    <worksheet name='Most Fours (Teams)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Most Fours by Teams in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Sixes' datatype='integer' name='[Calculation_1242430598469890058]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs] = 6 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Fours' datatype='integer' name='[Calculation_1242430598470086667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs] = 4 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598470086667]' derivation='Sum' name='[sum:Calculation_1242430598470086667:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598469890058])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598470086667:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#8067fe' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598470086667:qk]</cols>
      </table>
      <simple-id uuid='{64439F0A-262B-4AD9-A1B2-BCC1975D51DB}' />
    </worksheet>
    <worksheet name='Most Sixes (Players)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top 10 Players with Most Sixes in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Sixes' datatype='integer' name='[Calculation_1242430598469890058]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs] = 6 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598469890058]' derivation='Sum' name='[sum:Calculation_1242430598469890058:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598469890058])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598469890058:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#bad542' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598469890058:qk]</cols>
      </table>
      <simple-id uuid='{2969F154-26BB-4D8F-A5FC-DE0EFCFEDD19}' />
    </worksheet>
    <worksheet name='Most Sixes (Teams)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Most Sixes by Teams in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Sixes' datatype='integer' name='[Calculation_1242430598469890058]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs] = 6 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598469890058]' derivation='Sum' name='[sum:Calculation_1242430598469890058:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598469890058])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598469890058:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#8bc3ff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598469890058:qk]</cols>
      </table>
      <simple-id uuid='{B45346D4-432D-446D-9783-9954685C49C4}' />
    </worksheet>
    <worksheet name='Most Successful Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([id])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:winner:nk]' member='&quot;Mumbai Indians&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='150' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='height' field='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]' value='37' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]' value='148' />
            <format attr='text-orientation' data-class='subtotal' scope='rows' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' scope='rows' value='0' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='wrap' value='off' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7475DD4C-DD8E-46F4-92CA-65C649466035}' />
    </worksheet>
    <worksheet name='Most Successful Teams'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Most Successful IPL Teams (by Total Wins)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' />
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' scope='cols' value='Number of Matches Won' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{DA512A1B-DAC1-4910-80E0-209AFEB636B9}' />
    </worksheet>
    <worksheet name='Most Wickets'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top 10 Wicket-Takers in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Wickets' datatype='integer' name='[Calculation_1242430598432407554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT ISNULL([player_dismissed]) &#13;&#10;AND [dismissal_kind] &lt;&gt; &apos;run out&apos; &#13;&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598432407554]' derivation='Sum' name='[sum:Calculation_1242430598432407554:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598432407554])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Ashish Reddy&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Chandila&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Choudhary&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Flintoff&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Kumble&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Mishra&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Mithun&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Nehra&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Nel&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Symonds&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Uniyal&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Zampa&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Chavan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Jhunjhunwala&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Kazi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Noffke&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AB Agarkar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AB Dinda&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AB McDonald&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Abdur Razzak&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AC Gilchrist&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AC Thomas&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AC Voges&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AD Mascarenhas&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AD Mathews&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AD Russell&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AF Milne&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AG Murtaza&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AJ Finch&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AJ Tye&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AL Menaria&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AM Nayar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AM Rahane&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AM Salvi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AN Ahmed&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Anand Rajan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Ankit Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Ankit Soni&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Anureet Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AP Dole&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AR Patel&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AS Rajpoot&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AS Raut&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AUK Pathan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Avesh Khan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Azhar Mahmood&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Akhil&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Chipli&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Geeves&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Kumar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Laughlin&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Lee&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Stanlake&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BA Bhatt&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BA Stokes&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Basil Thampi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BAW Mendis&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BB Sran&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BCJ Cutting&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BE Hendricks&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Bipul Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BJ Hodge&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BJ Rohrer&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BMAJ Mendis&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BW Hilfenhaus&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C de Grandhomme&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C Ganapathy&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C Munro&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C Nanda&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CH Gayle&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CH Morris&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CJ Anderson&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CJ Jordan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CJ McKay&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CK Kapugedera&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CK Langeveldt&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CL White&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CR Brathwaite&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CR Woakes&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CRD Fernando&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;D du Preez&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;D Kalyankrishna&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;D Salunkhe&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;D Wiese&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DAJ Bracewell&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DB Ravi Teja&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DE Bollinger&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Bravo&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Harris&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Hooda&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Hussey&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Muthuswami&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Thornely&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJG Sammy&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DL Chahar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DL Vettori&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DNT Zoysa&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DP Nannes&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DP Vijaykumar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DR Smith&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DS Kulkarni&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DT Christian&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DW Steyn&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;F du Plessis&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;FH Edwards&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;FY Fazal&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Gagandeep Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GB Hogg&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GD McGrath&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GH Vihari&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GJ Maxwell&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GR Napier&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GS Sandhu&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Gurkeerat Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Harbhajan Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Harmeet Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Harmeet Singh (2)&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;HH Pandya&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;HV Patel&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;I Malhotra&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;I Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;IC Pandey&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;IK Pathan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Imran Tahir&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Iqbal Abdulla&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;J Botha&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;J Suchith&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;J Syed Mohammad&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;J Theron&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;J Yadav&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JA Morkel&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Jaskaran Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JD Ryder&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JD Unadkat&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JDP Oram&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JDS Neesham&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JE Taylor&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JEC Franklin&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JH Kallis&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JJ Bumrah&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JJ van der Wath&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JM Kemp&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JO Holder&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Joginder Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JP Duminy&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JP Faulkner&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JR Hopes&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JW Hastings&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;K Goel&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;K Rabada&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;K Santokie&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;K Upadhyay&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KA Pollard&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KAJ Roach&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Kamran Khan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Karanveer Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KC Cariappa&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KH Pandya&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KJ Abbott&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KK Cooper&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KMDN Kulasekara&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KP Appanna&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KP Pietersen&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KS Williamson&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Kuldeep Yadav&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KV Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KW Richardson&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;L Ablish&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;L Balaji&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LA Carseldine&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LH Ferguson&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LJ Wright&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LMP Simmons&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LPC Silva&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LR Shukla&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LRPL Taylor&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Ashwin&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M de Lange&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Kartik&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Manhas&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Morkel&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Muralitharan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Ntini&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Vijay&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MA Khote&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MA Starc&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mashrafe Mortaza&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MB Parmar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MC Henriques&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MF Maharoof&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MG Johnson&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MG Neser&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MJ Clarke&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MJ Henry&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MJ McClenaghan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MK Tiwary&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MM Patel&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MM Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MN Samuels&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mohammad Asif&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mohammad Hafeez&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mohammad Nabi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mohammed Shami&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mohammed Siraj&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MP Stoinis&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MR Marsh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MS Gony&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mustafizur Rahman&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;N Rana&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NB Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;ND Doshi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NJ Rimmington&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NL McCullum&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NLTC Perera&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NM Coulter-Nile&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Amarnath&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Awana&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Kumar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Negi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Parameswaran&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Prasanth&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Sahu&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Suyal&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Pankaj Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Parvez Rasool&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PC Valthaty&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PD Collingwood&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PJ Cummins&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PJ Sangwan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PM Sarvesh Kumar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PP Chawla&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PP Ojha&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PV Tambe&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Ashwin&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Bhatia&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Dhawan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R McLaren&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Ninan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Rampaul&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Sathish&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Shukla&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Tewatia&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Vinay Kumar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RA Jadeja&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RA Shaikh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RA Tripathi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Rashid Khan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RD Chahar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RE van der Merwe&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RG More&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RG Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RJ Harris&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RJ Peterson&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RN ten Doeschate&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RP Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Bhatkal&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Bose&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Powar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Raje&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RS Bopara&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RS Gavaskar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RV Gomez&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RW Price&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Aravind&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Badree&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Dhawan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Gopal&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Kaul&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Kaushik&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Ladda&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Nadeem&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Narwal&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Rana&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Randiv&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Sreesanth&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Sriram&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Tyagi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Vidyut&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SA Abbott&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SA Yadav&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Sachin Baby&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Sandeep Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SB Bangar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SB Jakati&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SB Joshi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SB Styris&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SB Wagh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SC Ganguly&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SD Chitnis&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SE Bond&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Shahid Afridi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Shakib Al Hasan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Shivam Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Shoaib Ahmed&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Shoaib Akhtar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Shoaib Malik&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SJ Srivastava&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SK Raina&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SK Trivedi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SK Warne&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SL Malinga&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SM Boland&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SM Harwood&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SM Pollock&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SMSM Senanayake&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SN Thakur&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Sohail Tanvir&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SP Narine&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SPD Smith&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SR Tendulkar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SR Watson&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SS Agarwal&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SS Mundhe&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SS Sarkar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;ST Jayasuriya&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;STR Binny&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Sunny Gupta&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SW Tait&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Swapnil Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;T Henderson&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;T Natarajan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;T Shamsi&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;T Thushara&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TA Boult&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Tejas Baroka&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TG Southee&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TL Suman&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TM Dilshan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TM Head&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TP Sudhindra&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TS Mills&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Umar Gul&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;UT Yadav&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;V Kohli&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;V Pratap Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;V Sehwag&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;V Shankar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;VR Aaron&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;VRV Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;VS Malik&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;VS Yeligati&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;VY Mahesh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;WA Mota&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Washington Sundar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;WD Parnell&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;WPUJC Vaas&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Y Gnaneswara Rao&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Y Nagar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Y Venugopal Rao&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;YA Abdulla&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;YK Pathan&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;YS Chahal&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Yuvraj Singh&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Z Khan&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e23583' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk]</cols>
      </table>
      <simple-id uuid='{121B943F-B08B-4137-93ED-D0A1FE08167A}' />
    </worksheet>
    <worksheet name='Overall Toss Decisions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Overall Toss Decisions in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#61d365' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_decision:nk]</cols>
      </table>
      <simple-id uuid='{43E07634-541B-4942-B8B8-AF85943B1084}' />
    </worksheet>
    <worksheet name='Top 5 Bowlers Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top 5 Bowlers: Wickets &amp; Economy Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Wickets' datatype='integer' name='[Calculation_1242430598432407554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT ISNULL([player_dismissed]) &#13;&#10;AND [dismissal_kind] &lt;&gt; &apos;run out&apos; &#13;&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Valid Deliveries' datatype='integer' name='[Calculation_1242430598457540613]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [wide_runs] = 0 AND [noball_runs] = 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Economy Rate' datatype='real' name='[Calculation_1242430598457692166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([total_runs]) / (SUM([Calculation_1242430598457540613]) / 6)' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598432407554]' derivation='Sum' name='[sum:Calculation_1242430598432407554:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1242430598457692166]' derivation='User' name='[usr:Calculation_1242430598457692166:qk]' pivot='key' type='quantitative' />
            <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598432407554])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#2285ff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1wmub2114k042t11gq8sv123nmgl].[usr:Calculation_1242430598457692166:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</rows>
        <cols>([federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk] + [federated.1wmub2114k042t11gq8sv123nmgl].[usr:Calculation_1242430598457692166:qk])</cols>
      </table>
      <simple-id uuid='{BF2D5C9D-9873-4AD5-B597-DA6BF21A04B1}' />
    </worksheet>
    <worksheet name='Top Fielders (Catches)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top 10 Fielders by Catches in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Catches' datatype='integer' name='[Calculation_1242430598460616711]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [dismissal_kind] = &apos;caught&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
            <column-instance column='[fielder]' derivation='None' name='[none:fielder:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598460616711]' derivation='Sum' name='[sum:Calculation_1242430598460616711:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598460616711])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:fielder:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598460616711:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598460616711:qk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]' value='19' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e3a573' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598460616711:qk]</cols>
      </table>
      <simple-id uuid='{FC917884-F9DF-41FE-9478-98AD8A1EFC04}' />
    </worksheet>
    <worksheet name='Top Fielders (Run Outs)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top 10 Fielders by Run Outs in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Catches' datatype='integer' name='[Calculation_1242430598460616711]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [dismissal_kind] = &apos;caught&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Run Outs' datatype='integer' name='[Calculation_1242430598460715016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [dismissal_kind] = &apos;run out&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
            <column-instance column='[fielder]' derivation='None' name='[none:fielder:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598460715016]' derivation='Sum' name='[sum:Calculation_1242430598460715016:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598460616711])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:fielder:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]' direction='ASC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598460715016:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#b9c4d1' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598460715016:qk]</cols>
      </table>
      <simple-id uuid='{C885C6E1-1513-4789-9DA6-72BE7A82907D}' />
    </worksheet>
    <worksheet name='Top Run Scorer'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='164' />
            <format attr='height' field='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]' value='37' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]' value='116' />
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.93353593349456787' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{3F579CAC-11E4-4045-9BB8-AB1D27C8713D}' />
    </worksheet>
    <worksheet name='Top Wicket Taker'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Wickets' datatype='integer' name='[Calculation_1242430598432407554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT ISNULL([player_dismissed]) &#13;&#10;AND [dismissal_kind] &lt;&gt; &apos;run out&apos; &#13;&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598432407554]' derivation='Sum' name='[sum:Calculation_1242430598432407554:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1242430598432407554])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='186' />
            <format attr='height' field='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' value='36' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{BE3E139D-10D0-4E25-B9BF-DF1BA18F48CF}' />
    </worksheet>
    <worksheet name='Toss Decisions by Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Toss Decisions by Teams in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' scope='cols' value='Toss Decision”' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c6d088' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_decision:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{AE338ACD-BCEB-41ED-B627-EDBA7775DDB1}' />
    </worksheet>
    <worksheet name='Toss Wins by Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Number of Tosses Won by Each Team in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#a46fca' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{07C73204-FF94-450A-93BA-FB6C71DBEB78}' />
    </worksheet>
    <worksheet name='Total Seasons'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column-instance column='[season]' derivation='CountD' name='[ctd:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='235' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='subtotal' scope='rows' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' scope='rows' value='0' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='wrap' value='off' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1wmub2114k042t11gq8sv123nmgl].[ctd:season:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='28'>&lt;</run>
                <run bold='true' fontsize='28'>[federated.1wmub2114k042t11gq8sv123nmgl].[ctd:season:qk]</run>
                <run bold='true' fontsize='28'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='off' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{39BC9553-6F0F-479C-A40E-0E22D0609609}' />
    </worksheet>
    <worksheet name='Zero Wickets'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Bowlers with Zero Wickets in IPL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
            <column caption='Wickets' datatype='integer' name='[Calculation_1242430598432407554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT ISNULL([player_dismissed]) &#13;&#10;AND [dismissal_kind] &lt;&gt; &apos;run out&apos; &#13;&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1242430598432407554]' derivation='Sum' name='[sum:Calculation_1242430598432407554:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]'>
            <groupfilter expression='SUM([Calculation_1242430598432407554]) == 0' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' direction='DESC' using='[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk]' />
          <filter class='categorical' column='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</column>
            <column>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#8d5fcc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</rows>
        <cols>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk]</cols>
      </table>
      <simple-id uuid='{9CE481CB-17A1-45F0-8589-419F3AEF7B0E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Batting Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Batting Analysis: Runs, Sixes &amp; Fours</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='12' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='5493' id='13' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92509' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='6492'>
              <zone h='92509' id='5' type-v2='layout-basic' w='99034' x='483' y='6492'>
                <zone h='46253' id='3' name='Highest &amp; Lowest Scorers' w='49517' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46256' id='14' name='Most Fours (Teams)' w='24759' x='25241' y='52745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46192' id='15' name='Most Sixes (Players)' w='49517' x='50000' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46317' id='16' name='Most Fours (Players)' w='34007' x='50000' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46256' id='17' name='Most Sixes (Teams)' w='24758' x='483' y='52745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46317' id='18' type-v2='dashboard-object' w='15510' x='84007' y='52684'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#1dd39f' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#e2e6f0' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Batting Analysis: Runs, Sixes &amp; Fours</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='27' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='5493' id='13' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46253' id='3' is-fixed='true' name='Highest &amp; Lowest Scorers' w='49517' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46192' id='15' is-fixed='true' name='Most Sixes (Players)' w='49517' x='50000' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46317' id='16' is-fixed='true' name='Most Fours (Players)' w='34007' x='50000' y='52684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='46317' id='18' type-v2='dashboard-object' w='15510' x='84007' y='52684'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#1dd39f' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46256' id='17' is-fixed='true' name='Most Sixes (Teams)' w='24758' x='483' y='52745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46256' id='14' is-fixed='true' name='Most Fours (Teams)' w='24759' x='25241' y='52745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#e2e6f0' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BB8221FC-1E80-4C05-B04A-9925FCEE6F38}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Bowling Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Bowling Analysis: Wickets &amp; Economy</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
      </datasources>
      <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
        <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
        <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='13' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='5493' id='14' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#8bc3ff' />
              </zone-style>
            </zone>
            <zone h='92509' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='6492'>
              <zone h='92509' id='5' type-v2='layout-basic' w='89378' x='483' y='6492'>
                <zone h='46254' id='3' name='Most Wickets' w='89378' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#8bc3ff' />
                  </zone-style>
                </zone>
                <zone h='46255' id='9' name='Zero Wickets' w='27248' x='45172' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#8bc3ff' />
                  </zone-style>
                </zone>
                <zone h='46255' id='11' name='Top 5 Bowlers Stats' w='44689' x='483' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#8bc3ff' />
                  </zone-style>
                </zone>
                <zone h='46255' id='15' type-v2='dashboard-object' w='17441' x='72420' y='52746'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#1dd39f' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92509' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='6492'>
                <zone h='16480' id='8' mode='checkdropdown' name='Most Wickets' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' type-v2='filter' w='9536' x='89921' y='6617'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13858' id='10' mode='checkdropdown' name='Zero Wickets' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' type-v2='filter' w='9536' x='89921' y='23097'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='background-color' value='#8bc3ff' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Bowling Analysis: Wickets &amp; Economy</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='24' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='5493' id='14' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#8bc3ff' />
                  </zone-style>
                </zone>
                <zone h='16480' id='8' mode='checkdropdown' name='Most Wickets' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' type-v2='filter' w='9536' x='89921' y='6617'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46254' id='3' is-fixed='true' name='Most Wickets' w='89378' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#8bc3ff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46255' id='11' is-fixed='true' name='Top 5 Bowlers Stats' w='44689' x='483' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#8bc3ff' />
                  </zone-style>
                </zone>
                <zone h='13858' id='10' mode='checkdropdown' name='Zero Wickets' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' type-v2='filter' w='9536' x='89921' y='23097'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46255' id='9' is-fixed='true' name='Zero Wickets' w='27248' x='45172' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#8bc3ff' />
                  </zone-style>
                </zone>
                <zone h='46255' id='15' type-v2='dashboard-object' w='17441' x='72420' y='52746'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#1dd39f' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C5650A22-89DF-425A-AF10-B6D362F80167}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Fielding Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Fielding Analysis: Catches &amp; Run Outs</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='8' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='5493' id='9' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#aaff7f' />
              </zone-style>
            </zone>
            <zone h='92509' id='6' type-v2='layout-basic' w='99034' x='483' y='6492'>
              <zone h='46254' id='3' name='Top Fielders (Catches)' w='99034' x='483' y='6492'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#aaff7f' />
                </zone-style>
              </zone>
              <zone h='46255' id='5' name='Top Fielders (Run Outs)' w='83283' x='483' y='52746'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#aaff7f' />
                </zone-style>
              </zone>
              <zone h='46255' id='10' type-v2='dashboard-object' w='15751' x='83766' y='52746'>
                <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                  <button-visual-state>
                    <caption>Home</caption>
                    <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                    <format attr='background-color' value='#1dd39f' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='border-color' value='#000000' />
                  </button-visual-state>
                </button>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Fielding Analysis: Catches &amp; Run Outs</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='19' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='5493' id='9' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaff7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46254' id='3' is-fixed='true' name='Top Fielders (Catches)' w='99034' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaff7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46255' id='5' is-fixed='true' name='Top Fielders (Run Outs)' w='83283' x='483' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaff7f' />
                  </zone-style>
                </zone>
                <zone h='46255' id='10' type-v2='dashboard-object' w='15751' x='83766' y='52746'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#1dd39f' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7F919A30-43C1-4CD1-8987-88E460C7DD86}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='IPL Main Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='32334' id='5' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='5493' id='7' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#e2e6f0' />
              </zone-style>
            </zone>
            <zone h='26841' id='6' type-v2='layout-basic' w='99034' x='483' y='6492'>
              <zone h='26841' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='6492'>
                <zone h='26841' id='9' param='horz' type-v2='layout-flow' w='99034' x='483' y='6492'>
                  <zone fixed-size='267' h='26841' id='11' is-fixed='true' name='Total Seasons' w='16596' x='483' y='6492'>
                    <layout-cache fixed-size-h='167' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#67cc42' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='291' h='26841' id='10' is-fixed='true' name='KPI - Matches' w='18045' x='17079' y='6492'>
                    <layout-cache fixed-size-h='168' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#cb9be7' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='452' h='26841' id='12' is-fixed='true' name='Top Run Scorer' w='21464' x='35124' y='6492'>
                    <layout-cache fixed-size-h='92' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#d09e87' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='399' h='26841' id='13' is-fixed='true' name='Most Successful Team' w='21464' x='56588' y='6492'>
                    <layout-cache fixed-size-h='127' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#989ade' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='800' h='26841' id='14' is-fixed='true' name='Top Wicket Taker' w='21465' x='78052' y='6492'>
                    <layout-cache fixed-size-h='127' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#e5508c' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='38827' id='15' type-v2='dashboard-object' w='38081' x='483' y='33333'>
            <button action='tabdoc:goto-sheet window-id=&quot;{0CF3EF69-5A46-4121-8124-96437279A5F1}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Batting Analysis</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#f9a655' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#000000' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24095' id='16' type-v2='dashboard-object' w='35787' x='63730' y='33333'>
            <button action='tabdoc:goto-sheet window-id=&quot;{FAAF7801-0F15-4CC7-8CF3-7E9CC33A7C87}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Bowling Analysis</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#d3b348' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#000000' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='26841' id='17' type-v2='dashboard-object' w='38081' x='483' y='72160'>
            <button action='tabdoc:goto-sheet window-id=&quot;{9246C4A6-73E4-4C19-A05D-CCF8BADAC439}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Fielding Analysis</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#72b966' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#000000' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='41573' id='18' type-v2='dashboard-object' w='35787' x='63730' y='57428'>
            <button action='tabdoc:goto-sheet window-id=&quot;{98EB2D01-9A91-42CD-81AA-E7AA8E7BA482}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Toss &amp; Match Outcome</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#69aaa5' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#000000' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='65668' id='19' type-v2='dashboard-object' w='25166' x='38564' y='33333'>
            <button action='tabdoc:goto-sheet window-id=&quot;{8F298DDC-3683-4075-A772-445BFA8B6828}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Venue Analysis</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#75a1c7' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#000000' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Summary</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='28' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='5493' id='7' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e2e6f0' />
                  </zone-style>
                </zone>
                <zone fixed-size='205' h='26841' id='11' is-fixed='true' name='Total Seasons' w='16596' x='483' y='6492'>
                  <layout-cache fixed-size-h='167' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#67cc42' />
                  </zone-style>
                </zone>
                <zone fixed-size='205' h='26841' id='10' is-fixed='true' name='KPI - Matches' w='18045' x='17079' y='6492'>
                  <layout-cache fixed-size-h='168' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#cb9be7' />
                  </zone-style>
                </zone>
                <zone fixed-size='205' h='26841' id='12' is-fixed='true' name='Top Run Scorer' w='21464' x='35124' y='6492'>
                  <layout-cache fixed-size-h='92' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#d09e87' />
                  </zone-style>
                </zone>
                <zone fixed-size='205' h='26841' id='13' is-fixed='true' name='Most Successful Team' w='21464' x='56588' y='6492'>
                  <layout-cache fixed-size-h='127' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#989ade' />
                  </zone-style>
                </zone>
                <zone fixed-size='205' h='26841' id='14' is-fixed='true' name='Top Wicket Taker' w='21465' x='78052' y='6492'>
                  <layout-cache fixed-size-h='127' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e5508c' />
                  </zone-style>
                </zone>
                <zone h='38827' id='15' type-v2='dashboard-object' w='38081' x='483' y='33333'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{0CF3EF69-5A46-4121-8124-96437279A5F1}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Batting Analysis</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#f9a655' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='65668' id='19' type-v2='dashboard-object' w='25166' x='38564' y='33333'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{8F298DDC-3683-4075-A772-445BFA8B6828}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Venue Analysis</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#75a1c7' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24095' id='16' type-v2='dashboard-object' w='35787' x='63730' y='33333'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{FAAF7801-0F15-4CC7-8CF3-7E9CC33A7C87}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Bowling Analysis</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#d3b348' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='41573' id='18' type-v2='dashboard-object' w='35787' x='63730' y='57428'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{98EB2D01-9A91-42CD-81AA-E7AA8E7BA482}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Toss &amp; Match Outcome</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#69aaa5' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='26841' id='17' type-v2='dashboard-object' w='38081' x='483' y='72160'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{9246C4A6-73E4-4C19-A05D-CCF8BADAC439}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Fielding Analysis</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#72b966' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A25CE511-EC39-4781-BB3F-FBE1873EDE17}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Toss &amp; Match Outcome Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Toss Analysis: Decisions &amp; Outcomes</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
      </datasources>
      <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
        <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
        <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='14' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='5493' id='15' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#aaaa7f' />
              </zone-style>
            </zone>
            <zone h='92509' id='10' param='horz' type-v2='layout-flow' w='99034' x='483' y='6492'>
              <zone h='92509' id='8' type-v2='layout-basic' w='89378' x='483' y='6492'>
                <zone h='46254' id='3' name='Toss Wins by Team' w='44689' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone h='46254' id='5' name='Match Wins After Toss Win' w='44689' x='45172' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone h='46255' id='6' name='Overall Toss Decisions' w='31231' x='13941' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone h='46255' id='7' name='Toss Decisions by Team' w='44689' x='45172' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone h='46255' id='16' type-v2='dashboard-object' w='13458' x='483' y='52746'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#1dd39f' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92509' id='9' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='6492'>
                <zone h='7616' id='11' mode='checkdropdown' name='Toss Decisions by Team' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]' type-v2='filter' w='9536' x='89921' y='6617'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8989' id='12' name='Toss Decisions by Team' pane-specification-id='0' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_decision:nk]' type-v2='color' w='9536' x='89921' y='14233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='background-color' value='#aaaa7f' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Toss Analysis: Decisions &amp; Outcomes</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='25' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='5493' id='15' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46254' id='3' is-fixed='true' name='Toss Wins by Team' w='44689' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46254' id='5' is-fixed='true' name='Match Wins After Toss Win' w='44689' x='45172' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone h='46255' id='16' type-v2='dashboard-object' w='13458' x='483' y='52746'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#1dd39f' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46255' id='6' is-fixed='true' name='Overall Toss Decisions' w='31231' x='13941' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone h='7616' id='11' mode='checkdropdown' name='Toss Decisions by Team' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]' type-v2='filter' w='9536' x='89921' y='6617'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46255' id='7' is-fixed='true' name='Toss Decisions by Team' w='44689' x='45172' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaaa7f' />
                  </zone-style>
                </zone>
                <zone h='8989' id='12' name='Toss Decisions by Team' pane-specification-id='0' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_decision:nk]' type-v2='color' w='9536' x='89921' y='14233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DE27793E-84A9-4714-AA32-F4042A29B806}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Venue Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Venues: Matches by Cities &amp; Lucky Stadiums</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.1wmub2114k042t11gq8sv123nmgl' />
      </datasources>
      <datasource-dependencies datasource='federated.1wmub2114k042t11gq8sv123nmgl'>
        <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
        <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
        <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
        <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='18' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='5493' id='19' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#00aa00' />
              </zone-style>
            </zone>
            <zone h='92509' id='14' param='horz' type-v2='layout-flow' w='99034' x='483' y='6492'>
              <zone h='92509' id='11' param='horz' type-v2='layout-flow' w='89378' x='483' y='6492'>
                <zone h='92509' id='8' param='horz' type-v2='layout-flow' w='89378' x='483' y='6492'>
                  <zone h='92509' id='6' type-v2='layout-basic' w='89378' x='483' y='6492'>
                    <zone h='46254' id='3' name='Matches by City' w='89378' x='483' y='6492'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                        <format attr='background-color' value='#00aa00' />
                      </zone-style>
                    </zone>
                    <zone h='46255' id='12' name='Lucky Stadium for Top Team' w='74472' x='483' y='52746'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                        <format attr='background-color' value='#00aa00' />
                      </zone-style>
                    </zone>
                    <zone h='46255' id='20' type-v2='dashboard-object' w='14906' x='74955' y='52746'>
                      <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                        <button-visual-state>
                          <caption>Home</caption>
                          <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                          <format attr='background-color' value='#1dd39f' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='border-color' value='#000000' />
                        </button-visual-state>
                      </button>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='92509' id='13' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='6492'>
                <zone h='7616' id='15' mode='checkdropdown' name='Lucky Stadium for Top Team' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]' type-v2='filter' w='9536' x='89921' y='6617'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50437' id='16' name='Lucky Stadium for Top Team' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]' type-v2='filter' w='9536' x='89921' y='14233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='background-color' value='#00aa00' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>IPL Venues: Matches by Cities &amp; Lucky Stadiums</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='29' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='5493' id='19' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00aa00' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46254' id='3' is-fixed='true' name='Matches by City' w='89378' x='483' y='6492'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00aa00' />
                  </zone-style>
                </zone>
                <zone h='7616' id='15' mode='checkdropdown' name='Lucky Stadium for Top Team' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]' type-v2='filter' w='9536' x='89921' y='6617'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='50437' id='16' mode='checkdropdown' name='Lucky Stadium for Top Team' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]' type-v2='filter' w='9536' x='89921' y='14233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46255' id='12' is-fixed='true' name='Lucky Stadium for Top Team' w='74472' x='483' y='52746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00aa00' />
                  </zone-style>
                </zone>
                <zone h='46255' id='20' type-v2='dashboard-object' w='14906' x='74955' y='52746'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F3F5508E-777B-4DC3-9739-5B17E2E625EE}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#1dd39f' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3947BE8A-58CB-466E-AE6B-CFCEE2D91951}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Highest &amp; Lowest Scorers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38B4F3FE-0DCF-4B70-9DB1-DBCC29CAEADD}' />
    </window>
    <window class='worksheet' name='Highest &amp; Lowest Scorers (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8B2853A-557B-4AED-AB55-4A7FCFAA475D}' />
    </window>
    <window class='worksheet' name='Most Wickets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2630E5A8-6478-42D6-BE3D-582F1D51957A}' />
    </window>
    <window class='worksheet' name='Zero Wickets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3535B5D-DB8E-44F4-AAF0-F30E138AD7A8}' />
    </window>
    <window class='worksheet' name='Top 5 Bowlers Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[:Measure Names]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C1CEAE94-24A9-4368-AC2E-690695AC32EF}' />
    </window>
    <window class='worksheet' name='Top Fielders (Catches)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4671108A-3676-4BDA-9742-464B9A38F13E}' />
    </window>
    <window class='worksheet' name='Top Fielders (Run Outs)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:fielder:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD9D5B20-759C-4001-8256-0F5AD4A7D587}' />
    </window>
    <window class='worksheet' name='Toss Wins by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:id:ok]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17427C6E-A136-463B-A764-6D85655551AE}' />
    </window>
    <window class='worksheet' name='Match Wins After Toss Win'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CAAA85E9-745E-43D1-AD0E-805D203F59A1}' />
    </window>
    <window class='worksheet' name='Most Successful Teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:id:ok]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8318125-B3D3-4D3B-BB4C-CB8C5C165F24}' />
    </window>
    <window class='worksheet' name='Most Sixes (Players)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF22DB6F-88AE-438C-9AB0-517A972563E6}' />
    </window>
    <window class='worksheet' name='Most Fours (Players)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85F7395B-E8CC-4DB0-8B1F-15A5167DE271}' />
    </window>
    <window class='worksheet' name='Most Sixes (Teams)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BEF813A4-E543-465A-BFCE-D22B2F61469D}' />
    </window>
    <window class='worksheet' name='Most Fours (Teams)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batting_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D67158C-68B9-4DC5-8476-CACD731196FB}' />
    </window>
    <window class='worksheet' name='Overall Toss Decisions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:id:ok]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_decision:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB2A8B65-A8C0-44F7-B55E-EA4D80191E7D}' />
    </window>
    <window class='worksheet' name='Toss Decisions by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_decision:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:id:ok]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_decision:nk]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{950E6C57-5A45-41B2-945E-24F36DC16B1F}' />
    </window>
    <window class='worksheet' name='Matches by City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:city:nk]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{696BC9DE-06CA-4CF5-A59C-E54A59264784}' />
    </window>
    <window class='worksheet' name='Lucky Stadium for Top Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]' type='filter' />
            <card param='[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:id:ok]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:venue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C8D26E6-B2BC-4E72-9818-D937208975D0}' />
    </window>
    <window class='dashboard' name='Batting Dashboard'>
      <viewpoints>
        <viewpoint name='Highest &amp; Lowest Scorers' />
        <viewpoint name='Most Fours (Players)' />
        <viewpoint name='Most Fours (Teams)'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598470086667:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Most Sixes (Players)' />
        <viewpoint name='Most Sixes (Teams)' />
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{0CF3EF69-5A46-4121-8124-96437279A5F1}' />
    </window>
    <window class='dashboard' name='Bowling Dashboard'>
      <viewpoints>
        <viewpoint name='Most Wickets' />
        <viewpoint name='Top 5 Bowlers Stats'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Zero Wickets' />
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{FAAF7801-0F15-4CC7-8CF3-7E9CC33A7C87}' />
    </window>
    <window class='dashboard' name='Fielding Dashboard'>
      <viewpoints>
        <viewpoint name='Top Fielders (Catches)' />
        <viewpoint name='Top Fielders (Run Outs)' />
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{9246C4A6-73E4-4C19-A05D-CCF8BADAC439}' />
    </window>
    <window class='dashboard' name='Toss &amp; Match Outcome Dashboard'>
      <viewpoints>
        <viewpoint name='Match Wins After Toss Win' />
        <viewpoint name='Overall Toss Decisions'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Toss Decisions by Team'>
          <highlight>
            <color-one-way>
              <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:toss_decision:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Toss Wins by Team' />
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{98EB2D01-9A91-42CD-81AA-E7AA8E7BA482}' />
    </window>
    <window class='dashboard' name='Venue Dashboard'>
      <viewpoints>
        <viewpoint name='Lucky Stadium for Top Team' />
        <viewpoint name='Matches by City' />
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{8F298DDC-3683-4075-A772-445BFA8B6828}' />
    </window>
    <window class='worksheet' name='KPI - Matches'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[cnt:id:ok]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:id:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{98EA8F70-F5D9-4C39-B2A1-E0BC99A0F4B2}' />
    </window>
    <window class='worksheet' name='Total Seasons'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01DE91B6-72E2-4A0A-9BB5-65FA53B03D93}' />
    </window>
    <window class='worksheet' name='Top Run Scorer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FAFBD704-033B-480B-9A2A-6005BA73FEF8}' />
    </window>
    <window class='worksheet' name='Most Successful Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:id:ok]</field>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77C6B43D-BF44-4E55-93D2-888FBBEFB127}' />
    </window>
    <window class='worksheet' name='Top Wicket Taker'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF8D9780-FC51-44E4-8514-2026B03AA6C4}' />
    </window>
    <window class='dashboard' maximized='true' name='IPL Main Dashboard'>
      <viewpoints>
        <viewpoint name='KPI - Matches'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Most Successful Team' />
        <viewpoint name='Top Run Scorer' />
        <viewpoint name='Top Wicket Taker'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1wmub2114k042t11gq8sv123nmgl].[none:bowler:nk]</field>
                    <field>[federated.1wmub2114k042t11gq8sv123nmgl].[sum:Calculation_1242430598432407554:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;SL Malinga&quot;</value>
                  <value>154</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Total Seasons' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F3F5508E-777B-4DC3-9739-5B17E2E625EE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Batting Dashboard' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bowling Dashboard' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fielding Dashboard' width='192'>
      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
      /wHjC4V8NBYn1wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Highest &amp; Lowest Scorers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Highest &amp; Lowest Scorers (2)' width='192'>
      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
      2v8HQhw6/8H7+HUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='IPL Main Dashboard' width='192'>
      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
      Qds5ObN/oGQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='69' name='KPI - Matches' width='192'>
      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
      3d5gcLgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Lucky Stadium for Top Team' width='192'>
      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
      pgmAhkvN/wOXH6yYFBLdXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Match Wins After Toss Win' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Matches by City' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Fours (Players)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Fours (Teams)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most Sixes (Players)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29V3ccWZqu94RLn4mE94YgQIIEvTfFYpmumu7p6Zk2M32m1edG5kZ/QBfS
      WtL8AGlJupwLraMjaWm0zvScmamqni7PovcGAEFYwvsEkD4zfOgiQRKsIoumwASLGc8F1kJk
      ROyIzHhjm+/d3xYcx3FwcSlRxM2+ABeXzcQVgEtJ4wrApaRxBeBS0rgCcClpXAG4lDSuAFxK
      GlcALiWNKwCXksYVgEtJ4wrApaRxBeBS0rgCcClpXAG4lDSuAFxKGlcALiWNKwCXksYVwDOw
      bXtTynUcB8uyNq3szbpv27Yp5iRFVwDPwDCMTStb1/VNKdeyLEzT3JSyDcMoqvjkopX0I8Uw
      LQZnFotfsOOg6zoer7foRduWhW3byIpS9LJNw0CUJESxOO/m0hOA42CaJoIkI4nCM3dP5XT+
      x//jTBEuzGUzKLoAMrEJeu/0MR7LEiir5+jpEzRo41xereJ4Z8XaXnnuXrhF9aGT1PoeHOlg
      5hKMDN5lYGQG1ZapbtrGwcM7qfC9wJvKynPj7EUqdh9lW21kg+/O5cdGcQVgxblx9ia+vSf4
      m3drsNKraJII6ioz8eC6HQ1iU9ME9q8/VmXg+hXmfa28/1fHCIomS1Pz2Lxoh8nBNEws280G
      41JkAaRHbrBUf5DfdNQjCUB5Nf7nPDafiDGVkzl5tIsynwgoNHS0r32qcv/GVW6OzGAJflp2
      H+BQRzVDvf1Ude6mIerHUlP03Rtly7aOdWe1WBq9zfkbQ6iOh5buQxza2YpfdscGSoWiCiAZ
      z1LfWFl4+L/FbN95/nX+gRx0Flc1Wtd9rusqAX85Xo+ItjzGuev95PQwB94/RnNIoKr9IL8+
      8DbkY3xxoYdUUw1RJ0Hv5DIN0WZyqTkWlgw6u6VHJ83OcqlvhRN/8e+o9apcPXOBqZpKtte5
      TaNSoagCkESLXP7JY9u1nQd5b3/d2n8ZLv3LN499Lgig6xq2Db5oEydOhbnzp8usZDWa/R7S
      iWmG7sVI59JMrZjstwWadu2g55MBlnY0kBkdIrztPQLrnv9cbJaU7Ce/NMUENo6pE0vlXAGU
      EEUVQEVDHcu9U+S7ovi/VQvIvgDhcHjtPwfPt6oJnz+Eod8npxkEgx6CoRBeRQIH1IV+ro3C
      qWOHiEh5uHYXERADjexovMG9wRG0WITDh8MIZB+VKckYegZN0wAo39JFZV30FX4DLq8bRW3s
      ehsP0CEMcfHaXcYnJhgbGWIh9XyBJiVcRXedyLlz1xgdn2BifIpV1USWBBzbxhEFjGyS+blZ
      FlZSFEIpIvXb97Jy8VNyTR2Uf2uwSKnbwlYhT1YOEi2L4BUlkJ5QuMsbS3FHgUQ/B06/z2B/
      P2P3F5GUMnY2AGWt7JPC63b00XnwAGHPoy2C6GHLgXcQ7vUyPnYfW5CJbOuitSyAv6KbXbG7
      TE3PIIkKe/ftJeIvPO2BUAWhuhZam8sRAEQP7Tt24Iv4EJQyjryzj77BaaZXJSw5TLnoKqCU
      EDYlO7TjYDsOgiAgCM8ORn37WMdxcBAQRAHh4ebC9vXnNHIJpifvM7Zkc+zEIULKk8pycJzC
      8YIo8u09Yqsp/uf/dPVF73BDsG27aBHR9TgOODiIL/rbbAC2/eA3LE55myOAIpFbmeLe2CJ1
      nXtpjHq+83A/D5qm4d0EO4LjOKiqit//vAPFG4dpmti2jcfjefbOG4ymaciyjCQVpyZ+o60Q
      gcoWDlW2bPZluLzGuBEfl5Lmja4BNoJERuV/+N8+K3q5DoVm0Ga0w521v8JLNRp/aNkOFLHk
      4gvANlmZGeLOwDT4ytm2ZzdN5QG0XJxMXqGyMoQAZFZmSdgRGqrDiICpZZkYGSChAqKHutat
      NFYGn/5F2TpTg6NIzVtoDL98O9qyHWLJ3Esf7/J6U/Qm0OLoNc7dXaVr70F2biljureXZRVS
      8Snu31/BxkFPT3DhbB+Oz//wAdczKaYXV6huaKa+0su9859wdWgZ66ldeAFfKISvSJ0plx8n
      Ra8B0qvLVHWcoqGuHIFq6tf6qIu2jWXZ2HqGW1d6qdh7kubwustzHCRvkKqaWoJyLRGvzLX+
      EbSOSuTcMn09PSylLSqad7C/uwUPAoKi4BEFQGV+chVdW2BwZAZv3Q6O7NlKQHFYmRzizuAk
      phRi+74DtFQF3Y5RCVH037qsupaFOxfpH50klshgPRiFdSwy8RgDd64Q93Wyp63iKWdwsE2d
      ZHIFRwkiCg65nE51+y6OHjmAL9HD1XsxbFtluLePhZQKJLnx+ZdMqOXsP3wQz+IYY8spQCVv
      hOg+cIT9XfX0X79A7Dkj0y5vBkWvAarbD/FhYJye/gHu9+UobzvA0X1t4OjEZiaIr6rUH9y/
      9uZej83y5F2+TCQQbAdvKMqO/fvwiiK+mlqs+SmmJ+IkTcjFEljb/ZimRcH27+CNdnBgzxbC
      mKQj42QwgSj1LTZT9yeIZzIk8zqaqkOk+FMBXTaH4tf2gkRZfQen3vuAP/vgNPbkBcZXbRD9
      tO06yk8/OE18+ArzSfU7l1pWu4V9e3YgqlmiTZ2F4JaVp+/CV/TOadQ0NlJXU87zhm+s5Dif
      fnqJnK+ChoZ6ysM+t/lTYhT9904uzpLUTBAlfD4PkqDgrFnXBEEkVNPGye4qbly6xar2eA9X
      8QWpamjnwz87SWr4OnfGYlhangVDYee2rdTX1RAQLZ63EaOuzGPWbqN7SyPVlWVgGi88v8zl
      x03Rm0BqcopvPv8CzRHBkWg//C4d5TIpw08w6AFBomrrIfZmLjEwMsfR7kZkAURJIRQMIgoC
      nrIm3jopcOnaHaYjh2mPOFw48zlex0KqCFMR8iIgEoqE8coiIBOOPujcCniCQfyyjL++nVDv
      BT7+0xCWaiCUleNxZ4OVFJtkhrPQdBNRVpCl7xrQXuKEmLqOLcoosvRC53NsC123kD3KE7NE
      zMUS/Lf/66c/+ApdXk/eaDPcRpDL51nNbM7I0GYZ8TYzL5BhGEhFzAvkCuAZuG7Q4lJsN6jb
      4HUpaVwz3DPIawb/+fzwppRtmCaKvAl2rbXJRdImTMaxLAtRFF98otRLsiHfrm2opLNqwccn
      KgSC/nWd20LkNpVMoZngC4YIBXyPdzhti0w6SU41C5PjQwFkySGTyOAJhfDKm+fnyWkm/9/X
      /ZtWvsurZUMEkJu4ypdjMo1lElo2Rd5bx+lju/DLIlo6Rs/NW6yqQsFn6/HT3rWHjsZoof3l
      6MwO3KZ3Jo7kiCAKlLfsYN+2cgau91B/+BDN0cBGXKaLy3fYEAFYapJI20843OHF1FLcO/sF
      fQudHGnyMt53jUx4J6dPtOKVQcvlsCXvo7m8uQQ900n2HT1NXZkXU8uhWhKSUAiOmVqOlVga
      W/QQKYvilcDU86TSWUxHwB8qI+RXwLYwTBNJgHRGJRAO4lgmpqaSzWvI/jBBxSKdzoEnQDQS
      QhZBz2dIZfI4gkwwEsHvkTfBBe+yWWxYA1MQRSRJQgqUUVehMKQ7QIKp+wY7f9uOf21AwR8K
      P36gLKPoaWaW4lSV1ePxh9asDFnQV+nv6SNInngyTfXO05zYUcHi9BBDY8uYWJi2n4Nvv03U
      TNI/1IeRUZnTwpw8so2x3qukTR+GlmZ1OU99WyNWLslKUuTIB++wtVJgeuAeY8tJbMuGcDXH
      D+8n4nXHBkqFDRNALrVCbEkiFZvhzlyAt3Z7gBVMqZaIF9TkIpfPfclUXGTbkXc52lWHCAie
      KCdPHePm5Uv8v9cstu05xO7tLYS8gBxi6869bGssJzUzQM/EEqZQQ3VzF9E6E9MymL59htHF
      PAfKNO7fvknF0V/xYVczfjtNv63Que8ErZUebn7096jNv+REm8zohcuktTxQTmPXHmotE1NL
      ceXWXVJplYjXbXKVChsmgLmRHq7cn+V+oobf/O3PqAnIgAdBT5C3IFJWy7u/+D2TPV8xklIf
      eW4EkUB5I6f+/Dccy61y5/JFziQyfPhWB4geQiEfkiAgSh5kwcAxNaYG+1hRHWzLIhPP4Wuy
      AZHqzn0c3NlGUBFAFRAVL36vjCBIKIoEfj+iaCKJYiHthp5m+O4AWUcCM08sqWK7WaNLig0T
      QMfB93ivzebulXMM3h2l8kgXAbmK6roU4+OrVG8tf+L8Vse20E0LRVFQApXs2rOLhdtTGOaT
      H0QtnWR6Ocmuo29T4ROZvb3KJAACkiS90PBZfmGYCT3KTw534HHyaMYNNzBSYmzoILOoBNh1
      9C3EK2c5fwVOHt3Btn17OXPuS76YqMIrC6RWVqnc0f2wo2mpGe7dusKSquCVBdRshmjTbnxP
      TGIFkiLh5BIM999FtjUyC3E85S93vVIgjBEbo78/j5FJMbOcof3Zh7m8QWyIFcLKJ8gKESK+
      wvvTNnKsJnXKKsqQBZtccpWVRArVFAgGw5RXVuD3FExrjm2RS62yksigmTb+YISq6ip8skM2
      lUUJBPHIIpahkdcsAkEv2fgy8YyGKHkJBRUkfxlBySanqviD4UL6ddskncvj84dQJIFcMoYT
      qCaoOGiZLJbXR0ByiC8vkcrbyB4PXr+fSDCIR3kUd3DNcG82rhfoGcSTGT66fH8TSnYwTQt5
      EyLBjmPj2A7iJiQUKESCBQTBNcO9FrhmuOLimuFcXIqIa4Z7BrbtsBTPPnvHV4CqqfjU4q/Y
      bq3NB1CU4s+D0A0dWZLddYJfF+IZ1e0Ev8FsmMyWhq/x2Rdf8fWZb7jaM0Qiq7G+d2FlYpz9
      +P/hwkjqOxPP8wtD9E0l1/5ziE/2cfHGEOrajnZikpujSxt1qS4uD9kwAaQTMcra9nPk4G6i
      +iyfffo100n94cMeX57HUrxM9Q6S/5YCfIrKnVujaABWluGRWeYHbzGfA7BZuj/Asur21V02
      no1rAgkiHp+PUCTA9sPv4JHPMjw4TsPR7ciCw+riNKGO02wdOsPU6gG2Vz5yXQrlzTSoF4ip
      B6gzMqTkENvbLRbmU7S1y8wsQfOhANg5Bq9fpmd0AYKV7Dtygs76MNm5cVaUMM7cAAPJCt47
      VsfAYAwhNcHd+4tE2g/w3rFdBCWTqf7LXO6dRow0cPL0SRoiEgtTM4j+AIvDN4mFunl/n7um
      QKnwinoaItV1jejqKqYFWAmmZwSam2poaK1jYWKOxyw3YgW1dTlmF/JkMxl8nhCVTS2YsTn0
      XIaY7KEu4APLpnzrYf76d7/nF291MtJzg6TqkFm4z8WzXzOSiXLsUCdeI07fnUFCnW/xu3//
      N1RqiyzGMyTHbnFzKcxf/Rf/np+faKXv8lWSukls8h7nvvyGeLCTI10Nr+YrcXkteWWdYMex
      sS0LcNDm7rHgb2CfmsD2hEnMTqKbzfjX2R0qGppZWVoiFV1EDndQHtTR9SkSSS8exYfXK+MI
      oBgz3L7aQyqVJJaVsSwbcChr3s2pwzvwSwJkwF/XQUddGFAJeH2FiTfTCaqqt5JZieHoIrqV
      JpPVwZGo23GE4/vakN3JACXFKxNAfHkRX6gOWdS4d28BI6Hx5WdD4Bgsxb2sntRpVB4FmMKR
      GrTZOZZSMaIHjuEPpZEtm6XYFJK/FZ8skB65zpkJmVNHDxAyE5i9DyK0CpV1NYWH//twDJbn
      phjX4gDUNW+jPCCzKgepq4m6D38JsmECcByLfDZDOmWQW7nPjZE8B99vg+wKk1YFv/z1KaI+
      GRyL6St/ZGguR8O2RzPDgqEIhn6LiZVafhKVQAhSL6n0ji3QdugoIpDPZojUdBGSQU2lSL7Q
      whUKDU1VDM962bZzOwoW2byB/IRkWC6lw4YJIBSK0jt4ma8GLeRIM+/9/AOiPol8QmJrZxsh
      z1pRgkRT917mZrXHjhcDZXRV1TLTsI0yEUChpauZib4gbbU+BKCmax/+c7e5vCLhEKCtcyt+
      RUCpbqQu6Ht0MiVKR8uDII5EdUMDvoCX8tqD7M9f4eL5S3gEA1/Ndg6VR6isr0cJFt/u4LL5
      /Oi8QI5tYdkgSS+ZOsNxsG0LBxFJevYYwMJygv/u78+8xJX+cB6se7wpZcOmzI0udrk/OgEU
      G9cMV1xcM5yLSxFxBeBS0pSGGc5ZW3322+3pte0IT1+XNpXV+N//74uv9vqegm3bRXNFrudB
      q3gz+h+OvdbvKVLRr50ATC1HMqsTjUZ50Ee18wmWVA915Q/SlZgkl1L4ayoKOYSsPIsLGaL1
      1TwxpY+RYGjGoKu95lvbkwyOpmjf2YKkp5mdjVPb3IJv3bdiWDZ9Y64R703ltWsCOWqSG7d7
      yWjW2gab5eFbDC6u9+SrDF/rIwk4jsnM3av0zad56pC+vkLfyMITt/fcGUOnMLqUz+Vxs6KU
      Fq9dDaCEIpSpaWbTecr8IRwzw8CMQcvx4Lq9HIy8hgVkFka5PmXz9vvNKAKYaor7Q8MkdIG6
      1m00VYeRAMfSWRi/x9RCkmBdO9taali//IMo+6iurcHjrqtdUrx2NQCSn44mmeGpOA6gpVOo
      Pi+VAd9juzmOiZ5b5PaVIToOHKHcr4Cdp+/8GeYNP5GAyN3LF5mKF6LFudkRxpMO4ZCP4TvX
      mUvkHzufnovRc6OPrFWsG3V5HXjtagAQqdq2A+GTURL7mtFXZ/AEWwh+q3GfTY7xxR8msYMH
      +H1dCFEAY66ffqed3x3qRsKh2v6ay2PLbOmCYEs3x/d1Axp6MouhG7B+eN+20NTHJ/G4vPm8
      fjUAgL+BtugykzGVlZlZylsa+bbPLVjWwU9/+3v2hWa4PrSI5Tho+SyhaBmFVoxAtDxCXnNX
      fnd5Oq+nAJCp29LCyuB5hlbq2Vrv/c6omCCISL4Ie0+ewhi9yOBcmmBVHfr8JEnDwXFMZmdX
      qChzE926PJ3XVABQVlFPcuQGRlMboSeM7ohry6F6glUcP7qN+5dvsxJo42Cdyqcffcznf/o3
      Ls8q7GqtAETkdb4fURILeUoFEfnB6jPCg9yiRbk9l9eE19cL5Njouo4ge1Cew7T26DgHw9Aw
      LfD4fN9pOr0obmrEN5vXVwCvCelsjqHpxKaUrev6phjSLNvCsZ1NSctomGvrBLupEV8PXDdo
      cSm2G/Q1HAZ9vXAc0I3NCQ4YpoW0CWVblo1tWyAUv2zDtHEozPkoBkUTgG2ZIMpPtyu8EA6W
      aSPKEjg2tu0giq+mA7uazrt9gDeYZza0rEyMc3/6A73z+rqMbhoDV85y5ptv+ObMOa73j5E3
      7O9kfFvP/VuXiGnfswOAlWL03tRjibP0bJyxiRkMNcPtazdYzGrAKjc+u0kC0DOr3Lx1g6wB
      qItc+aaH5FNO7+LybZ4pgOX5KUzR4u71AbSHD6bKwkSOzsOHOXRwFxXaMP/8xxvfayNILS+i
      PqtGlbysjF7k/rL5cNPqbD9jsxqC4qV1SxsRrwxoxGaW0Sgs0h1bXsa0ASXC1q5mit9qdvmx
      8owmkMPK8gLRjreRes+zmNlNS7iwArwoKfiDQUJOgOD+A4z0XyPjQOjBkY5NbmmUM+dvkXSC
      eDWDKsCxNKb7r3Lp7gze6k7eP32AyEMHmpfa5grGphexqhqRsIlNzVCx4xCSbbKaydBQ9j3r
      IVkqq8k8ZXWFcsZ7L3N9YA5//XbeOb6PiE9iZXIEoaqOuZ7rZCt2srfFw+1zXzMRN6neup8T
      +zoJeF7b8IjLBvP9v7SdZG7OobGxnobmcmanFnnQzsmnFxjo6eH27VtcO3eL4MHDVK+TU2pu
      gM8uT3H857/hd7/6gPpI4cOlsZvcWQryy9/+LR9uN/ny7BDrW0aV9VvIL4+hmg6OOsl4qoWO
      Bh+CkaW3f5CMavJUtGVu3RpDA5bHrtG3Us5f/vZvOdWocub6KBYw23uOP356htVgO3u2VjN/
      6zOyrR/y23/3G7qbwzjW95zf5Y3jewTgYM7fY7V8BxUem4qKahKrC1gPRk0fRE5tk7xqYBrG
      Y0ay1aVZ6rbvo8KnIMq+h4verS7MEa1vwlRzOOVN+BZGWF6ngGBZBZKhklZ1khMTyFvaCL9E
      53Z5coKK1lYsNYdSU401OkUCcASBxu5jHN/dil+R8EUizPffZHIpS1VNPQGf8sxzu7w5PL0J
      5Gj03xlnafYu/+d9ARyDFa2GY8f2UCGCP1TLtl27qATA5Px//r8Yb/mv6FxrodiWhez1fGdq
      m5lPMTHci7NcGGOu2LmN8DoZiv4oO8pMhucXUaZsdhyJvtTsOF3NMDl4G3uucPL67hZ8gOwJ
      09hYg7JWZv3un/HrlnkGbl3k/KLDO3/2Hq0Vrn+oVHiqAOxMjFGrkf/yv36boCSCYzDy5T8z
      uGRyvHFtp7U5tVZ6msVMhC3rLPtev5+VmRnMth3Ijko271AFlNe3UZ1s5MSJbciCQy6eRHrs
      pSvTsK2Wi98MU1alsNP/+DyA56WmdQvlqTaOH29DERyy8RRPerdn0ml8kQYOvluN7+uzLGey
      rgBKiKcKIJezaN/Wiv/BpGxBYevBvczOxKExgiTN86d/+AewLGyljLf/4hc0rRt+aeg4wNL8
      13z8yRiO7aGmup6ADJXbj7B65Sz/+tEwspkjvOUYb1c83rFVanbQrnxEtuIogQfzACQPjQ11
      eGUR8FPfXo8PkDx+6uvqC290OURLSxUyULP9LRoufcUnH/UjmDnKOo5yuiJKpLYJad1d5+b7
      +PTuMsGAjOWt4+3ayg35Yl1+HLxaK4RjY5gWoiQhiuK6poyDaZggSoUMb0841DINEL993Atf
      wDPLAQfbsrBsB0lWvhOoc81wbzauF+gZaJq2KZ4YgHxexf+STcAfgmVZWJaNx1P8AQFd15Fk
      GcldJO/1YVPy4zgOgrA5ZQObWzbFK9uN+LiUNG4T6BmsJNL8h0/7NqVsy7KKZgtej+M4OI6z
      KVnpbNtGEISi1QCvvAlkmxqryzGkSB3lgUfF6fkEsVWdqroqvJKIkU8yNztPzhSJVNVRVxFG
      WtcjTa/MEc+aIIgEyyopD/sK0xpNjfnlOOWVNfiUl//BLCNHLJaiorbusdxAmmFxvnfqpc/r
      8nrzyiVupmPcufoF39ycYb0XbmH4PB/923VWVQOsOFe/PMPoUppscoWBa5cYXnk8b8/4rfPc
      jyVZXZzk4uefcHk4VnBlGFkGR0bIaD/MQG6beZYWY+huXqCS4pXXAI5t4FS1Ep6/y2yuhZaA
      CHaaiYkM1ZUN2LaDPTfIeLib3x/vQKBgpONbU+IcS6Rl+y7agw67d69y9uOvuBP6BfsqAMcm
      vTLH8kQKIVhBW2sDXtHBVFNMT86Rs2VqmlqoDnuxTZ1sJksuEycWzxGqbaG1JoKkhGjd0vpY
      XlCXN58iNfLC1DUrLM4kC5Hj2DDx8m7q1gKuQlkVwkQPg/OFVeRFUSo0b9YjFP4IgojkraJ7
      XxNLozOYgBqb5N74PDk1x/jts/RMp7G1DLevXGQyliKXmuPK1xdYUEHLzPPVR39kaHaFfH6V
      nrNXWNILmeFuX+8l59YAJUXR3nc1de3cnZ1A3xpkbGCVjl17Sd0orNYohDv41S88XD77CTeN
      AO3bdrNv1xaCytM7gB5/GZKRwwJ81a107z9AdUgmVmFybyVLSllgWa3jnQ/34xNgvu9z7tyd
      4612KG/o5ODhQwQEuBf/A3ENIrZJPusmxy01itbND1WUYaRTZJPLzDohmkLrJpoLAsHKVn7y
      69/xqw8OY05eo2cm+/STAYaaxlIChSxwQiHPTyGvvAA4GGoWKVKBRyxsD9TUIKcyWBSSaglr
      2908QKVN0QQg+KrYFdW5dG8Kf7icgPfR293MZ0irBg4iofJ6tjWVkUirTzyP49jkEzP03Z2l
      qavlqVWYN1SBlVggb9rg2KTmFqDiQdpEF5cCxevyCSL1XfX86R+u0/TT3yILj9oaZmaRb85e
      JWspSIKNKUV56/2yxw7Pp+a4/vE/cgMD0RdhS/dbbK/1IeSfvFZwMNpMrW+QLz77iqiUZ1kL
      8PYH1Qjq9Cu9TZcfF688EOY4dsFoJkoI2BiGhSjLSCJYpo0giQg4mIaOpmpYyPgCPjzfWgbV
      MnTMtQa6IEooslT43HGw1pYSEgQBx7awHQFJFLBtk3wuh+lI+Px+PMpaFgnLeZha0TZNkGQE
      bCzLRpLkx5pFrhnuzcaNBD+DVDrLtaHFopfrAIah41GKb8SzbRvbsZGl4o8Jm6a5lrvVzQz3
      WuBmhisu7jrBLi5FxI17PgPDtBiYesICe68YB9B1Da+n+LXPpifHXZsIVQzeMAE4mLqJ6FE2
      rGpL5XT+p//wzQadzeV1Y8NlZuZWuHLhCiv5tfw6tsF03zUGl3KwPMilkUL017E0Jvuu0DMZ
      X3f0Cuf+5RM++/JLvvzyC85f7mE5+31LHGmsLCZ5lMkny61/O09so2/K5Y1lwwUg+8PUC0tc
      HlrGAdTkHH1TGWoiHlBXmY0XAlyp+WFujqm01EbWHa2S1co5cuoUJ48fos6Z5cytCZ5uz1nl
      xrl7PAqZOViGQZESC7u8AWx8E0jw0HLkJCP/epbRlj/HGR2ion0v0XWRXyu3xK2e+3Qf/+lj
      2wEEUcbj9eL3euk4uIN7Hy+hYRLrucKNgUk0x0vdtr0c21HP5MBNRqYWML/MUhZqZP+xJkwt
      wcCVrzk7MkFGquXDn71HS7nA2M1r3BiexsJH0679HN6xBZaHuDqexFqdZnIxS822g7xzrJug
      7PojSoVX0gcQlEq6dlTRe+VzVLuC9/bVPHR3zvR8wx/uqlQe/xmdNb6nZnxwLJ3Ze0NYNR14
      gfKW3fxi10kkI86Zr2+w2t5Ix+49jI+UcezUEUKCiIyKjUN560FOH3mbiUtfMb2apqW8jMot
      B/jV/lMI6gpfX7hJvKmRcHaFuYTEn737V5wWspy/fJVEdjvBMjc7XKnwyjrBDe1d9Fz6mMa/
      eI8yz6PHvLp9DwdCE/TOx1A7awl86227MnaJ//j3d1CUAE3b9/KTI21ItkU2MQ1EyHMAABBn
      SURBVM/QQC+pXIbp+SzttoPiUZCkQo1RGLFW8XjLqasveH6CQR+C4IBlk0nMMHhviUwuw+Sy
      RrdVaFiVN7RQEVBAl/B4PLhhkdLilQlA9PuJBqooC8uPveW94Qo6D28h+dln3Bio5OSuhscW
      sqtsP8Ev/+YowfUni49wsX+Vt946QNRvELDvvJCpTVsc4NqoxVvHDhGRNaTrPW4AxAXYrECY
      EGDvWycwxq8zMJ/83oU1ALBtDMDIJVmcmWVuOb7WMQ4SFpYYHp9hfn4F/SmHO7aDLTjomQTz
      szMsLCfdjrILANLf/d3f/d2rObWA7PUTrS7H/2CZU1HGG4hQEfIgeYI0VHpJGT6qIg/6AiKK
      N0C0IvT4G94fJaQtMx9Po2oO9W3t1FdH8coByspFFmYXUTWZiroK/F4/kYoyPIAgKwTCZZRX
      VqNkYywmMuR1kaa2LdRVRvF6PfiCZUQDnsL1enyURSJ45EfvhXRO5Y9XRl/NV+Sy6fxovEAP
      UnV8J2XG2naekUrjqcc/g9hqiv/lH6/9kEt/aew1l2vRccDB2cSEYMUr90cjgM3CNcMVF9cM
      5+JSRFwBuJQ0P24znONg2Q6iJD7sCwiC+HIT3R0H+wl9hHha5b/fpBlhxW4PPyy3UPim9QEQ
      hB+QEv/F2HgBGDnm4nlqqyqQRAEzn2I6lqa5sQFZEtDSS9y+PkTb8WPU+b8dcc1xv2eIVd1E
      kBSqGrfQXBNBetoPoS1xsy/FnsOdSLkkg2NTbO3aQ+BlArmWxvjEBBUNHY+lcLQdh5VU/nsO
      dPkxs/FNIDVBz9A4uuWArTF4/QLTKeFhorfl2RHmJ+5x6/6Txv8TDA8kqGltpbE6yNiFTzk3
      uPT0OIGR5P79RUzA1LJMT0+hvWxiK9tgcWGerO5GCEqJV9AEcrBsCxybxNh1RtV63tv+INpr
      EZteoPPdUwzfHCHbXUVIePxYQQpQVVNDkBrqyh3+8PkU2o5a7Pg0t272krKCdO0/RFt16Knq
      dfQMw323ub+Yxl/exIGDuynz2MRjq8iBIPHJPpaUNg511qLGp7lxs5+MZpOwBVo2/gtxeY15
      JZ1gK59iariPr+/lOHFyF5G1JomTm2Aq20hr63baIlOML+lPfbs7jk0+nUHweiA/w7mv+qjs
      Osyh7gb6L51nNvnkvEEARj6Hp6aDo8eP0RZKc/nyXVTbZHqon6vffE7vgkhDVRhtZYQvz96j
      rvsQhw90U+51XaClxivpBJupGP39K+RCLUQe2p1tVoZH8XQeJCxK1DY3MDw5i12z5TEvUHK2
      h4//aQaPKKPICjsPnSJ//yJq2152NNUAleyZGuH+Upbm+ieX7ymrpsacZ3xyjHTKQM0to1ud
      2FoKNdDBB+/swisYjFyeoWb3fjrqq0D3Eg4Uf7zfZXN5JQLw1rTzzuEuRi58zbXhGCd21CKZ
      ae7dn2V4fozJCyKWnsOptTiyr5Wg51FFFKzuYM/pPQQEEY8vQCjgJTbnEH6YSlEkHFYwjKfV
      HRbzdy9zM+ZlX1czkVCSzORc4SNPOV0dzRRe9DZ5UyLiLoxd0ryaYVBBQFIi7Dt9iq8/u8Td
      0Nts88dJlW3jv/nLEwQUEUdPcObTq6yoOkHPo4XgZE+Qyqqqx9yg0cZaVm+Mk+6sIuTkuT+n
      UdX9tAfXYGFRp6N7N011ZaTmkugPZ1WuH+KUifoM7i3G2d5YjmNb6NrT7HQubyobLwBRoSwU
      LCyy5qvm6LFuLg4MU9Hso7a6eW2dXxCUCDtbPUwnDFoiDwSgECkPfqdj4q3ZzcH6c3z+0cf4
      JQOnvJN3asOgJyhf21+UFSKRCJLgYUt7GV9ePMO4V0CXKqioCCEJIv5QcJ3RTaSxew+TZ87w
      Tx8P4FFV7Mo6PJLbDyglfjxeIMfGMAxsR0TxPjvrg2XqmLaIR5G/NzDmODaGbiDICor03bO6
      qRHfbH48Atgkcvk8iaz57B1fAZtlxLMsC9uxUeTi948MQ0eS5KK5YF0BPAPXDVpcXDeoi0sR
      +XGb4YpATjP4w7nhTSjZwTRN5E1ohti2jeM4m7JGsWWZa6nuX6fUiJZOVrXxB3w8WLrX0PLY
      ogePIr0C555BOp7HWxbhUYjAwTZ0kskkmiXgD4YIB/2IjkUmk0UJhB6OMD03eoZYXqS6LPDU
      XfKayX860//Sd+LyevN8T4yZ5tq5s8xnHnQGde5dvcBs6vvSFv4QMozcvkdy3ektNUPvtXNc
      vXmbnr47XL1ylfuLGTBVRgeGWM2/xBh+/D7f3J3duMt2+dHxfDWAt4LmSoGBoSnqD7aRn7jJ
      uNPMT6NeLEPDFpS18XWTfNbEG5DR8hbegLegMNsgpzn4vQKqDl7JJJlRCYTLEc0MqXQOyxHx
      h8sI+RQEIcL2g92s74NlEwssZf0cf/c4YRnUXBZH9oEssHVnF76AB2yTnGbiGDkyOR0lECEa
      9iMKApahkkymMG0BxR8kEvAVJt7bFpnEChnVxBcqIxJ8VMu5vPk8Zx9AoLVrB/c+72WxI8TA
      vSSH3zmMTxKYHr9LVt5KV1sUWObKp+Ps/2U3Axeus+XU+9T5QV/s48JcDe9v1zh7I02NOMei
      WcbBoyfRJ+8yPJfGsk1yVHD67YNEfRoj1+7S8sFxKh5cqCyTTSwRS+QI14QJhNZyiqpJbt7p
      Y9e+w1RJC3zxpz6iVSHUTIqEFeKdd9+i1pvl1rmrxGwJj2CzlBd579Rb1AHJmSHusEg6niAp
      BPnJe6epCrr2iFLhuTvBSriBkzuG+Kc/XqBz227qAoUOkqZmyCsPTPg6yeU0phQmGsoxMbNK
      7dYAI3fnqdq9Hcme4H5/D2Vvv8M72xvxKWC076G82cQwcvSducmCphH1WWQTadaPvvvLm3jr
      aJarZ/+FK0Il+w8eoKO5Fq9jkUylMSwH0MkrVfzk2CECisHNs9fI5lWWp3uZ97Xw4bEuvGaa
      P319vjBfAQhWt3Lw6G58gsr5S1dRcwa4AigZnn8USJCo3Hmchhv/kbrWv3z6LK3CztQ2tjEz
      NUW+uppxJ8zpch9oUN1+iCO7W9fy/mhM9N1m2ZIRMVhazVD+lLCEIClUt+7i5y07SMemuHrx
      LAntfY63Pt6NkbxBgl4ZMJFEERyLxLJAS0ctPlkEi8em+sn+IH6PBJZYWBDCDYuUFC82bCIE
      iUQkpPWLpzlOYdgMB9u0HmZci1bXYuWSzM4vEInW4l8bzhFk+VHSq+wUffMKu/bt59DB/Wyt
      jz61/W1bOppmAhKRmjZ2724mu7DyPanTHyARjtoszSfQLRtD19D0zYnsurx+/OA4QNDj5c69
      mziZcjR1gbhViJqKgXJ2hnJ82TPPoVN/9eQaQw7jzfXS2ychaylmFpJ0PeUFnE/PcO38IGbA
      i4RDPqfRdmgP8lMTIj5AoGb7bsJnr/L115P4FZuFhDvH16XAC1shMskVlGAl3jXpWHqOWGwZ
      wxZR/D4UPJRVRZABO7fK9IpObUMdPgmwVBI5iIYfuD9t0itLJLIGkseLV/YQLA/jE9Oc/cfr
      7PjtB9Q82NPSSK7ESWezGMiEyiqpKg8hOSbJTI5AMISCQSJrE434AZtcJofk9aOIDrqWJ53K
      AgZXb/Wy79j7NIUdErpINOgFxyaby6F4A4+lRnTNcG82r50XSMvEuHvjAtO5dj788708PUT1
      /OjxWW7dHSZnOFi6BpEmThzeRVB59nhnPJXhk8v3N+AqXpxCJLj4wXp7LcWMtAlpGS3Lerjo
      eTF47QRgGXlWl+MoZdVEXyq/yXdxTJ14fJW8biGICtHKSvye54tga5qGomzOqNCmukFte1Pu
      2zAMJKl4q0S+dgJ43VBVdXMS1FJ4EDfDj/MgkfBm3Ldt2y+cwPiH4JrhnoEgCJtiC37wEG5G
      2aVUA7h2aJeSxhXAM9iM/JilXnYxcfsALiWNWwO4lDSuAFxKGlcALiWNOwz6vDgO+eQ8AwOj
      5JQqund2Ur5BgbpH519gKiGyva324WY7v8qtW31kCbL7wAEq/Bv9znJIzo8xPLmAJUVo376N
      6rAXQYD00jj9g5OI0UZ2dnUQ8mxsx1jPrjI2MspKxsBf0cj2zmaCioRjmyxNDjI8tUpZUydd
      ba8uYZlbAzwnpprg0vmLmMEaovY8X17oQd+g4QPHzDPdf5F/+sd/5tObj5ZktdVlLnx+Fj3a
      RFNU5+znF1hWN3b9gvjoVc72zhKsrKfCl+f82cskdRMrPcaZs/14q5tRUmOcvz7wcA7FxpBn
      5E4fGSVKQ2M90ko/X1wZxQKSM3e41LdEVV0t8cGr3Bxf3sByH+E4jlsDPC+5xX4y4QO8vXsr
      Cm2Yn/wLA/GD7K344W8mM5cmIdfzi5+V8fHd7NpWh/j0JKmqrfxF91ZgK9nEJ0xOx6nsrNyw
      RAS+xr38vN1b8P3YVSwOnGdZ14jfvkvZwbfZ3x7FzkeY/+oOyXwH1aGNCsz56T55+uF/Ti2M
      /nEelS2M9YzScfKv2VEps63G5h/PjXGgo5qNNoXYRtqtAZ6X3PISkaZGFAEQfDQ1B1hYyj7z
      uOdBidSwu2vrugwYBdJ5japI+cP/yyNVaPn0hpT5AL/fjySKOJbB4sQIi94gNR6LpaSf5qqC
      a1f0hajDIW5v7DwKx7ZRc2kSy/PcvDpA5bYW/CRZyVRTX1F4N0vRWmpzCRIbWjLgmCwOXHdr
      gOfFtq3HjGk+nw/Letn1mJ6zTFHAIz76iWTJg2Bv/BJOZj5O/63rTKa8nHj3JGGvhiUp+B7M
      ThIkfLKE/fTFql4Kx8gzcucC9yZW8UYb6a6NIlJIdvCwuyF48MnOc0x8eqGSycwPcWsh4grg
      eZFkhXQqjUMEAYdUMoWn4tV6ZSTLImM8WglH1TJYYuWGluGYWa5/8xXZyl28934nIY8EGHiM
      HEnDogFwbJ2kalDlbGxHVPQG2X3ip+w8rJNYGuHK+euU/3ovkpYkYzpEZAHHypJURTbym3Ys
      g3t3bhHPRt0m0PMSamgnO36XjGFj55fomxTpaNiI2QpPp7IqysLMDKoDOCozMwtEqzZSADYr
      fWeZrzjKu0e61h5+AB9tWySG7i1iOKDFl5gXFao30phn5FhJ5rARkBQv5dVViHqKvBGlqSnD
      8EgCy7FJjt0nWV//MDvIhiAq7H//r/nNz993rRDPi23m6D33GSNJBcXIEOg4yvsHtvDDzcoO
      idkBLly8TTydYiZh0lJXQe3OU7y/u5qxG2e4PGMTJYHYdJx3D7XjlzfqTZznzkd/4FLMocz3
      4E4qeec379Mg5rj4xacs2GGEXIqGve9yZFsN0kYlTdLjXDnzDUMrFrUVAZLLcWq6T3Fqfwvm
      6iRffHUJAmEyWYvD7/yEjprgs8/5ErgCeCFsdFXHEWU8Hrkoizk7joOpq5jI+DxyUU1qjm2j
      6xpIHrzKq5iX4GAaOoZpIytelHVTUR3LRDNMJMWL8goXLXEF4FLSuH0Al5LGFYBLSeMKwKWk
      cQXgUtK4AnApaVwBuJQ0rgBcShpXAC4ljSsAl5LGFYBLSeMKwKWkcQXgUtK4AnApaVwBuJQ0
      rgBcShpXAC4ljSsAl5LGFYBLSeMKwKWkcQXgUtK4AnApaVwBuJQ0/z/OBnC8k8z7dgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most Sixes (Teams)' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Most Successful Team' width='192'>
      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
      H6H4lRtBbZZCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Most Successful Teams' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Wickets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29V3ccV5qu+YTLSIfMhPeWcAREDzqJoqrkuqpV7at66VT3Wacv5m7+RP2N
      mbtZvXq6p7tOG1VVS1VSURRJiZ4gYQnvfXqfkWHmAqDoAAqiQMJkPGvhBomM2LERb3x7f/uN
      bwuWZVnY2BQo4m43wMZmN7EFYFPQ2AKwKWhsAdgUNLYAbAoaWwA2BY0tAJuCxhaATUFjC8Cm
      oLEFYFPQ2AKwKWhsAdgUNLYAbAoaWwA2BY0tAJuCxhaATUFjC8CmoLEFsEewLAvTNHe7GdvG
      MAz2y8uEhmFs+ZktgD1EPp/f7SZsm/3UVk3TtvxMfo3tsPkOIoksK/PR3W7GtshrGoqigCDs
      dlO+Ey2Xw6Gqm35mC+A7sCwLXdeRJBlRfLX/7HujS/xfv73/Ss9h8zT7bghk6jnmHt7hN7/+
      Z/7xX/6Nz6/cYSWhQS7BwNAwiezm473xrz/ht1/3k9Qej7P18CSf/vfvuDcR2fp82ThXL3/O
      SkIHYtz97EvmMzt9VTa7xb6LAOnwAv3jEU7/5K8pc1oElxYxNR0kjdVgiOrGzSdm6UiQVc1N
      MNGCt9QDGCxNTJORckQj2S3PZ1kWeV3DtCzAQ+f5UyibR1Obfci+E4Bl6piWgIiAJKtU1bes
      f5B+8WNZULx0ljqYXI7RVOrBzKWYTgm0VZawpgOWztrMADduPSSuQ0ldB2+dO477qaOkGLs9
      RsP7PXjTQR7c7CNjJJmcW8NZeYQ/+5MzuMgw1X+H/tEFMsj4xBJO/fxdyvMxei9fYXwtjqAG
      OHz6HEcbSl9RL9lsl303BHIX19JcAVc//Q9+d+kWq4mtZ/hPI1DWUk9qaoE0kE1HMS0XviL1
      289dpc188Je/4Jcf/xWHrEn6Fp+NDDmWJ5bIAKaeZmkxRmPP+/yvf/h72vUZ5jKQXh7i9rTF
      2z/7Gz7++UWkYJw8IEgKrT3v8YuPf8mfv1XP4ND0DvWIzQ9h30UASXXTdfpHNHcnCS6Mc/U3
      /0HrxY84WvLd3xXcDbR5exlZOk5NdAKx8igeeQxYH+poyTATI4OsRdNkQxGclfqLWkKgrJqy
      gBsBcLvANCGxOE3NsT+nxK0gICBsZEmsfJ7g0hSDDyJkMiFWYxU/vDNsfjD7LgKAgCDKuL0B
      Gjp6uHCmnuXxBV50qz5GorKliejUEJOTORqbS3mU19EzCfru9+Gq7eLtt9/mdGftS7VOcThI
      pdPP/T42cZ3BcBFHTp/j7fMnqCpyvdTxbXaWfRcBUrEZxkbiFJUXIWGyMhPCX9+BBBjZOPOz
      MyRcErKjiMqaUpRnvu8taUC687+ZLH6Psy54lP+xLAsLEzOXJrgaYX4+CIe+f/t8zSfg0mV6
      OYwzO8dkJEEXrK/yChapeJjV1TkiaemHdYTNjiD96le/+tVuN+L7ICIQDy6yuLxMKBrHU9PN
      sY4qZFFA0NKEwjESiQRZTaa0uuRbAUiKg6JAKR6HjCi5qGlqoMTjQBAlXG4fxQE3qmiwshYm
      kdQoq2+ioqwcv0vGobooLi7BIUvIqpuSymIcgojidOEPFCEBouLAEyilyOWlusJLeHUNpawU
      Yz5FdU8HZb4SssszRFNpDNlHQ30dlaVFT13b+HyIu6PLr71PCxlhv1aHtkwTa2OMvWOLkZaF
      aVkbx3y5g+YTy0wsJHG6ZLTwLH0rbv78Jz04sLCs9UgjiCLPHt2yLL7pn+aTb8Z/+HW8BkzT
      QhCF565jL2KaJqK4+Wh/3wpgr2LkYoz0DxLKGIiqn46uTsq8ju/8nmVZaJqGusWS/V4jm82i
      qupLPyheJ5lMBpdr8zmXLYA9gi2AV8eLBLAPs0A2NjvHvssC7TUsa30uIu7Ak/Dr/jn+3z8O
      7UCrXj2WZYGwT+YAlrXl/+eAC8Bg+v4NIu4W3mirRnmqD0wSa/PMreo0dbXg3vjMMjQWp0ZI
      OuvpqAuQjcwyviLT0VnzXEoVILcywoTVRHf1D8/rZzWdtdjzawg2r44DPQSyMvP09q0wOT1I
      Ivvs21Yma6PTjIxeYWA2w6OJUDaxxsMbV7g+EQRAVJx4PeqWT7p8dJ65yP55OcTmaQ5wBLCI
      Tk2jdnVRHJollEhR4no6724aAmWNTcRnJtEaulEFSAcnsAItOB/1jCCiOBRELLKxJe73DhLR
      JOrajvJGcxlgkYstcfvKTZYSEm+cPUNLmZdMeJ6UWom+MMhivoyuzjIWBu4xsRRH8VVz9Phh
      St3fnR2yebUc2AhgGWnGFvO0NtTQViszNh9ls3SXJ1CLYiwTT+lgZZkZi9N8uIpH67Tp4Di9
      Q8vo+TS9d3tRaw9z+sRh1EyCLGDmNebml6loO8apJgfX7owAEJ24wRdffs3d2QzVNQEkK4Po
      qudETw8tRTEu3xp5XV1h8wIOrADyyQQxRMqLPJS1tJCbmCaxiQJkl5dSRWI1lsCITjPvaKbB
      +0S3WCa6bgICopElGIwiuUpoPdyMCxAVldbuEzRWV1DbVIdrY7Bk5jXyrkreuXiW6mIvihSg
      qtJBaHGeYCLD6lrstfSDzYs5sEOgeGiUh3d7GR8fQxQMsmmTsaWznKxxPD2eFxy0NHi5NLOG
      1xmiuqUNhaXnDyi7OP7m+yzNT3Pri/8i7W7hw/d6tjy/KCu0tHfidayfLbVwh8/ua5w81kzA
      Z+EJ5nb2gm1eigMqAIPV6RXO/d3/yek6JwBrE9e5Nz6NXt3+TDYI3HWt+G5/SW9JKWdb/JB7
      XgCWZWKKCg3tx2hqb+PGr3/DXKaHLT2jAk8tEiWWZiju/DOa6xxk1yKYpv1e5V7gYArACBPO
      1dNd7fz2V77yZopWpsnmLZSNp7Lq9WAqMog+WhtdfBP34ytygOEi4FmfoEqKG3+RimDmmbx3
      iZGQhFtIkys/zAk36GoRRdbGkEl0ENiwOcuuAO4n8qb+5m7Cn3/Cp2NuTNPC7al/PX1h80Js
      K8T3wkLXNAxEFEXh+xWJsDB0Hd0Ah6psaob79PqIXRXiNWMLYI9gWRbReIqUtj+qw2m5HA6H
      Y1/UBcrlclt6rGwB7BFsM9yrwzbD2dhswcGcBO9TJpci3B9f2+1mbAtdN5BkaV+Y4fK6jiJv
      fqvvmAB0LYslqSjSepcYukbeANXh2OYw0SQdiUNREW5Z2sbvtzqMQTKVxuH24JBeNsBZ5LNp
      4okkhqDgLSrC5VAQjBzRtI7P5/neodPIRIiZRZR4tu7yqcUo/3Jp8CXbbPMy7NgQaGnsDhNr
      jxd3EssT3OmbQN/2DENn+uZdZjPP1uLRmbl9j5nkNvPmeoaxoWFC6e3WC3oeLTLP11evcae3
      l7v37nD1Zh+xtAbpNXr7p3iZJazc3F2uT6Veuk02r4YdiwC5dIKM74m6m1qGRNLCAkxDIxGL
      k9NNHK4iirwuJEyymo5DFkgnEwjO9RpsWjrBWjqJqLrx+7zIGxI18hkiwTR5ZHz+AKoiYOaz
      xONJ8oaA01NEkUdFUFy0d3fhcDkAi1w6SSKVwRJkvD4/ToeEpWvkDAs9nSStmbh9frzOR5HK
      YHFkAqGmg3cPNyCaOslUFrcqA2UcP1KCc+OacppBPpsio1l4/AG8TmW9lGI2tX5Ocf2Fep/H
      CViYeo5YOEhWB68/gEe1R6C7zWv5D6SCs/QNTpHRTXRDpPnYWTrLLe7en6RSiTE4G6Xt7LtA
      ksnBQZayWbKaQV33OY63BoAkYw/6WCNPJBon0HSat0/VEV2YZHBsAc0E3RJ44/yPaPBoDI2M
      0dbeTaAoz8zgADORBKZuIASqeavnKMLyAJ/1BSn1SMTjSayiKn701ml8qggIOF2wOr9EsqWW
      gMuB37/h2gzPcWkgx99cfIPU6iCfXluholQiGYuQ8R3mL947ghWb5crVPvKqisPKMadX8Q8f
      ncYyDeZGH3A/DNG1IPnaY/z8Qtfr6H6bF7Bzc4DEKlfu/Zoh7/o4PRuPojafA8BVXM+ps1Xo
      hsHK+ADz80u0lZUTn33Aqv8oF98/R8AtMoKTpjd6OFruI70yxleDo2QaTwNO6jqPcKKmnOzq
      DLdGF8mbjQSqD3G6rBHD0Jkb+Ybp2SgNnSrJZBLdMAEnDd3HqDEM9GyEa3dHSKU13FoSqbSF
      sz0tOPQYV271ks4ZGwIQKT/cwwnrPr//t3/CUdnGmVNHqS7xIulZgrH1oZhp5FBKmjl3sRWH
      sMZn/z5GFoOVBzeRWt/jnY4S5NAQ//c366Y3QRCpaOzifE81cmqaf70a3Kmut/kB7JgA5KIK
      Lv7pO5yoXx/KBCfvcXvGAnSi86M8XE6hiCbxtRBGWfG6NdnXzI8vHCHgVgANkHG6ZERBwFvk
      R5bWMAwTkPF63ciigCg5kCULjDyLk0MsxPKIpkE0ksBR+0xpdC3OcN8wOSQsPc1aPLdR5Rmc
      niKcigiGiCQ+PbmWHF5aj1/g0NHTLI0PcPXSZc69/z6NT/6RIODyeFFlCZCQAYss4VUvh94u
      RREBhI0fQBBxebzrE3NZRtqiTIfN6+XVD4HyCXpHVzl8+ixVfifBiQFGHzmBJXnLBqRTSXTD
      2vJG0dNRxhfDHD51gQqvxMKoxswz8970whBzZgUf9DShGAmSuQfbSNtZ5LU8giQjSyrVrV20
      zKwRT2fhO99fceIrTrI0n6KmzoWey24I2Gav8uoFICoUSxmGHw6xIumEgiGs0s1rDgpSioe3
      7pAochBaCVLRcRaXY/NbVpQV5HycseFB5tGIhFdQajuf+hvZ4yO3PM7gQAItEWUhnObIdzbY
      IDg9wMDEGpJLhbxGwvTwZrEHvjOJI9F0soevrv6RL8f8OPVVktny7zyjze6xY1aIXCqGoRTh
      dqw/sfVcmpQGPq+LfCrKSigOoozT7cHpVPG6FOLJLF6vB0kUAJNsIkoolkI3TBwuH2VlARTR
      IhtPgceNU5IwdY1UVsPjdpNNhAhGMwiygtvjxOHw4pXTXPr6AcdOnKHMJxFeXSGRs1BUFYfT
      id/rRdRTpCwnPpeyvm6QTqO6vBtrGBZ6NkUwFCGdyYDipri0HL9HRdQzBNMmZX4PhpYilVfw
      eRxAnngkh6fYi6BrpFNJkmkNJT3Pfzw0+T8+OoOZjZOwPPhdEpgakUSeYr/n2/6zzXC7w8Hy
      AmlR7t+8y1jSwYc/Oo/f9frTjPG5Ie6MLSOKkE6kKG4/zfmOqu/8nmVZDE0tc2d09TW08oej
      6zqyLME+WAteb+vm98LBEoCRY20tjOjyU+xzf0+78k41IclaMIpugaR6KS3xbWtF2jbDvTrs
      0oj7AFsAr44XCcBeitxDZDWdWHp7W33sNrlcDodD3xcCyOayOJ+rC7WOLYAnMQ10S0B+aRPd
      M1gGeQOU7Zj4WC+NaE+CXy/7WAAGa+MD9M8GAQHZU0xbWweVxS6SCw+5O7qAhYioFtHc1k5d
      mW8j27SOnokxPnCXvolVHIF6zrx5ipr8LJfnXbx/bIfe143O8MmDJH/zo6M7czybHWcfL0ea
      hGdClBw+wvnzZ2ktMbn6xVcsJzVSK0tIdZ2cP3+e7gY39/54icnwEzU3zRR9l//INHV89Fc/
      54OeFiQL0DNEkjtYrkTPEozZDtC9zD6OAAAiiurE5fLgau2mczJCJJejBAHF4cTlcuGq6+RE
      4xJLyTRtZet59+ziMGNCE395qh1VBNRqPABZ0JJr3P5ymOGpMBVdZ3inpxM1H6Xv9nUG5yI4
      fdWcefstqt0601PzVLe045HSPLz3AKHmGO01bpLLs6zi49ATIx9TT9L/9RWGF6LIRVWcOn+G
      5jLvLvSZzZPs4wjwNFoqynJawy09rWk9F2c+nKFIfexjiAUjlNVXr9/8z5CJRqk6/gF/98u/
      RIhMEIpmMU2RuqPv8D/+7pd8cKqKvut3SBsWC3PjBGM5jMgcA8thZofGyJo6s5NTpHJP+5Is
      waLm8Nv84uOP+cnxANfv2KUR9wL7PAIEufQv/8g1yYHbX0bnybPU+lyESHPrt/9Mn6Li9AZo
      eeM0h8qeLIxrbbhFn8df10Z9sRN0E6/Ph2hZCA4VMzzPrYFZEskcaU3CEFUqXU5WYlGc2RR1
      Le2YqzPE4jniWpZanw/0x4taIg4sbZa73yyRTK0RjNoWib3APhdAGe9+/CHdJb5nfu/mzM/+
      B+ebyjb9lr+smHDfCtkjtTi/M4unM9d/j+FUMW+ePAeZBPfvPwBBob62iE+nl1A8GWobDhGK
      LxNamyen+SnxOSD8+Cixiat8NVPBu2dP4covsnojsvUpbV4bB2YI9H1wVnXSqI9xc3CeWDxB
      PLxGOLnVK5Qm6bRFeUUpCha5xCqRjXmtu6oWeW6O1YyO2++j1u9mYaoPrbQF9zOZTy2VpKiy
      FpcMqViERPblX9m02Tn2cQQQCdTVYjqf9yi7y2up8jg3+c4GchFnPviQe99c5fPhHILi49hb
      FyhxldJavbESK8pUV9fgcbkpPdzE13eHuDEPlrOK9o56VBEERxUnuouYd7Thc4rI9bWoC3EO
      dVauP1lcJbzRvL4CWdxxFuflG1wPOpEdTjoPvdxO9DY7S2FbISwLwzBAlJ5aI9j0T00DwwJJ
      lF6yGJqFaZqYJpuWE7Esiy9uj/OPnw+8zMFfO9bGfsr7gRe1tbAFsIewvUCvDrsynI3NFtgC
      sClo9vEk+OBxb3SJ392c3O1mbAvTNBH3yYv9L2rrgRWArqVYmpsnrYPk8FBVW43X8XRu0khH
      CWoOKgPuJ74XZ35qab36mygTKKuivPj7l0J8GSKJLP2T++ONsIPC/pDwS5CNrTI6MoshQGJp
      mP/+5A9MhbM8OeXPrj7k+vDiU9/LpBZ4OLSCJUlYWpy+q5/RO53YdIdJm/3PgY0Almnh8JbR
      0t6Bs72DltlePv/6JiUfXsCvrkcCS9fIaE+/gGJZJk5fJYdaW1GAmjKLK7cnyDUcQUvEUVQn
      azNTiOVNVLl1ZicnCSbzuEtq6ThUg5CNEsk6KCt2IwB6KkTY8FLulQnOjTG9HMMRqKatpQ63
      cmCfP/uGgvkP+KpaKFYyxLZhdzbyGtlshnQqyszDefzNtTj0LKPDvdz+6g/cn02AAKlYjKyl
      UBzwkZ69zY2RMLoWpe9WH0ndAstgoe8bZpKQmu/l6uAabp+f7MIA1/pm7KiyBziwEeBZBEnG
      JUpohvHiPzQ1ZofuEE4+RNN0SmtbOFbnR0AjuTxFtOo9/vxc0/qTw1KRHA5W12K4Sr2sTi/D
      oSac8gBr4Qweb5C+BR8Xz+v0/3+TdP3sb+n0AM0+/vPfB4ieaqb4NVy7zdYUjACsvEbSNGlQ
      nrnkZxdyRAfNxy7y1rvtiHqWpel++m4N4LvQjlLaxKmOmo2bX2em/wajMSeNlT4QBARAlFVq
      AkUsBEP4I0soTbX4yZLS/LQ8mmurRVQIeZJgC2CXKYghkKVnmRy+j+Yop9i74RGyDGKxLD6v
      e/MvCQKS4sSjOsjmMliAKAiP9ZLPMR/J0Nb1Bu3tbdQ9slsLEg2HalibmmU0mKS1thLwUlOe
      ZHI+hYmFFl9hWfYSeMXXbfPdHNwIIOjMD1xjanYQyxCoPNTJuTNHUPIxrn91mZgGqzGJi3/y
      tGVasHSm7l9hfvkOhq6jqMUcu/gj3BKIkoTwyMUjOyhzGty8/AeG17cWRpbaAZD89TSZt3gQ
      rKW9xwOINJ8+zu+/+A2f+UtJR0NUHXuHImx2m8LzAlkWej6HZlg4VNe3G3C85MHI53IYgozq
      kJ8yuBl5DR0Jh/LY+GYaeXJaHkl24ngmA2SXRtwdCk8AexTLslhci7IU3uZWULuMltdQFOVx
      RNzD5DQN1bF5aW9bAHsE2w366rArw+0TTMtCy39HmnaPkNcNBNHYFwLI6wbSFv1qC2AP8eW9
      aXsO8Jo58ALQs0kePrjFWlpEQCRQ20JnSy2q9DilqUUXWMwHaCr3YFkm8aUp1iiltcZOVB50
      Dvw6QD6TJpgy6D51mtMnu2G1j88u9/JkrVQtOMnIUgKAbHiGy7dGcXs3HzPaHCwOfAQAkGQH
      LrcHj+SmvesIK7eG0XRwPVO5wTLTjNzppeKNH1FZpJIOLhKVfdQEvJh6jrn5eUqrmxATqyxG
      Q4zfv8dq3seZC6cJD91kZCnPsXc/5GRDMVp0nqtXr7OSMKhqP8W5Y624lSyzY2FKa1SGbt1C
      bf8xR2ttoe0mBSAAk2RwnsG++zhMk2w6RGnLCbzPJFvC8yNcnQ+RqDjOT1tLEIHE4hRTrmZq
      Al6sfIaHw/10B+pxLI1wZ07kp3/29whrN/in//iGn/7Pn3HGnOGfr49zsuE0ui5y7N2/pMRl
      MXTlEvcm3VzoUBm6fp1MwEFd5yk6K/dHxucgUwACEEAUkSQJjCyZjI5k6FiW9ZQPyMznSGQz
      KLUKgsV37PyjUneoDr8qkvL6qasQKQu4kFNOnFIasHAWlxObesj1xRCRpTBSQANUBEug9fQ7
      dFX5kfZ+AuXAc+DnACDgLamhs/sIJ0+f4+KbPYSm7xJOPZ0WK2s+ykd/9SHy6G3uL8Yxf9Dq
      SIbeT/+TkVwxR06e5lhnIy5l/RPJXU5DtX3z7xUKQAAbWBaWZZGOL5POOFA280A4yjl78Q2m
      73zDciKHIGgk03ksy0LXUsQT2y2dniYS9dN1uJYit0ouHUfL7+jV2OwQB34IJCkyemSaT/51
      AcvQUfxVvPnujwk4HwtA9pZRqay7RD2VrbxzJMnofIgzrV04Pv+G38z1kTccFNc24FJEZH8p
      ZfK6i1RWfFTXK+sdKXuoqzKBUo73uLj0n7/DI2k4fDVUN3gAlYq6cpTX3gs2W2FbIb4Dy9TJ
      GyDLEuL3WPW0LAvT0LEEaVtbLtlmuN3BFsAe4ZEXyLGFaWuvYXuBbF4J++GGgvV2PvrZ67yo
      nYUzCbax2QQ7AuwhBqZW+fL+3G43Y1vsp8pwhmGsrwNtQsEJIBNeYCGl0FhTjvJMMj6fjhFO
      GJRUlKAIAAbJSAzZV4Jzi61+89EFViinLvDDx+4r4RRX+2Z/8HFsts/+kPCOYTB18w/87pv7
      hJPPJ+ZjM4N8/off8HD1Ub4/x8jX11h4wUta2eUhBhazr6a5Nq+cghKAmZxmLNfKxWqBqVDs
      uc8NzaSirYm5e7eJ5QzAJJdMkjcByyIbX2NsZJiH4zMkco8qylno2Tiz4w/pHxwltFF4K5+K
      ktQM4qsLzC1FyZt5ggtTPBweYnRqgZS2P158OegUkAAsItPzqM3NHG72MzMT3LQym7u4nio1
      yexa/Knf67k4d765xlI4SXJ1gmv3JjEAU9eYejjIaixFbG6Iz++MARCZ+Jrrd/r46voDIukc
      hhFjYTZIKpMlONnHtf7pV37FNt9NwQjA0lOMLudpqwngrOugZm2UmczzEhAkF0eONjF6f5DE
      E2VDU6tDhOVOek4d51hPD4GFu4zGQZBVWo+e5dTJk7x14RhSZn3zOy0RYXwly/n3P+RISwWq
      XELnsQ7qqiqpqy9hcc6uAr0XKJhJsJaKMzlym/uTMzgVkVhwmezURRq7ip8zfiplhzhePM6d
      0dC3tgUjGmJ6cY0b15YASFoGfm3dNCqI4nqeWRC+dZFKisobJ89Q5lmfPWuRSS7fnKWiuhQp
      nyRvvGATP5vXRsEIIB6apuzIX/NX55qRgWRwnNt9D0l1nMP7nDVTof7oGaa//pq1lE4ZIJdW
      01glcfatblRJwMznsBTQglucUOCp1Ftk4j5K60cca3Ggx8bpXwpv8UWb10mBCMBgdXKO0q5T
      uDesBv5AFYIwSyKZx+t/PoXp8BTTUKzw294ohwF36SHKtT/wu98vUaqapCnmzR+/yXaTn67y
      auavfsblWQ+5VIxYtnrnLs/mpSkQL5CFoesIksKj3VCtjS1SRemxyc00DCxBQBJFwMI0DHTD
      RFYcCKyb23LZDLoloaoqDkUGS8dAQhYFsEx0w0KWpQ0jnMwjH5xlGeQyGXI6OF0qoiCiyI8j
      hG2G2x0KRAB7H8uymF4KMbEY/+4/3gPk83lkWd4XXiAtr+FQ7Mpwexq7Mtyrw94n2MZmCwpk
      Erw/CMczrEQju92MbaHlNRRZ2RcRIKflUB2bR1ZbAHuI3rFlexL8mnntAhi4/L+ZzvlRRZCd
      Xlq7j1FX4vp2MWp57A5B5RDdTesLVJaepK93lJruNxAX7jKoNXOxu2pH25RdGmI4V82JpmIs
      Q2N6qJekr40jjSU7eh6bvcdrnwNk0zqdZ9/m7QvnaK/Uuf1lL7EnfGGSJLI4M4O2UbpQi0eZ
      j0RwiBL++iOcaCnd8TbpqRCr8XUTW3JllPuTaaorfDt+Hpu9x2uPAIIgoigqTpdKbVsP1UP/
      TVyDwMYkPVBaSXZ4iFRWR3XLRMLzON31uFWR+PgAM45uTjQqLPR/yVhcJTwzTiSncvpPfsrR
      Gh8rY7e43jtO2hApbjjChZ5DRIb7SFR00F3jx9IzDPUNU3LoMNX+pzMD+eQid+5McuTtn1Lq
      lInOPGTZUUFndQmmlqJvYJD6jpPIoTH651eJzM8QTJnUtx+ByCSzS0mqe97jpycaSK+Mcfmb
      e0QyBt6yZs6eO0mVL8eDb2YpqRUYvD9M9amPOFZnl0bcTXYtC2RqaWb6v2ZJbab0ifmJ4g1Q
      RY7FVA6wiCwuUtxYjywIZCLzLG88qRNrc2Q9zXz0t3/P371Tw+hsFABvRSs/+euP+fgXP6Mk
      Ns98IkdZicVA3wwakE/HWVgLPpcXnr3/Jf/660sIrac4VKIgCJCLhQgl173+lpFnZWWRTN4k
      FwsSNny899d/z8//9A0Whlbofvcv+IdfXCCytG5yk91lvP2nP+eXH/8tb/gyjC2sAhqLD+9x
      vX+F1jPv0V1j+4F2m9ceAZKhKe78+h/Jh1cpP/o+P/1xN+4nZSi5Odzu5fOxIF1+iem1Ms69
      5XzOsCarLqqrq1FlwOnEwgJ0MvEIsw+HiCbTrMwG6Thl4a47QvOD3/JwtZOq+IUy/sAAAAz0
      SURBVBhiURv+ZyrjVhw6Qpswz+hyiFxnLc4XPhpkSirKcMsiKdVFia+EIrcD0VJQNlaRtVyK
      qdFRwrEEsaVllO7m9ctzVnLh/YtUq/JzO7TavH5euwC8pc385OLPcS7e5tpwGM2ynrm5BYoa
      O3DeH2TGL2M0txHYbh3B7DLXb09y7OJZuookJqxbmCIgumnurOHO8EPymRDVZ88hP3NIZ1EZ
      XV2NZL74IzdHKnmrs/IHXGWC/mu9eHre4my3h8hoL2MbehMVFx6nvA921ioMdmkIJFBx6BTv
      HfPz1edXmQ1neGpB2lFJc+UKf7gWoa0psP2bxTIxLYF8Lsna4jxzyyH0jcl0oKYDx9rXPMjW
      0xbYQvdyEUffvoA+cZ3h+SgOF6zNLbCwuMD09BSrke2++mhh5gVMM0t4bYnZhSUydmnEPYn0
      q1/96lev84SyQ8UXKEGVRZyBKircedKmk0CR84lFFQFVVckpft5orkbZcJSJsgOvv5SAW0FU
      VLy+EtwKIMqobh8lxaX4pARLqzEyWZ3SuiZqqktxKzKSIhGbXcbXcYTmMs9TbRIkBdXjI+B2
      IDlcVARc5CyV6ppKzOgaa7EEWd1BQ3MDVWWlqKoDl9dPkcuBIEg43T5KSr1IgojqdFMSKKG4
      2GJhbo10OoWnvIn6mnL8bieK6sJf4ts09I7Ph7g7uvxK+9/mafasF8iyLB5VMP8+q43WRhHc
      p4ohaSnmZqcZnA7Rc/48ZZ7tV+fc9Hjb/B6WhSUI2yqpaFkW1/tn+OT6+LbPsZvsp7IoL2rr
      nhXAjpIO0Ts8TVH1IVqqA99aovcSthnu1fEiM1xhCGAfYAvg1WG7QW1stsA2w70k384NRHHH
      UprX+mf5py+Gduhor5ZH86L9wIvaWvAC0LIhRvsn+bb4m6hQ3dRBXel6yDTyGuFwGH95FQ4R
      9FyMhaUUpeUuFqcjNHa3sFODlpxmEIq/oAydzY5T8EMgSfZQ09hIY2MjDbXlRKb6WU4/3kTY
      yKUZHxkiY4CZT9F/9Y8smR5EPc3y/Cr6C45ts/cp+AggyU5KKpxg6SwPjJCrOMXR+sfrBJa1
      Xl3YsnSWhu8yr7TzYYsfK57EzKeYuP810zMhSttO8WZXLZaRYbLvHhPLMRRfLcdPdFHiVsiG
      ZlnJwOLIIGuahxPneqgvdu/ilduAHQG+JR1eoHc+zenjrc+UOrHIpWLMjA/QO5PjzKmOjSGP
      zuriHLqvmQtvHiHRe52pDJhmBtnbyKmz52j1xfjy9igAkfEb/LF3idru05ysF7k1MP26L9Fm
      Ewo+AgBgJBm6eY/izh9T4Xu2eoBFOrrMyLCG4O6kyPmoy2SqGjvpaKnBAzRV3CGbB9kZoKJc
      Y3pmhnQyxdra+t8LokDH8bM0VAFyGdfDdnHcvUDBRwDL1Jnrv8VKoItTTYFNOkSkuKad9z78
      iFrmeDC5grnJcR6RmLvNp19P4imroq62Eo/DfsbsZQpeANnYPP2zJqeONqNs1RuCgKT66Dl/
      gvjwDUZXs5tWlgZILM9R0nmKxpoq/C4Fw7Sf9HuZgn88hacGmVxYIvxfK+v5fFGl9cQFejqr
      kABRlPB6i5AEAUegnjfPZ7g90E/ZiQa8Ps+3TxBnUTGmCIHmLsJffMJ/j7rBsvAWNQKguIvx
      PBpdyU6KvbYw9gK2FWLHWS/DqJvgcCjbXiSzSyPuDrYA9giWZRFLpEhr++PfkdNyOBTHvlgN
      zuWyqOrmr5/aAtgj2Ga4V4dthrOx2YKCnwTvJSYXI9wbX9vtZmwLXdeRZQn2wdvNup5Hljd/
      CerACcA08qQSSXQLECRcHg9OZZNNfi2TVDxKTnRTUvSC8iSWQTyeQHUVoTq22Cx4C/RcmlRe
      wO/dXu2fqaUo//rl4Pc6h80P48ANgTLRBW58dY2hkREG++9w5fI3LCWeTzka2Th3vvo3/v33
      A+Q2Oc7jP8wxMNBHMPb99wLOhObon1z63t+zeX0cuAhg5A3UQC0nTh9DMTQWRm4x8GCSsgtt
      PBkE04lV8q5ODhmzTMdO0OGXAIt8Nkk0nsYSFLx+H66NR0Q+myK4ksAQHRSXFCOjo+VBdSoI
      pk4qncXh9qKIFnlNA1HGVVrHUf961DC0DDkDssk4minjLw7g+p4RxWbnOXACgPWX6EVJQpFc
      BEpKEYOZ5+wL0YUxlNo36eAu/WMrtPbUIOWj3Lt6k7AlIQsy5Y3tdLcUQyrE4OAAbkkjFglR
      evQnnKpJcf9+hOMXjiEHJ7l05R71F/6G4xUW44MPcNYcJpAa4UGijB8dayL88DKX5t1UOHLE
      ozFch07z4Ymm3egemyc4gAKwyKXirK0sY6XCjAyMUXnyw6cdnkaEqSlo+dMAvnQr3B4npVXj
      y4SYSKh8+ME5/E4Z07SQ0EEtorXpOG0NJSSDD7hxfw2hsZJsuo9Y8jDGUoxAvZ/gxDxacRmh
      cJDmFhd6KEksXQSAnk1Q0nyBC+1exNAQ/z6c3JXesXmaAygAg8jyFL03lpmYSfLBL/6WN6qf
      rgOUXZ7gweIS0S9+h6BnmVrO0NLTg6+knrMNi/TevYlsQG3XKVrLJZAdeN0qogCiw4FsWUiq
      m4BTJRgKouey1FUfZWF0lFAScno5xUUyqSfOKQgCbm8RigSIEgi2FWIvcAAFIFN16Bg9b3Vx
      cugmdwZHqPUfI+BaL3iLpTEzGeXohTc5VOYDTGqG+5hfi3GouILGE29Rm0sRXpmjr+8W5RfO
      b34a0UFdmcqthRXKTCguLyE4D2sjQ1D7Fi6RpwRgszc5cFmgRwiSSt2Rt+ipTHPp8i1C6fXa
      hEYmyWxGp725lbq6OurqGjh6vIGViSVy6RB3b37D/eFJZucWweVnswzqxhkoq68mMn6PhNJA
      kctBpUfhfv8qzS3fo5yjza5y4KwQRj5HJmfi9roQAdPQiMVSuH1+VFnEMvIk0xlcnqL1vX0B
      TI1oTKPI5yAWCpPO5bFECV9xOT6XRDqdxqG6UWQRw8iSToO3yIlg5YkGwwjeUvwuCT2bJBzX
      KakoRgb0bJKUIeP3OMmno2hyYN0RqmeJZiHgfbz+YJvhdocDJ4D9imVZDE+tcHdsZbebsi10
      w0CSpH0R6dZXrTcf7dsC2CM8MsMpyvbrlu4muVwOh2O/uEFzW5oMD+AkeP9imia6vn8KrRjG
      /slkbdWvtgD2EKIo4nA8+1L+3uRRtNovEWCrfj2wWSAbm+1gC2APsR+epvuRF/WrPQm2KWjs
      CGBT0NgCsClobAHYFDR2GnQvYhlEF8fpH1tCLW/mZFfjc/sav3ZMjfnpGVwVzZR6128bS8+x
      ODXM+GKS8uZOOupKkXZ1AzYLPRNjcmyM1bhOSd0h2hsrkAUwcwnGhgdZSkDz4SM0buwUakeA
      vYZlEZsb5NK9GSrraxGX73LpwRLGLqYqEivj/P6T/+LTL79kNqJ9+/ul0RvcnUhRU1XMwp0r
      DKymd6+RQD4d5+aVLwnqHmpqyklM3uTG0CqGkWXw5lVm0y7qyxT6Ll9mOrm+iGcLYI9hWQZT
      M/M0d/fQfqiNExd/jDh5k9XM7ikgEUtx+OJHnGzwYH7bjByTI8t0nT9HW0c3P367keG7k+zm
      fuCi6uXUOz/l/MkuWlpa6eyqIz61SCIZYSkpc+rkEQ4dPsW5o26G+uYxsAWw9zBNcnkNv98H
      gCgW4S8WSKZ279aqaT9GQ4n7GeNbiESmmjLful9cLq2jNL5GfDcauIEkSTidTrBMtHSQ4d4J
      itsaEfQooliJW12/3d1ltajxIDlsAew5LEAUhI2aO4AADtWBab6oKPtuYIDiRHmkCtGJKhsv
      LB3/ejAITvXx+8+uQMvbnOsoRhBMJFlF2mirIDqRJQMLexK85xAEMAyTXC4HrD/NUskUXmmv
      VZBQIBslbVh4JAFLjxPPKbt6Q1mWwerILa5N5Dhz8QNqSr0IgGBJaLkEedNCEQWMfJxMXkHE
      jgB7DkGUCHg9zC8uA6DFplhJllDi22s26XIqykNMzyWwLIPw8DDZ5ib8u9iifDLI3dEQ599+
      k/qy9ZL2AE5nGYKxSDCugaWx/HAMpbERJ7YVYg9iocUXuPL5VVLuAOlggiMffkRXpWeXnlYZ
      bv3uN4xF80RX56CohurqWt585z3csSG+uNaP6nUSzTh498P3qd5FoSaCg/z6//kcsbJ8I22s
      UN99lnNHawk9vMnl/hX8LoOUo54/efcsPodgC2CvYlkGuYyGpKoo0t4N1KaRJ5c3UBzq41dM
      9yhGPodmCKiqgrgRHWwB2BQ0e/fRYmPzGrAFYFPQ2AKwKWhsAdgUNLYAbAoaWwA2BY0tAJuC
      xhaATUFjC8CmoLEFYFPQ2AKwKWhsAdgUNLYAbAoaWwA2BY0tAJuCxhaATUFjC8CmoLEFYFPQ
      2AKwKWhsAdgUNLYAbAoaWwA2Bc3/D1Vdm2Rrhi5JAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overall Toss Decisions' width='192'>
      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
      AITSJABCaf8PHIOkFsEgeekAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Bowlers Stats' width='192'>
      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
      AcezzyAzBIr2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top Fielders (Catches)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Fielders (Run Outs)' width='192'>
      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
      jwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='59' name='Top Run Scorer' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA7CAYAAAAtiYXdAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAF0UlEQVR4nO3ceVCVVRjH8a8RJJdFvNclc2HUyVwyIXdtHBQkNEbGJUsRGxHNLTcUaxLU
      URRRxtQUxYVJR0oKTEMBl8QcUgq8oeMAOQomSqIXUBAUudkf6M2d5Tqhnufz53vPeTiHeX/3
      Pe973zn17ty5cwchFPVKXQ9AiLokARBKkwAIpb368IGSqyV1MQ4h6oRcAYTSJABCaRIAoTQJ
      gFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIk
      AEJpEgChNAmAUJoEQCjtkV0hHpaZk/l/jEOIOlHv4a0RZVsUoRJZAgmlSQCE0iQAQmkSAKE0
      CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpVb4M93RG/k7dyY6Yg6TmlUH9N+jYx42PhrjT
      zsECgDPxK9lteA/fMb3Q3uuWe4h1MXrs+/rh083hwZJn41gZ9+ALeNrWrrgOfAdHa4sajC2Z
      ZR5fkugWTNKcvrWeoXi5mXEFMJITPRWf+dtIozVdnbvStTVkxC5n4ubjplb5p+OIO3aOG/8d
      Yc/aEL4/2YDuzg6Plr1yirj4RI78nkaaPo00fQq7ImbxyaiZRJ831mB8Teg8yBPPTk1qP0Xx
      0jPjCpBK9LZMdCPWsd2vE6bvZmMZWeevPrFX/t5lrE1vivcaX9o/8QvdkVEhmxnd4m7JosMs
      nbCITduS8Ax0RVOt8b2J54w5eFZ3OkJJZgSgAmMFWNvY8MB5bGHNW21aPr5L8QFWh+ux8/oK
      33bVX85YOPRnQM9FHMq+jAHQAKV/7mFVeCRHMwq5CVC/Id2GLyHIpxP2AFxid6A/37Xw59tP
      uwGQunEUYUZfvmh0hJXRKfxVchvLxr34bEkwQxwrx3Pl+HpCNsdzMreY24ClbSv6Tw5lnuvr
      1GQBJl4MZiyBnOnR15Lsb2YzLSKejPwynr5Auc6BsFCS7YYRNNGphidTPpfzAFtbbO4eMWT8
      RkGHsSwLjyEmaivLPJqSvuNztujvjcLIjYI88opvmarcKs4jb08Yq3M6MjpwI1sXjaBt4XHW
      xqaa2pw7kY7W3Z81kTHERIYzpUsJ+1cEs/tKjQYsXhBmXAE0uM7bwLWQQCJilzM5djn1m3Vl
      yLjZ+PVrjtX9Tc9G4OMRUdlnvh9OVZ79RkqvGTBo4OaVU+zfsZ6o01oGL3Yz3Ui39FpCmKm9
      jt6TZjLy2CRSzlwC5ydcgQDcAtliuin2op/jD2QaK0wf95yykZ731R3qP5nU5GCyzgKNq/yn
      iBeMeY9BrdoyLCiKhIQkkhKSSIhcwNu/TsLdM5SU+9u1ncj2hCT2LXZBv8SLSTEXqlc/fx+L
      /Rfyk/00ovfGEtD93uq/lJRVw3AZNZfIXzK4WGDAUHCbetZmzQa4QPSMgQycEMqu9HMYCgwY
      bhqxNLeseG7VPgClhRSWP3zQnlaOjaDCSMVjumi6+xPkZUdmZDDRuU8rboGmgQ5dex9CFw/D
      LimI8auSuW76XM/PiQW4Tg1hXL8ONNfq0Gkd0Ji7SM89yv6sFoydH8DQLm3QaXXotHa8ZmZZ
      8fyqfQAK4pk7cjzB0Qnosw0YCgycSwknbGc2ln174PzYThY4TVyKd9NMNq2IIqcaTzXtnaez
      dv77cHAhfqYQ2GBjB1l/pFFoBGPZeQ5HrOTH87WeTSWNLXbkoj9xkXKg/Kqe2NCtHDGzrHh+
      1T4AzQYwdkB9UqNCmDV5OMNHD8d3wW4M705nw7ynPKq0aI/vPG+aZkUSEpNTxY1zJfteAayf
      25uKxIUERJ7mOk4MHdOZq3EBDP3ABdcP55Lo4EF/x1rPppLWjY8HN+TURm/cPVxw9/ua7D6D
      kJ/RXl7PYFcII2VFRZT+A1a2Ouysqu7xrBjLiigqMz7zv1teYqC43AJNAwdq9OOzeOHItihC
      afIynFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKG0fwEAM8u6tuNbpAAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='45' name='Top Wicket Taker' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Toss &amp; Match Outcome Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Toss Decisions by Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Toss Wins by Team' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy913Mc2Xrg+UtT3gEFU/DeEo4AyaZpsg27r5kraRQzMROxz4rYf0PSo/6A
      2dinCT3NvuxIG5qRru69fduQzaYBAcJ776tQ3pt0+1Bomm76Jolid/3ekJWZ58PJ/PKc87kj
      GIZhUKbMLxTxtAUoU+Y0KStAmV80ZQUo84umrABlftGUFaDML5qyApT5RVNWgDK/aMoKUOYX
      TVkByvyiKStAmV80ZQUo84umrABlftGUFaDML5qyArxFDMNA1/XTFuMhhmGgadppi/EQTdM4
      7WDksgK8RUrthQNQVfW0RXhIKfSNfNoCvA6GrmMIAqIglPy9//nmMhOr/jdyrzeBoesIYml8
      94qyCMCbf44vy7tTACXJ+P1FWvqHqKu0g6GxtzzHseTlXE/LK90quj5Lsn6QVtezxVeSR6z4
      BQa764oHClGWdrL0dDcgPe/em/MkavupSG0RERvoqHO+kmw/JBBNsboX/kn3KPP2eHcKoKXx
      B44pOI7wVXZiFNIsbR9jrsgDTeTzKmaLGUPNoxgysqCTz2dJpbJYnW7Ip8hqMtXVlRTSCaLx
      GJa0jtvrxW6WyGdSJFIZJIuDCrcTyeqh0ffYl0VNsLkdo7u7nkIuRz6XIVMwqPB6scgCWiFH
      JJYg7A+ge3tp8NQhSxYMQyOdiJPOazjcHpxWE4VcAUXJkEwX8FTVYJMFUokImbyOw12Bw2p6
      Z91a5qfxTqdAztoGTNEASbUDIRHEWdmIQQrIMvtgk7HLQyT35tkw2mgT/UxsBKmyi2zshmjr
      bqMQ3CN09rdUUWB/ewfVlCW6YuHDD0eJHOwRTOVIxaM09F+iUT5gYdfG1dHmH0hRYOLLLzB8
      jZCOY67pYqyrinvf3cHiqSIZilNjQHhnhYinmz6vyN7uLlmlQDSicfH6eVa/+5K0ux6bHmVp
      q4XLPSK3Zw+p9lgxe1QGO+vfZbeW+Qm828mg6KDeJ3HoTxDaOaSmvenkB51cNg+ApuTIFTQ0
      RaCpu4/z50eodFUzPDbGhf56YmkFMNM1OMz5i1epsedIJBW8Ph82WUSnQCgQQ9cKZHJPW/AZ
      mG01DJ8/x9jQALqSIBdaQ6se4tzYKP3tdYgCaIUcBVVDtNiprfYiCSJK/IBYHlTBw+iFUc5f
      /ABTNopmqOTzBrWNHXS31L6r3izzBnjnq6Ha2gaC+8vsKy5a3I9m44ZhgAG8glnMMIziQioX
      5Nv7K9S09dDb1cKrTkAMRUUwn1z1g+aDO0ssH2To7hukxed56vXmqm5+8/EwyYNFvr45Tf4V
      2y9zerxzK5DVW4Pmv4ul7/Jj2mchE1ln/J5CdG8d25kenrtSFVXmx+8QlDMUrE0MVDjQs1FW
      F2dJxoJ46sdeSSZLbRvxf/2Se/Fmght7tDdfePibLIrEggfMToUIHsUZfcr12egBswtbmE0a
      kiidok2jzKsivLOyKIaBboAogq4bIAgIFL/ioiiiqQXyio7FbEIQxYcvkQDohlE03Rk6BgIC
      BqqioBkCZrMJEdA0lYKiYbaYH5owDQNEUXiifUGEh4IYBsZJG4aukjtZiEuiCA9/AbWQRxMk
      zLKEIAgYJ/IIGOi6gSAIqEoBVTMwWyxIJ23qus5/++d7fPlg5510cZlX590pwC8QXdfJ5goY
      QmnY3TEMCoqC2Ww+bUkAKBQKmEwmhLfgz3lZ3ktH2PuE2SRhMpWGWdQwDEwSWCwlogASZQX4
      ubN1FCOczJ22GA9RFRXZVBqPXVVVJEnmFN//ZyiArpLKqTjtVgxdI5FM4/a4f7S4i4WPMTm8
      SEaGvGrG47L+RHFU0ikVu9MKmkIyXcDpdvzAVGWQioQQXFU4TD+cWujEjiPYa6t5/jdOIx4K
      ky6oSGYbVd4KZAFiwRC2mmosjz2RWOgYu7cW82vOYv4wvl5eA5QwT3+sapLphU0wDKL7S8yu
      B5962s7aHIFEnkTkgL3D+HMb2tlcIhR/0Zcwztz0DhoGB2szrB1Gn3pWLpWg8NQ4KpWd+WVS
      Pzg6P/0A9YmgzCwLD5ZJ5XMEd5a4cX8ZA4N0PMEPPQc7K/OkSid+rMwb5hljoUGhoJJPHjO1
      HuGDq9dAy7M4Nc7OcYa6rgGGuhp/dJVWSLO1G6Ktw8fy+DgHsTy+zj56fDYW5qaRXWEaW9rp
      bq5geWqCo4RCXecAw531J6OLjlJQyYZ3WTk2uHy5gVwiwObGIceBQwxPGx9fPoOS0zCZQFcy
      rMzPsh9MYq+sZHBwGF3JsDp1h9BBhM6RK1TpAaZnZ0kVNNp6R6jzmAEdZAct7R1YWuoIfjVJ
      nl4KuoYM6IU0i7PTHEbz5NJpmg2dwNYys6t72KoaOX92gEJgi4TJxtbKHiNjvWzMThFMaTT3
      nqW/pertPbEyb5RnDuzx/WV+/+9fUds3hssM0Y1xjq29/Pa3n6HsLXCYeOxrbhjoSo7V2Wl0
      RwWSINLcN8qVKxc43lpEkVy0tLbS1z9ET1sdkmSi7cwoVz4Y4XBxnsfHBf/GNP/65/t0nhnE
      bhLJJI8JJi189OtfU5UIEAH8axskNJ39xSni1kauf/4Z5uQeKRV0Q6emfYTffHqJw80Vqho7
      aWlqZGhkhBrXo8WoVsgSDQXZWV9Fsbkwo7O1ukEe2Jx/gFHTy+effUyT14aWDjK3HePKp5/R
      7U4xsxYiebjKjfurdA8PIYQ3CMlNfPTxhzRW2t78Uyrz1nimArgaurnyQT9Hm5tohkHoIENL
      Zy2CKNNS6yGeeczfqRdYnb7LZspBV50HLRVkanaBne1dUnkNEJAkGdlkwiRL5OJHzM0tsb27
      Ty6r8vhsprZtkIsDjezuH6AZBogmqqu9yKKI2SQ/4agN5aG7sRZJFPne3C+bnVRW2BEkGxaT
      gSSbkCQJs8n80D4PkE9HWZm9z81ZP1cuDj/REaGsRpuvElGUkCSRXDpFPBZg7sEEa/40hpJF
      QObc1Y+o89hwNvRQJ4a5++0tNv1xSicFpsyLeKYCiKKEr22QLnuM8WU/dS0utlaPUJQC++Ek
      FXbLo5MlC33nPqTTkWB63U/qcA1z0xC9fT24LEWXrmwYpLM5VFUjETzE1tBDb08XTsuTIoiS
      TMvABSrT2yzsPD+MuNFlYmFzn0TkiMNQ5pnnqWqBQkFB0x+pj72ygUuf/pZfjVRz594cymNv
      rc1QCMTSKIUsubyGzenE46ljcPQcH1z8kKGuWkB86GRTNImugbN8eHWM+NoGz5akTKkh/f3f
      //3fP+0HQTRT4XFRUVtPOhrE1zmMdjTH+u4+lrpeuhq8iKKAy12B1SRjsbloaW8lE/ZT0dpN
      YOkBe4dBKuqbqK/2Uumxsbm6RCgJTS31HK0tcOAPU9nQQl1t5Unkg4AgmPFUuvDV15IIx3FX
      VWC12nHYzQiCiKPCg1kQcFV5qaqtR04esBEsYNHieJv7cVslnBUeTIAoSXjcbuxClvnlDUSX
      D4+9uOwRBBl3pRuPtw4PcaK6kwq7mYoqL3U+L+uzM+wehnBU+6hvbKXWmmVmdoWDIz/O6kac
      VhMWdwV2CfRcjKmpWfYPgtT2DtDgLk6DDMNgfOmAraPnGwjKnB6v5Al+/NTnOy+MRzFtJyEP
      j18vCI9i3n6KEyRxvM30wiaqpqBb67l2ZRjLU8c045XbMx5dcCL/8+/xqG+Eh3ZtXde5PbfL
      pr90FEDTNCTpeYFW7w5N0xBF6VT9AO91KIShaxQUFYOiR1EqkVS/79F1HU3TSsoTXCgUsFgs
      Lz75HVAOhfiJCKKExVIaX7My7yclpQC6roFwEmVpCE9Ybd42hqG/cpuGrqEjPvea/+fP89xZ
      PHgTIr4RDMM41S/u45SCLO9EAQrRPe4u7GGSBcy2Snr7unBafty0f+E+qbphWjlkOVXBSHv1
      w99i+8uE5Ca6TpLUQxsLLB8nkA0DZ20Lve2NmKTX70w1uc3soZtzfdUvOFPnaGUKo+EcFdFp
      ZtUuLnU8PVEGIJ7OcRT+oW+6TKnwTibNWiaCXN3JudERqkxJ7k2uoGFQyMTZ3toiEE0V56fZ
      NDlVR1fzJFMJDna22PdH0AywVfrwVTyKNUoGEzQMDHF2ZADNv8rM1jGGrhI5PmR7e4doKg+G
      QSaTQSuk8R+H0XSdaOCA7d19MoVifIOmZDnY3WHv4Ih0TgUM4sFDtrb3SOVVlHyWvPL9uTmy
      eQ23r41KW9FjnM5rYOhEjw/Z3tklli7ng71PvLNVoyhJmC122vqGcKb8hNNp7t+7TyqfZ+PB
      OP7ck2tx/942iUyW9Zk77McVYjtzbISUJ86RJBmrw8PQaB+R/SPyhTzRaJRcNsH9OxNkMZh5
      MM69777DH8sQ2VtiZv2QbDLI5PQKBSXD7L17HCczZDNZNCB3vMa9hT1y2RjTk3NEAjtMrx1i
      YOBfnWI3VuBgborjx97zfHCdieV9ctkkgWDsHfRmmTfFuzebCCImUSMZPyalOKiprKS1Wmd+
      88kXp7HzDP39Z+ht9ZLOaWhqHkV7uo9VkGVQVJBl7FYL2UyGnD9IEsin4jQPXWWkp5m9vQOq
      an14q+sQolvsHYXJ2H2MDvTT3dGIDGwtblLd2oTXW4uWDaDZvOT9B6RzSTaOdZprrCj5LKrx
      ZPtqLofJVkmDr/Lt9V2ZN867VQDDIBs/JoQbr1Ugn02SSCbJOlo52+R4zVvqhPf3MVd7Sewv
      sxUy6B8cornGXTzB7qXBa0MARHSSiQTJZJqG3mE8JgN0AwOjmGAPSCIk4nGSyST1HWfweqpo
      qNZYW9nF4q3D/pQeM1W08dlHowjpQ+7cmqF0ov/LvIh3YwUSJLZmvyO6JmOYnAyfu4DHJeBz
      L7J3eIxQSGOtakUUZSQBhMcsK4IoFY+J8hPWFlHKMfHNlywYYKmo5cL5FrTIOtHAFg8yBwSj
      GZrgCadPV1cXNybXMbIODJMH33AnxtwM39yKQdaPyXeV9uF+Vm7ME6jxoAhOmhqbqK9rZOqr
      O5z71X8BQJJNxdgjUUISBXKxQ+7PbWCSdWRrTbng6nvE6TrCDANFKSDK5jdm8tRUBR0Rk/x0
      /4ChayiqfuKAKY4gSkFBMlmQvn9zDY28omM2yUUznaGjqBqyyfTMig+6pqJqxsP7QtER9n/9
      8zhfTm2/kf+tzJvnvfYElzplT/DzKQVPcHm0LvOLpqQ8wT9HlnZC+KOlEyCtqiqyXBqPXVPV
      4hqtdGOBdOLBAJFUDkG20tBQh/k1va35ZIhIwUJ9levhMa2QZmtji4LsoqujhVjoiMrq+ud4
      dA1iB7tQ00qFFmErIdPuc7+WPK+FrhIMHJHKqQiylfr6Oizy8/vjm+ntclJ8CfOCKZDCyuwa
      WCyQPeaPX91D1V9vyZAN77J2EHn4t5qLc/ubm+TNHpxShkQWtjfXyKvPy6cy8C/PFJ1QyUOm
      t0KvJctro2SYXd0pzqGzIb64cfeJJJsy7x8vGAEMDMGMr6EBm1HPwe5XZHUdxb/J9PwGimRn
      YPQc9qyfhFxDm89FfH+FmL0DS2yJ2TU/kq2Scxd+XKszdrCK0DDCQGfDw2NruSRzk7cJH8do
      Gb3MYL2d5bkp9kIp3LUdnD/b+WMRtTxL0xPshNJ46zs4O9hOYGmeQC6N/yhEU98lRjqr2Fme
      Zn0vDIaFrgtj+MQ0k5OzZAwLPUNnaakysblxQCpygKlpBE96g8WdMLbKBsbODuAwF0spCmY7
      DQ316EoFC5vfoRvPL2NaprR54SJYL6Q52NtlfXmWlOzGJhaYndli9NrnfDzWwtLMKrJVZn1t
      E00rsLRygMtpwuNr58KF8zSbIqz6fzwHzqUTVNbUPHlQkGjtP89/+GwE/0EQQTLT3D3I+XMj
      6IfLT4QffE/yaI2AUc2n1z/Bnd9nM5AichCgsussv/vtr4juLaNGN5kPyFy7/jmd1TKJRJat
      pVmqz1zm44tnWJqfR9NzTH77HZamQXobnGxuHTFw4SrnhzqfqAmUOFzlj3/4I7//0zfUt/U/
      Mp2WeS954WpI1wrEQ0cszu/yl//lPyOJUXS8OKwyZmsNzsIBYuUAVdoqm0fV5GxVVMoqE/fu
      46htflg09octmcwWEvEk+LwPj0kWO267GUk3IQsi2USAucV9qmoq0A0V9Sm1gFLxJLFgmukH
      MXJZaERFlW14PHbQVGTJoBAPU9k8gFkWT/bHUokdR8noi8QlDUkwoSBQ1z1MX1M1ggADI/1s
      rUyzpMicv3COCrn4prsbevj00iiFTIyvvpkg29WA4wXrgDKlywu/X7KtkjNnP+A///osd7+9
      QzLvxCKHOQ7HCB/skHFWYBXNtHc1M/vdDapbejD0LImMieaGelz2p9do8zR0EFufIhCJEYsE
      SGZ/PJdOxaOYnTU0+GoxP+NTW1lTjdNdQ2//GYaGh2iotP/oHJuvncTGFP5AgJ2dQxRM1DTV
      Uu1r5cyZAUaGezADoiieFIRWEc2V9A4NU2crcBxJP7yXpuSIx+Nk8gqqpiACkYCfjKKRT0UI
      xkrH4lPmxTwzKf57TGYLTrcTm8NLvdsgqtjpbqlka3OHaBoGhnpxmCTMJpHN/RQXzvUiiyZk
      NcZeIAi2GhrqanHZLdgcLlwn1SRki5P6SpmlhWX8oSQ1TU24rGZcLjeSKGK22KitqSQWPCAY
      SeCpa6K22ovDasXhKSbiW+1Oanx12NQo23t+4qk8VTW12O1WHG4XMmA2W3BV+qivNLG7f4wk
      CVgrfHR3tBA92MQfiqBKdmoq3VgsVpwuOwIQ3F1jzx9GsFXT1VaPLAogCGjpCHuHxwRDUfrH
      LlJpNxMPB5EdboRCglRBxu0o/o/lpPjS5414gpVMjHu3b2FrOce5nhLcH6sQ57tv75FQNHTR
      wZWrl6m0v33vrK7rPFg5ZC+UfOttvRQGqJqG/IwwkXeNpmqIUjkp/mdLORTi+ZRDIcqUOWVK
      wyf+nvO8+jb/+PtpbszuvXuhnsmjrZ9On9OX5RQUQGVrdo2a4X5sSoaZB0v0XzjH4tQ4I2cv
      IL9mqIWSCTG3dMzA6BnMRp75qVmah8YIz05TMTZK1YkVaX9tis2jDCbJQHb6GBnqfqna//Gj
      TY4UD31Pqfw8P3WXzuEPcT7F4JVTVFLZwmv9T2XePqegADqJUIQKXcU/O4FR3Y9NhNbWdkQR
      MukE6XiUQCRDQ3sHXoeFQjrGzt4hgs1JXW0DDrnAxuY2muSkta0RqyxhslVSIa8yt35Is3BI
      VKxi0CKweRTg8RlvMlego3eYukoTa7N32Dj00VQh4XI6QMsRz4DbahBL5QgHDsFeTVuzD1tl
      LY2aCUNX8O/uEEmr1Ld1UOkwo+SS7G4sI5jsdLQ1YZHLM8v3hVN5Uko+wer8BLtZL2c7it7g
      man7aLrA8v1vWA/lcUhZJua3UNIhvrs9gWF1kj+YZdGfY2VinJRkx2LkSOROvGOCRGv/IPnV
      cb7dznFhuP0Zg6tQrPosS0iCCGqG6aW14k/ZA+5M72MkdvnD7TlEq5PAzgL+aI5U/Ii9/Ria
      liWnSLidFu7dvYumGWTTKXTJCok97i/u/nCr4TIlzKkogGHo5FJp1Mf2hyoUinEOgr2S3s4O
      2juakDWNZCKM29dDT1sLPo8VxQCXy0I0FEUzO3BbHw1igmhCIIeiSs/OMMtG+OaLf+N//dsX
      xOQGOnx2FPVkCxhDo1DQQFfxtfXS0dZKbZUbvaCi6xqqZiDoIoaeJRAIEowmMAwDm8tLa2sb
      /SP9aMEIytNbLlOCnIoCmK0VDF28Rp2xx8JO5LnnyqJMLpdC1VQy2WK6eV3/BS6eaSF3uMjU
      5klEqKHj31iElg/4sNFgYvkZ1dhsXj751V/w13/1Oz4Y6cYigq7pGBjomvrCr3d0e4pDvYaR
      syPUVzy5GYaayaCa5LJp7T3iFNYAAmarBUkyM3DhMre/GifW+Cl2W7EqhMViOam7L2G1mHFV
      NVK5/4Cvv76JnI1h9oJ/bZr1sIqe0qhvKxbLUjNhNsM6Yx+0YzXq2L95h0hnPWa77Yl/0mS2
      ID2+0JYtuNUI3353G7IhTPYhkESsJunkfDOyJPL95mFmVyXRmXnuHkvEleKrrmci3LvzLWou
      Q/fZy2XT2ntEyTvCtEKeeCqF2Wxi8/5NzMO/pa9KRlUKIMrFl/MnUkyMVzFZzE9dN+iawu7q
      NHG5jZHuajRVxRCkJ9pWFQVBerJyha7r/Pd/neTm7P5PlvFNYWAglIgZtBRkKXkF0JUca0uz
      HMcLeJu6GWj3vXMZMvEjltdC9J4dfKXIz7In+PmUgie45BXgfaasAM+nFBSgPF19y0yt+dkL
      lkp1aONkh5jSeOyadpIUf4rToFfrCV1hY2meSF6mu68PLR3EbK/B5XjzX7jAwRbO6hYcJxtg
      qNk4i4srKCY3ff09T9kl/vXRsnFSOPHYJAqpCEnDgZA4RvD6qLQ9f8/5F3F3cb+cFF/CvPRb
      ZBga41/9OylLLR1NXrLZAqHjA+Lpt+PmN1tsD3dh1PNJbt0ap6Kpi2aviZ0d/xt1NuWO11g9
      zoGW4eaN+4gmCdlqxVTOd/zZ89IjgJHc4ljq4nedDYgnc7bEXpbVuQnmM1FkXx+fnu9ka+4+
      a0cJzPZarnw4SmRjlt1QingkiL1ukCtn65memEUpZAjFMvRf/Iwud55b9yZIFXRqGvs5e6aF
      cGCPamcdNhMYukpOM3C5XFTavdQWG2ch4WGgyc3R5jJ6RTOWxCbzO1FSySTe1n4uD7axMXub
      9cMUZk8dF88PEQtskU2k2A9nGP3gCh5r0QqkGTrLE7fxDV+mwiKzsx3AaXGTD22ysnFMOhnB
      cLXx6bUh0odrPFjYQRUEnBUtnD9Txfi9B6QVqOscYqSz7i09rjJvmpcfAZIxzLV1D1/+4tUy
      jV1D/Pp3n2FJxEimQmyHRT69/hlDlTEmd1IkonFq2gf49e9+hSV2TE4vEEnDyKWPuf5xP8c7
      QTA5GRwZZehMH6G9RTIKRAL75E5s75LVzfnBdiZu/Ikvb94lmMxj5OIE4kXvcSIaJJFRyKXj
      VHaM8rv/cB1jd51Q9pjVQ5lPPvuMHkecpYMECf8GqwGNsQvncZ+sBQ21wPS3f2TSb2GgyYUg
      QCx4TDqvkkklsVe389lvf0NNLkZCyfJgYYexa5/yq+sDxPZi5KL7JE11XLl6jZ5GL2XeH15a
      AQSni3zw+ImtUpFMOGwWREnEJIqoaoqoP8Ds9BTbCQG3pIFoxumwFuNvTqY0stWO3SwjSjKi
      YRDbXWB2K4iiGkjSoy1UHzUuUd3Uzee/+S1jPVXcvzv91N3YBVHCYjYhiiacJo10OkE4FGJ2
      eor9hI5VEsBSwfBQH26b+WEYhiCbGL7yGYMVaRYPkk+2L8g4HTZEUUSSRAxdw7A58VhlBLFo
      xbbV9XGmTmZu/Dumlvd5Su5+mRLlpadAgrsdd/oPrOw4cJvA5PhxWLDFWo231kVTWzuSlsPk
      tBM4ftGdDWKBCK7mIWxSDu0phbHUQpadnR2sDjdGQcFksSDIZtLhI46PdY6DUbw+MDSFaDjI
      YSGPX3DT563HV7VNc2s7gprB7HEQiAuIP7I6CEiymeEPP+GbL25y5L7+7H4wWakRM8ysbOPW
      9ogbJgq5HGZHJd39VuanAuTp4Mep+WVKkRcmxX+PIIg0t9QT2Nsjlsziqqqhyu3C4XBgkmVs
      dgeuikpq3SYOA2EyGQVvbQ1upwOHw4EsSVjtDhwuJ06HA6fdiiiacDgc1DXXEj44IqtCc2sr
      FW4XDqcbt9uNfFKoIZuIcHQcJlMwMzo2iMVRgTkXIpbM4qltoqG2inx4h92ohgz0DQ3hstio
      rbRwEAiTyel4q6tO5LFjeixkWTRZcTgc2K1WGus8ZDUz1V4PLpcLu82O3enAYpKx2O04nE5q
      fT4K8RCi00oiCF2dXvxHAVJphcaeHqpOKmGUk+JLn5+VI+xobYJ0xRBdNW/R0aOr7Cw9YHEv
      gqFqdF/4mC6f8+khFLrOwlaAQDT79uR5RUqpOK564gc4zXCIn5UClBplT/DzKXuCfyGU2jem
      VOQxDOPUZXk/FUDXUA3xtfOH3xSGrqIZ0nPl+L//ZaLsCS5h3ooC6FqSb/79BrYqL9lMjq6z
      l2ip+rFdJBtYZyVdwdmOF+3ODnH/HkJVM24TEJznVqyVT3orXkO6Ag++ukHK5sDI56ls6me4
      6/UcV+mte9xXzvBpX3lr1PeVt6IAhqFhcjXwwcWzaJlDvr27TN3nZ0kd7rB1GMHta6azuRZT
      hY82uxnQOFhf5iiap76jh4YqJ9mYn9WNAywVPlrrXczduw0dY7TUVNGCTi4VYWZiFZO3md72
      epREkNXNXbBW0NPTgZk8sXCCw70tNHcjg52NJ34IHd1wcPbiJexKkjtfTZPoqsOpZFheWCAn
      exns7yCfiCI7PdhMEtlUHF22ocSP2NgL4qhuprfNB4aGbhhgaBxsruCPF2ho66be+3pbvpZ5
      97zFYBcBUSgWuBWsNkRUFMNKS1sLmcN5NgJZ8ol91veTQAHDVEl7exNrs+MkMilmx+epaGzB
      Y9FQdDMOhw2nx4PTXswACwRC1LW0E9yeI5zIU1BUahpbcZNgenEbJe/nq69mqWnpILe1TKDw
      WKauICAIAoVsirwgIWsFJm99h6mmBZ8lyq2JNTLHG8xsBjFQWZ99QCyvkTdMtLS1oR9OsXj8
      6H6Zw0WWwiItzT6UfHmX4PeJt7QGMPBvTPEvR7NoVX18fnUMWdPJZWOEj1KEYkl86RyGUy/u
      sKLqpJIh/IEsx/EUiiri8Zg42N2nuqaWGruNCpcTsaoWrwPIQHNHD77aCo69btB0lEKO48AB
      yWicjF3CwENDaye+mhrSTjvqY4utZGiLL/7XPumCg+uff4y5kCeKmQuNPqCajS//jGv4Itlb
      s8SrVY6pot8pcRRKEIwlycbjkMzTenI/s6cKcXmVg0MNX0vb2+nSMm+FtzQCCKP1lBUAACAA
      SURBVNR1jvIXf/0fqZFSRBJZ8tE91iNwZniEnhbfEw1n9qc5oIGR0VGaqt0ICHSNXmGkp5nU
      0TKb/hSCoKNqz9o+Kc3y3D5NvUMMnenC9gK1dlW38/nv/pLRVif+QAxECVHTKOhgKFkUw4Jk
      rqDRC5Oz69Q3NqAmImwEkpwZOkt/+5MFgAVbLdeuXaSx2sTi+BzlAunvD29lBBAECafLhmyr
      5PKlUe5NzuM604GUmOf+eBhFLdDc/ahCsdnbRHZhhrsRMylNRBY11qYeEFEhnzfT4rFgERv5
      7s4NYs1tnPPZcVmL19vsTmTZRoVLZXbyPoKqY69tQBTNOB1FhbE4HI/l6go4XA5kk40zoxdY
      nJpkK+pisLWSb258i1lNU99/CbME7Z0tPPjjAqOXvZhIImcjTN6/h5DP4OyREA0nLklGSR4z
      PrOKJBrYalr4aRkEZd4l79QRZugamg6SLKErWfaW7hN0DHOhswJdU9EpBpwJxZNRVa0YMCcK
      fJ/NhPD0mj+GoaNpevH817GOGgaaVkx2lyQRQ83j315iO13BpZE2xBP5VZ2n7kKv6xqabiA/
      VutI13X+x59muLN4+BoCvR0MwzhVx9PjlIIsp+YJLqRDrGxE6B7swVqCeSdaJsbSdoC2zk6c
      ltcbKMue4OdTCp7gcijEW0TXdbK5AoZQOhpeKBQwm0tjkqYoCiZZLuWNsn86hqE/jK8XTsyP
      b7lFDAMMXS+aO0URVVGQZdOp9PN///1U2RNcwrx1BVic/JZwVkbLpbDUdHBhuJs3mM/+I7RC
      honvbhJRJMySh4ufXWTm9rd8cO06ptKY+pYpId66AmR0mZHRC7jsEquTN5nfcjPaUc3hxiKb
      gTRdg6PUeSxo2Tgzs/NIlc2c6WwmF91nYW2f6pZe2mvMrMwvEMmL9A+fpcphIho84vhwj0DW
      zNjo4MN5+uHqJGLjBX7bXfUwtczQ8qzO3COctzI2OohNyLO2NE84I9J1ZhCfy0Q4nsQuZNgM
      GvR31XG0scT2cYrahmZamhvRk35mF9ax13Uw2NlAPh5GsznYXt6kvb+b4MY8+5ECLT0DNFc7
      33a3lnlDvJPJqSCAKEq0t7cSicaIHiyzGhIZGepm8d5dcuS5+fVt6ruHaPTayYW2GF/w0z0w
      gNsqoWkq1S19DPc1ce/OOAB3v/kCa303XZ4cC7vfF9hViAQKNLdWFadbYtGilAgd427uo92e
      YH4ngqpqVDd1M9Rbz8z9KRStwMTtL7gxuUmdz8vezHdspm0MD3dzsDhPKhPl3uQKbQMjOFPr
      zO0miaw94H/94RsETw3q0TzraTfDgz1IWrk29PvEO40G1TUd0Ike7ZJT69nbO0JPRwlF9sk7
      uvBVuhEF2JnZpKGziyq3G4Bs9IjD3UNyuSyRdDHUwFPbRH11JZrqYPdh3SkBBBXtB0m5Hl8z
      dV4Pat7NQUZAVzIc7h6Qy6eIRwrFcuYWL598dAWLSWQ9rTM81orLpiALkI1FieezhA/3yBcM
      Ev4g1YJB74WP6a+zomd1pPVFllbi1LV1vaPeLPMmeGfmCV3Jsrq+R52vFqvThdXuor6hkdEP
      P6Ta7YFMGN0w0HUdh8NMPJlGN4qWlMO1eaxNZzg/NkKl/Xk6K1FT52J9rbhJha4o3xd1foLD
      nTXk6g5Gx0aodhVNgiarA6upOGI4JJ1ALEU+nSSZVTBZzJhNDmrq6mnrHOLsmXpAxum0FRf1
      5io+vHaFnjYv65MLZU/we8RbHwHcssqtG38GwURL95li2ZDcADvjE8zNH6Di4sNrZxlo2+DG
      zW8xWd2cH+nCNjPFzZsb2Krb6PL5mJwbJyCLWF3FEGhPRSUCIFqcuPXv7ewCvq6zhCbH+bd/
      nUcyVfLRb648dq4Lt2GiwlrF9No04W0B7G4kQaSywv1Q5t7hEaYfTDMuW9EMAZPHR49vn5np
      WSTBoHP4AnZ3JfYTf5iaCjI+s4IgGjgb2ikNK3uZl+HU/ACGcVKnUpYfZoRqmoogSsXaQ4aB
      puvF3Rcx0HQNQZAeVot7wc2L539/rx+fgKY9+36J8BGRZAGUOOuHKlevjWEVDTRNRxDEp16j
      6xq6TjHH9TFP8P/79TwTK/6X75i3iEGx35/eJ+8e/cQTfJrSlB1hTyGfirC950cTTDS1tuG2
      vZ4nt+wJfj5lT/DPnLICPJ9SUID3Myf4lSl6h3nl4fYVrzOM4tbPjz3QGzM7rOxFX6nVt4mu
      Fzf1LgWKsoiUcHl0A62QYWn6AUdpg/6hczRW2V9ZY5XkMRtR6Gup/QmiPpIpeRxEqq7GLoqQ
      T7IX12iufV5+cIHNlUNa+9pfUeNVdlb2qO/reLmFbS7CSlCnr6Xm4aHF7WA5FKKEeb4Z1FCZ
      +/YWUutZPr0yRiJ89OO6nS+BZHVTX+V+8YkvSWB5hcj3yTGZYyZWnrEj5ENUAofBp9YTfdF1
      ocPAy297WkhzGE68citlTo8XfhANTSFfUJAsXs70dgFRpiaiDJ/vIL6zxJFRRYM1wr2JXSQp
      R0Kp4Hf/8So7k7MoYpL9pJUPuzwsJ5ycb7Xy3e1xMqqA09fJlYFGxm9+SVSREB11fHplhO2V
      KRKxOHGtkoF2J9PTqwgmG+1DZ+lpeHbl5eD2An69mqEOH6HNBxxbemlih1uze0gmnXy+ApQU
      t7/5lpgmYHPWcvHSMIcPponJWY5SLv7qXBNf331AXlVxeDu5dK6FdOyAW1/8gVxGpf/8VTqr
      DSa+myReUBEr6rn+wTDBzRlm1v1ISopU1dCbfD5l3jLPVwBBZujjT1h4cI//PZ2jpX+MkU6J
      ZKLojVVyadKGC0XWqW8fZPhMLQtffUcSSIe2yDVf4FcjDShHc8QzJtSsQkq1cv7iBbwuK5ng
      IilnP9fPNrFz/0vWo2dIH2ygNF7l4746/Kv3MVe18sHZHmxPxOSnuPPnL3CLImTDpBwDeGvr
      mb69SXeLi5XNBAPXJCa+C3D917/CIma4/dUike1ljIYBrnfVsrNwj83DGLnjXZS+S/zubD0I
      BmPDA/jDCTY2N8gqLdjc9Yxdv4IlccS3yzv0NAwycHaIo+MIU8tb6HoHq5tJrn72a+yZPb7a
      eJrrrUyp8oIRQEC2OBm+dJ2BQpY//vkm/W2jTzlNQJIlBEF4ZGM2VzHY24Asig+nEObKJq5e
      sLC1MslkysYHnTqBoxBzUhRd8tBklsh76uhorUUWRRq6RjH595m6/RXmhgEu9jef3MnJ5c8v
      02SSIbrB/zefQ7JV01qxwOLyLoanBrdgYMgyVqm4yBIEUAoFQgcbzGeP0XQnLS4zIVsNbZ0N
      SIJBcGGcJcPHmfpajv17GIAoigiigCTLGEBib4aJIztnu2pw7x0CWXRcmGUR4aSdMu8Pz1cA
      rcDG8iJJTUIWNASLC0m0ko/vsbZuIrx9gNH0jKJST3kTlGwK/3EEZ3UNplAIoaaXGssM7spK
      1EwWm1mAx0qlpiN+Qmmd2ppq/Onk8/8TQaSpvYPf//FbBq//JwTZhFdPc39hDY+UIlHQqWpq
      xna0ictTgaqq2M1yMXzopMFCNgdWjUjI/3Drp1w6zObaGoXjA6p8faiFTXTDSiQUJJbKARVY
      hHHml+zYs0dk1fpny1im5Hi+H8AwyCQjBMNxNCSq6xpw2WTiwSMSOQ2zyYLDU4FV0lB1GZtV
      JptIIbudFJIprE4nkiCgFzIkFQmXRSAUDJJXDayuSqo9dtKxEJFUFlGy4qurQcmmMFudyJJA
      IZsgGI5jIFJR7cNplQGDXDKF6HRiFgRQc0SzBpUuG1o2xFe3lrn62VVsooGWT3HgjyCazDgc
      LjweB+lIkFg6j2SyUl1ThZpOY3a7kAG9kObAH0aQLTjsVtxuF8nwMcmcgmSyUVtbhajn8B+F
      0EUZi91BdYWLQiZOIJxAlk1Y3ZV4ncXaRbqu89/++V7ZClTC/GwcYVo2zvj9SSraR+hv/vHm
      HaeBruvsHcdIZkpjXWBgoCpqyTjmFFVBluVyefSfK2VP8PMpe4J/ASQyeQpq/rTFOMEoJqKb
      SiNpR1EKmGTTzzsp/kUYukY+X8AAJJMZ02PRlK+DpiogykiigK4qaIjIsoSgayi68MTWSC+W
      TaWggsX8+t30P76YK68BSphTr9ehJrf44uv7LC3M8vUX3xBI/bSv5fHmNCtHGTB0tiZv8MXE
      KhiQP15hYjP0arKlQiztlEYoc5m3QwmMAAoVDT2Mna1DDS3y1Yofe7cLs9WD1WIQOozgrvMS
      DYZJHG2wepTj8vVP8VpgZ+E+y4cZBs9/QGNlcf8Bm9PFxtERhq+Z7YwJmxhAN/o42A3jbW8h
      lwwwNTlPzlTB2LkRnJJOLJlCix8RMTVQbdVwWQwWtoL0dTRRXyUCBnH/Jvdn1vG2DzLa00gu
      eoxqd7I2u0LPyAD+pUm2Qnm6Bsdo9725sI8yb5dTHwEeYRA8CmF1WtnbWSOWKgA5Fsfnyeg5
      pu7dw9o8wm+uNTN5b5PYxgSbah2ff3qB7al7RHLFSB+nu4pkMoSqpLBaPNQgENYM/Lk8dU4r
      OhZGLn/MB11uxqdXULMpbv7hn1gMSbTXuVmeusGfbs7S2NqOkNxnevOIXHiXu8thrn72GZ7E
      IpObcSLrU/zzv36Np6UT/XCWHZq4/vElHFLZpvA+ceojALrO4r0/E9rxUN9+hkvdtawtbD/6
      /eR9MlfW01zlQNftmLU0+3shNLPB7FyYRD5HJpPHa7Uh2V14lRz+4Dammm7apXlm9kIoBTtW
      i0Qi6GfLn0DLREkYPgC8bUNcO99b9GKbKvnk6jWcNhO5jAEGxOJxan1NWGWZhu4+DhcPEWSR
      sY9/Q0eVhJHvwLI1zZ07e9R3neFNxLyWeTecvgKIImcufs61s488yoKmo+g6uqqSV59uQ6/0
      OEg4muhtqqCzqxOrtWjaE0QLTT6V2/ciXP1rFw6pm8w//Rm6P8EsCuxu79B27jM8+X1iSwlA
      wGw2PwrhkE2YpSe30rbbbCTCMXTqycSOEe31UDjCYikWwtUkF5euXUPJhrn77QJ19R9S3iPm
      /eDUFUA0uamusD5xrLGumom5e2zJIrLXi0mQqa0uRoIK2KipFanrrufgzjj3/TKipZJzY4Mn
      ZckFKps7sByG8JkFoAq3x0JVmxcBqK31snj/NrIk4K1uQTSZqPI+2uOrurr6Yc6vZPVQ55Vw
      1VZRH5jk5o1bGIKZC5fqKOxFEE56T8uEGZ9eBsHA096D7a33Wpk3RYk6woxiDSFRfH4C98PE
      efHlnSmvcw1FJ5Ku6wjPkMnQdXTjJHjusaT4//3dMjMbwZdu521iUJSzmIV1+nzfn+Wk+J8p
      ZU/w8ykFT3BpfArKlDklTn0N8HPnT/c3mNt6NQfc20QvoSmQcTIFOk1KUAEMMrFjFuYXiRVk
      us4M0lZX+eN5YiHKwkaK3v7mV/4nVKUAoowsPer8XGSPpLWZmpP9vMN7a+QcTTR6f9qSduMw
      yp2F/Z90jzJvj9L4FDyGlvTzzd0Fmgcv8vHls4j5HJpRrMoGj/YCM2QHTQ1ViBhoqkIul6Og
      qA83x9B1HaVQQDcM1EKeXC6HoukYus7myhTbBzEUVfvezUA2sMbBY/nsTm8dlU5TcdGsFMjl
      cie7VBromoaqFMhmc8VtXh+2kX/OTpZlSpGSGwH2V9ZpHhrF57FhGAbNzU4EJcX40j4XR/ox
      0jvcWhL56IKL9eUoZy+2sr04zX4kTa6gMvjBNdzJZab2ssQiGa7++iLb9x6QVFVygoWLI73s
      7mxTMBfIZls509vC06rkHK2tYDT30SCnuD0+gy4IqIKHa5+OsXrzS8KyEyMTQq46y5Vuma/v
      LmKxmHDVdXOur+md91uZ16PkFCBvSLgsJgqpEBPjd9iMOPmvf3WOdCZbPEHLk0iJgI10OoeB
      TEtPL8bmLofHBxz7Y9iFGAe5av6Pv7yEANiGe9nc8bO+t0dBcNDe2Ynk6aWt3vVMOQrpNLqm
      sbO7TsOZS/Q2etifv8HKXgrFcHHx2oc4SXHrqyXyWTs5nJwbG6XKVfYCvE+U3BSowinhj6Yw
      u2r48NpVap0vMNll/Xz17Rzu+hZamnzIgGCy0t3VjgAUArN8OROiub2duir3q9ucBZBPtkU1
      22wYT/FM23z9/OpyN3tzt/nTzRkKr9pGmVOj5EaAmq5+lv58g5uBGmxijgwWREnGSPiZXZhH
      CW9SoO/RBbqBquUJHOwQDhzibiwmpX//ohuGgZpPs7O1yWEwRnsfuCxmZlfmyWda6OxsRAYM
      Q2NtbpzCLlQ1dT9cG9TX13N3boJsqJKj3QRjn3rY+EF4fzZ+zMaWH7PbjRRQX6MAV5nToiQd
      YWo+QyyeRDVEnC43DpuZfCZBIl3AbDVjMtmxS8d8dSvOJ5/2kU3EyCoGFqsFq9mGLCgoghmL
      LIKhEg1H0QQZi9WC3WpDRCUei6PLNio8DkSKm+vFUjkEwGxzYhY0MFkwi5BKxMjkNSwON26H
      mUI2j8lmRUQnl1UwmwTiiQSqBnaXB4e16PgqJ8WXPiWpAC8mxZ0/3MI78iE99a5TdaU/D13X
      CcZS5AqlMSYYFPfmNZeIZ1pRTpLiy+XRf56UQyGeTymEQpTcGuDnxnEsTTqnvfjEd0QxKf7N
      KmRtpYMKp/XFJ5YgL6UAhqGiKGA2yxi6Qq5gYLWanz/10LLEsxIep/nhISWXQRXN2Mwyuq6S
      TqbQHo4/Ek6PE/kFXwM1GycneXjstq+FUsgjmixIGBTyOUSzjVfIlwfDIBqL4amoeG7E6j/d
      WPrZrwH+z78a4y8v9wCQy+U4PDzEZDJRX1+PLJf2N/alHrlSOGZu7hAw2J0bZ+M49cJryOwz
      ufRkGHAyFCCULNrzDa3A8dEBO/O3+dO9JQ4OAhT0F8/GMruTrIRfRurnsz3/gFgBCukId8en
      UF5jInj77m1UrTyD/B5d1/nHf/xHbt26xb/8y7/w5ZdfUuoz7JceAXI5lXxki/mIhV8PVqLn
      U8w/mMCfkRgaG6O+wk46vM/kzDIWXzeXWiEbD/Dtn2dRXc1cPjeAbLPhMBeHX8lkp7NvgPxu
      moNICwMDdaAkOQxDQ62LVOSYnOTEKaaZmpwhK7kYPXfuodfW0PIcHIbx1VezvfCAreMs3cNj
      tNXYOQxEcRgJ1qISZ1sc3B6fQjNXcf6Ds7hPqkwruSyqlmfpwTS+votYRY3D1RlmN0O0Dpyj
      t8lLNHiIoevsHqbpHWhgdfIBwQz0jpyj9bHd4HNxP5MP5smJLkbOnaX6Rb6LnymFQoFMJsPf
      /M3fEI/H+ad/+ic0TSvpUeDlBn1DZ3v+Lv/zj3N8+OEYJklg8cEdrC1nuX6pl8V7E0QTIe5N
      b3Luo+ucaS2WJkxlVD745Dd49RDBeIbg3gaH4fSz2ymEWT6JnIwebLMXTLC7OIGn90OuXjiD
      pJ84oQyN5ck7pGUX0Y15jqU6PvvkA/wLE0QyOabufM3Eeoy+ziam70zSdfk6V0e7HuYXA2ST
      Ab78938j5myjt9aJGtti8kDm17/5nOTaA4IZhc2pr7g5c0BLdxtmQaJr+BKfXhlhburBk90j
      2xm78jGX+yuZnNt4+d7/mWGxWOjp6eFv//Zv+Yd/+Ac+/vhjJKk0tmN6Fi+nmoJIc+8oTn2V
      vVAaT4OLdE6huboCkwWavVPs+cM4KltxmiQwuSDpp6a+EYssYrc7EV5zKKxv72Vy/jZHWBi5
      eAmTYbB863/ibr7EX9S5WNwKkkgnuZ/yk8hlSKYVbN42PvnoPBIGfUOdjN/9jiXRwrmLFx7e
      1+qs5kJfOytLfvJGJ+mjbRIZK+P3xkkk0ngyKiZ3PR8Nf0C1QyQV2mF25RCTqBJOPenrjQd2
      2DrOIKpxkrlfbkp8Op1maWmJv/u7vyMUCvH73/+erq4uzOafuGB7i7z02CSZLIxe/jXf/P4L
      /K7fYjXJxJJZPKJGMC7R2eZmIXCAZrSBrj01wOyFCAJqoYCOQT6bRbOB2d3AR5+0kQ5vMDmz
      zliVQM+H/wlj5Qs2Al4qPBVkq5sZ6/ShKjkEdDYlqdi+AabKFq5/0kV6d5Lx9SDXh048xYKE
      x9fJB2qCm/eW+KijjsqohQsXOtDzeTSLlVVRRBCKg+Tx3jo1PR/R6cni/2ryCbG3D47oP/8Z
      9vwe4Zlf7hZJhULhoZXJ4XAQj8fRtNKxgD2Nl1IASXJSV6cjiDaufXyBhf1j+kZGefDgHjuG
      QW3fWepqKhGSIW58/TWCo5b/v73z+I7q2vLwd1MlSSWpFEupJIQEKIAFiGzAYJv3ntdy9/Ks
      Rx7Yk/4Luv+GHnveMy+P2mv1es/t54AJNkYWCigggiLKsVQ53HB6UAKMjQtMKBXofsPSDVtV
      53fPvmfvs/c7Byqoqcwov7isAs2l4Syvxu1+fLlMKaykQdpKwnfXUCFf5cqlBSTJQcDrIbR0
      j9GZILIQtHYdR0tClctB3emzjN6aobalnbXBfq4u3kVx+Tjc1UqN/1GTus2524wtRBEm7D/y
      qGp0aXUNbkWisGk/uxMjRArbaXZd58qPi5i4OXbiIGWVNTxoTFNRv4u+oZ9YUlXK/bUANNQH
      kCVorKlk8Jef0DSV6qrAc/8YrzulpaUcP36czz77DMuy+Oijj3C58nt59IUCYUJYCMGjjc1C
      bHX/lp+7vqcQAvHYNQTCEohfd5956jmPY1kWZDn/V1fCsra6l//u2Iwd/MHfnnSeZVl80zvO
      2MxLWLZ6CQgyNikveRfW2a4muloelbUxTTPTLegp98mHQJgdCX6F2JHg7OSDAPIuHdrGJpfk
      7wLtG8L//nSH/vGV7TYjg8i4rc+zEf0//u0k3oL8mDleJlkFkIwuMzQ4ieRUcBVW0NraiFOJ
      MXpzkdbOFrTHvked6ZE7lOzpoORPzPibs2OMLkTRZAlfdQNNtRUo8vNPielYkFvDwyxHDPyB
      Ftpb659vReopCJFkZGiK9v37yGbu/FqEkck8EcAL8GCv88TEBD09PQghSKVSdHV10dX1hM6h
      rwnZBZAMI7n97O+oZHH0Z3ruFPJ2Wwm19dUokiCdiBNNpHG4PRS4Ncpr63AoAiOtY5hpYvEU
      nqISXA4FYepEI1EsScHtKcCpZYZlZHGBsta3aXQm6bt0Fc17nhqPjKI6kISJbgo0RUbX0yQT
      cQzJQWlxIZIwiYTDGKgUFRWiyhIguD/yC1LNMc7XuFheWMMCLD2NunW9lClwKBLpdJpEPIHs
      9FBU4AJhEg1lructLkQRJmlLQqQTWKoLlyoRi0bQLQmXx4NL06hrqMnbVOxXRSAQwO/3Y1kW
      X3755Xab88I81QVSVA2Hw01VQzWT4wlAZrhvlqNnG7n+Yx+atwino5i2rkbu3hil6b3jrN+4
      zJTkpVDEiRmlnDnVwVjPVYLCjZKKIlW2cLKjMXMDSULTHLjcGrUVRSR0k7s3Bwi8dRxndInr
      E2GOtlby/Q+XqfDXsrEwz95zH+FeHuTmXJIiVUer3MPBVj8SoDlU1paXSZQ14K+vQQb6b/bR
      0XUcR3SOK+MGZ5o0fugbx+d1EQyGaD92HufqEP1zKUocabTKdroqYlweXkJKJGjpOoQxP8J0
      WMKjGMSkUs4fa2Jo8Danzh59JTNMvqKqKqqqsri4SCgUorOzc7tNeiGyC8DSudv/E3OTTrSi
      Uo6dbkNilXg0CZZJNJmmta2JhkofGmmS0TgmYCQddJ47SjVw/cpFzPAcS6KG8yf2Ep67xejq
      o0iqZca48tWXjLpUHCV+zhS7GUsmsESmRVEsmUJYgtK6ZroPHiB85yL3ohCeWmL/oVMUaAl6
      rtwm2uynSJFoOHAGeXyEn698D8UB3j3RQTKRQAjATBNNGAgLvP5dHOloJLR0i+Hbk8SDG3S/
      fQIHOteu/EKquImVsMm/vnuGAmuD70Iuzpw+hBld4GrvPGARj8Zf5W+Ttwgh6Onpobu7O6/z
      fJ6F7NbLGq0Hj9NQtMr1WYVix68mfGcZFy6cZWZ8lO9uDnDs3NvZ7yQ/eY1eVgo4/bdzNBf+
      /m/ZsFJhZqamcKoSdXt349q6tiSr1Le+RX1LJwP/908WjI6s1xGWiZAUjHSEmYkJZKBhXwea
      HMNf30SBU4EEiBeIbbxprK6uMjs7ywcffLDdprwwzyBfmbKmLk5IA/zjYh8XztZnPk5s0jc0
      hqppqOpTRkZRPfXKZb77bh7iG1CdfdoUeoiB3l6k2BIR6cmd1/c1NTGwFKaySMOQvVsLugZT
      Qze4txLHoQhCkpc2Be4ngvT338DanCWh7gYcLEyM0BtbYHk1wtFz59EL1uldDFNXrGIkDcSv
      K6a4ymj13ePbf17ErSQImY/n+9wZ6MXXuh9HeIb78RI6m9/sfKBr165x+PDhvIlvvAhZA2EP
      Sn4ripyprqAbqJqCaVgoqkw6lSKtG2hON06HgqmbyJqCMEwkVUUGDMNAUSAeTaM6FJbHB5kX
      fo53NABgmQbI6mMrKaaeIp5Mo2qOjM+pSJiWQFUUhGlgSSqyZJFKJDAscLhcaKqChMAyjUwV
      OEvC43ajqQqmniKWSONwOjIVJjan6Zk16Npds2W7CsIilYijWxJOlwtNBlNIW+UTTWLRJKqm
      Elsdp28G3j3RhmFkUn1NQ0dWVbBMLOSHJRffpE3x//2f/4LPm6l5lE6nURTlhTM98yEQlqNI
      sM7d/l4mV8J4Sms41NVOgWP7Xh31yArTIZmWuvJnPMNkdmyQ0ZlVNI+PQ0cOUeJ6uv2WZRGJ
      JTFFfvhOAoGe1p8rO7Ok0PWwccjLYgcJYGdip0JkJx8E8Hq/wr8GzK6ECcbypFacEBiGgfoE
      QRa6NPY0lG8dJlhcXOTWrVvU19fT2tq6rYP0VZJVAKaRJLgewkTCXVSM1+MEdILrcYp9xb+J
      gFpENjZxlPhw/olIu56IsBGOgyRTXOrDqSkvFFwSlklofYXNuEFpeSXFEpaARAAACDxJREFU
      ryh8L4RJcCNMqa806+rQ33+++1q8A+ypL+O//v09ABYXF/niiy/o7u4mGAxmMkjzfGfX85J1
      qMZCc4yMzBAOrzN45SITGykEOutrm/x+/7pFeGOd9J/c/7Byu4/x1Qib64tc/uEq4dSTu0I+
      G4KViQEG7s4Ti4YYGRrjxfrOZ8NgbS3Im+Y/CiG4dOkS77//Ph0dHXR3d7+xgx+eMgNYQuAt
      r6WlpZZdfpWLg/PsOlWFLKlIksHUyCD3FoKU17Wyv60WYakommBtepKVeIipyXnq247R0VRO
      ZOU+w7fukcJJw552WmoyXR8tw6K6ZTfNheCOXWU+nCSRXKe0JoCaDjG9niRQXsTU9DhrS4us
      G0Wce+cEWnKdG739xCig82AXVVsrFMHVFap3v8PeSvfDJ/Pc7AzVtQHU1AZ31y12+RTuTc+y
      NDeHUhrgSFcbcmqd3p5+4lIhXUcOUyZHmQoapJamcdTsodoZZ3h4jIiuULOrlbZG3xs5MEzT
      ZGxsjLm5OaqqqohEInz66ad5v7HleXmKsyJIJWJsbqwx0j9OZWMlEOPe6CxmYpnRRYtTZ87Q
      WlOCQOf+6DhxBKvjd0n7dvG3D95nc2qEdCrI9RsT7Dt6mrd2lbK09KuWQcIiGg4R2txgZiNO
      iUtjYWaClAVmYpO7M4sYqRjjM0scOPkuRyvC3FmDob5e/B0nOH2onpEbt0kJAIn61nbm+r/n
      28vXWQklEMD96QlMC0isMzq9ihnfYHZTcOr8BQKudUYmVhju6aPu4BnOdgcY6BnCiK1x6fJV
      dG8dDT6Zvl9GqDtwnFOHm5mbmgOR4u7Y5Bs3A0iSREVFBZ988gkff/wxJSUlzM29uR1usgtA
      mCzN3OGHv/8Pa7632F9X+Mg/d1ext0qi9+crDE2tPFZxQZI9VFeXIElOHJqA6AZKzW58Hkem
      jeivb2GluDPUx8DQLQIHT+J/YkkRiZKKKjyagtPlwLJgY2OFmds36RuZwTBi6FuuV0F5gPf+
      8gEnOmu59vX3RP5ghBZ6i9EUhdLqKuLLy8xvbrIw1s+N4fvoIoZpQf2+bjp316ClY6RLaqgt
      dmfapD7jl/s6IssyBw4c4NKlS8TjccLhMB6PZ7vNemVkXwWSVAJ7D/JWeynXvv2G8Yr32P0g
      yGlY1OzrolmVGP7xaxYjWbqiFFXAUi+r4TKCC/PEpUf7ZiXFzaFTj6dCGEYK0xSkUwnS+pNf
      KkqLK6juOEhtsYNkPIFDBTDZWN2goLQMT0kVlYUSSRPSuo4QFslkAtPMuC0CgRAGK9NzeBu6
      cKUXqNvfjd+jkEjEcSTmUeStF3K3F3d4iPvrAbS1WcL64xKIhjZxFHiRjARJU6XoNc6blySJ
      kydP8tVXX/H555+zb98+qqurn37ia0pWAbjcPqorNWTVw8kLf2Xo5h308l3s2lOLTJqx3gFi
      hoXL10adV4U9TXiQKAs08MBjrG0IoGjFnDrVyeBgP6qzEI/2aA7w+gMYv4nLBAJ1DP58GVXV
      aKxvRHV6qK3OKM/hC1Dtgupjx7jec40JIfDW7uNAawEgQ2qdi19fx0ChseMIlSpY9ZVc/+kq
      mqayu243EGXuzgCXVyZxVe3maKMPq+ooP167xLgsUdzQQaffR2BrUz+KhyOnjjA0MACFRXgd
      OkgOmlsCSMDa0gLFDQVosTWWk0WvtQAgk/H54YcfbrcZOeEFN8U/OjX7OnGSW72DrCd1EvEE
      zW8dp7nqj9sTIcRDjyrbdR/eX5Ied6u2Pn947m+ul1qboG9J4Xh7AJB4dNjDo36ztKkzOTzE
      /GYcPRmjrOUIBxp9Wf7fDJZlceXmNOPzm089NhcIwDLNJ768V5YW8OHJPTm1Jx8CYTmKBAvS
      yYw7I6sO3C7ntmZWCstAtyQc6rOu4gj0VJJU2kBSNNxuV9ZdYA+wLAtd1/NmtUgIkVelCjN5
      YspOEMDO5EEqRL4IADKDLp8EsN225Mc38YaTN53Zt551+WLPgzpKdlmUN5Tt/nGfRL4Mfnja
      e2OObLBdIJudTP48DmxstgFbADY7GvslOAcIIQjO36Hn5gR1+w7T3lT5DIV6Xy7xtfuMTK2i
      yFBYVkdLoOqZlnJfJkJYpGKbjE2t0tWZiTnosQ1+6elFL/DTneOdgkIIewbIBVZqlSv9S5z/
      ywXiEze4H0zk2ALB6uQYnoZ22tvbaaot25aCXuH521z6qY/Bew+66AhuXLtK/YHTdPjS/Dw8
      ldPkwtTqpC2AXJCcv0NZezcORWX/Xj/3l7O0iXoVCIPVoIrPC4rqQNPUbQlEFte18f65U5R7
      HjzlN0lZNVT73JQ3t+BaXyOXjwZXZbPtAuUCXdfxFGcyKl0uF3roRTb9PA8ytS21LNwaZnRp
      Dqm8jXeO7EHZ9lVIHVn1ZOyQnLgUi1z3k7EFkAOcBQUEV9cQ/go2gyHcjhzXDZIU/Lv24geE
      OMQ3X/+DtNGCW9tuB8CNnlpDNwWyGWHTUMl1+QBbADnA6W9DDF5izNnC/YkIh854c3p/S09x
      e2SAtOZFTq0jFzWi5fzxb7ExP8304hpLCwsMDAwQ2HMAv8+g/+YIanSJkqZOcpdHK4iszNqB
      sJwgBIlokGA4ibOwGJ+3IKc+uBCCVCzERjiOEBK+yqptePoLEpEQ4Xhqq52VhNdXiZMkq2tB
      LMVJeZkvh8IUpGIRWwA2O5vtdgJtbLYVWwA2OxpbADY7GlsANjsaWwA2OxpbADY7GlsANjsa
      WwA2OxpbADY7GlsANjsaWwA2OxpbADY7GlsANjsaWwA2OxpbADY7GlsANjsaWwA2O5r/B/Oh
      TjAhiZjuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='69' name='Total Seasons' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Venue Dashboard' width='192'>
      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
      x68QlcXMX3uJvW4AGTSu0166wV4/sqB5g/biJYJOfddl4mCJ+twFku4czfkLBO3G7sp1F2jM
      XSSNWrSXLtNtLu6qXBq3WLr1jq5v/Tyt+vzuykVNlmbfRSUtmvOXiHeZgjIJG9Rnz+n7W7xC
      pzG7q3JxsEh74Tydpes05y/QbS1te+6hcgCSANMfQ8rdV1uaeg5ir2td2gsXdb6jdG97i0VB
      A6FCknhv5YQQpEm8ZbdyOyy3immaJFFEYegkWbK7hmV5Qximofd9yzKsbfZv3ohhFbEcjzRc
      JIoi0mR3K+gMu4Rlu8SdRTAs4mB3jmo6ZUzbQQiJSiLUpm71Ntcz3RUlWRg6hUq3f18OlwOY
      PlmgJ9F2S9CcXaNLdo8/dBrHryH3GDlqe1X97b/n1WVCJwDYw3ZLcbBIHDSRpkVn8SqGvbuG
      HHcXiIMm3cYNlLBQaneLhdKoSRw0SbEp1qZ7YTJ3JgkbOlugVUBkWW+2fzfl6sRBkzgKMSx3
      14unus2bvQTMHp3Fq0hr+/dFqN7sVpqm/K2/90XOPPrRXV3kXnHnzTXuLfuun1J7XiG38bqD
      +p6sZb/vz37v707l9hUNei8Z9A953/XbsAz1rl33LrPfer5f5Q5XFygnp8/kDpBz7+glSLgT
      aRLvalRN7dLeWg5dFyjn8NCafZ1LN1uUPRidfhxTQppBu3kbwzDxPJuL757j5CMfIgsXUWYJ
      y8hIUoHvudyeuUqlVuKVF57jQz/9C7z89d/m6Z/4y7z0zS/y9LN/njARzF19mdETz0DcJAkX
      WWhLjh1/kLB5E7c8RdC4jl2cIK5fIDRqzFx8nVqtyuj0I7RaLf5//7lyjZzmpWcAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Zero Wickets' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
